#
#  Copyright Statement:
#  --------------------
#  This software is protected by Copyright and the information contained
#  herein is confidential. The software may not be copied and the information
#  contained herein may not be used or disclosed except with the written
#  permission of MediaTek Inc. (C) 2005
#
#  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
#  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
#  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
#  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
#  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
#  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
#  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
#  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
#  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
#  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
#
#  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
#  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
#  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
#  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
#  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
#
#  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
#  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
#  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
#  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
#  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
# *************************************************************************

ifeq ($(strip $(MTK_MODEM_ARCH)), MT6293)
  MD_VER_FOLDER = md93
endif
ifeq ($(strip $(MTK_MODEM_ARCH)), MT6295)
  MD_VER_FOLDER = md95
endif

L1_UMTS=FALSE
ifeq ($(strip $(L1_WCDMA)),TRUE)
  L1_UMTS=TRUE
endif
ifeq ($(strip $(L1_TDD128)),TRUE)
  L1_UMTS=TRUE
endif

ETCM = FALSE
ifneq ($(strip $(EUTRAN_MODE_SUPPORT)),NONE)
  ETCM = TRUE
endif

ifndef SMART_PHONE_CORE
  SMART_PHONE_CORE = NONE
endif

ifndef AST_SUPPORT
  AST_SUPPORT = NONE
endif

# Poying: There should be some feature option defining __UGTCM__
UGTCM = FALSE
ifneq ($(strip $(GERAN_MODE_SUPPORT)),NONE)
  UGTCM = TRUE
else
  ifneq ($(strip $(UTRAN_MODE_SUPPORT)),NONE)
    UGTCM = TRUE
  endif
endif

ifndef RTOS
  RTOS = NUCLEUS
endif
ifndef RTOS_DEBUG
  RTOS_DEBUG = TRUE
endif

# UMTS_BAND_SUPPORT Options
UMTS_SUPPORT_BAND =
ifdef UMTS_BAND_I
  ifeq ($(strip $(UMTS_BAND_I)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_I__
  endif
endif
ifdef UMTS_BAND_II
  ifeq ($(strip $(UMTS_BAND_II)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_II__
  endif
endif
ifdef UMTS_BAND_III
  ifeq ($(strip $(UMTS_BAND_III)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_III__
  endif
endif
ifdef UMTS_BAND_IV
  ifeq ($(strip $(UMTS_BAND_IV)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_IV__
  endif
endif
ifdef UMTS_BAND_V
  ifeq ($(strip $(UMTS_BAND_V)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_V__
    UMTS_SUPPORT_BAND  += __UMTS_BAND_VI__
  endif
endif
ifdef UMTS_BAND_VI
  ifeq ($(strip $(UMTS_BAND_VI)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_V__
    UMTS_SUPPORT_BAND  += __UMTS_BAND_VI__
  endif
endif
ifdef UMTS_BAND_VII
  ifeq ($(strip $(UMTS_BAND_VII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_VII__
  endif
endif
ifdef UMTS_BAND_VIII
  ifeq ($(strip $(UMTS_BAND_VIII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_VIII__
  endif
endif
ifdef UMTS_BAND_IX
  ifeq ($(strip $(UMTS_BAND_IX)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_IX__
  endif
endif
ifdef UMTS_BAND_X
  ifeq ($(strip $(UMTS_BAND_X)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_X__
  endif
endif
ifeq ($(strip $(UMTS_BAND_XI)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XI__
endif
ifeq ($(strip $(UMTS_BAND_XII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XII__
endif
ifeq ($(strip $(UMTS_BAND_XIII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XIII__
endif
ifeq ($(strip $(UMTS_BAND_XIV)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XIV__
endif
ifeq ($(strip $(UMTS_BAND_XV)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XV__
endif
ifeq ($(strip $(UMTS_BAND_XVI)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XVI__
endif
ifeq ($(strip $(UMTS_BAND_XVII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XVII__
endif
ifeq ($(strip $(UMTS_BAND_XVIII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XVIII__
endif
ifeq ($(strip $(UMTS_BAND_XIX)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XIX__
endif
ifeq ($(strip $(UMTS_BAND_XX)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XX__
endif
ifeq ($(strip $(UMTS_BAND_XXI)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XXI__
endif
ifeq ($(strip $(UMTS_BAND_XXII)),TRUE)
    UMTS_SUPPORT_BAND  += __UMTS_BAND_XXII__
endif
# UMTS_BAND_SUPPORT Options end

SV5_PLATFORM = MT6280 $(strip $(SUPPORT_PLATFORM))
SV5X_PLATFORM = MT6290

ifndef MAX_MIDI_FILE_SIZE
  MAX_MIDI_FILE_SIZE = 2097152
endif

SAIC_NOT_SUPPORT_FLATFORM = MT6205 MT6205B MT6208 MT6217 MT6218 MT6218B MT6219 MT6225 MT6226 MT6226D MT6226M MT6227 MT6227D MT6228 MT6229 MT6230
REPEATED_ACCH_NOT_SUPPORT_FLATFORM = MT6205 MT6205B MT6208 MT6217 MT6218 MT6218B MT6219 MT6223 MT6223P MT6225 MT6226 MT6226D MT6226M MT6227 MT6227D MT6228 MT6229 MT6230 MT6235B MT6238 MT6239 MT6268T MT6268H
VAMOS_CAP_DEFAULT_NOT_SUPPORT_FLATFORM = MT6280

ifndef MELODY_BUFFER_LEN
  ifeq ($(strip $(MED_PROFILE)),MED_MODEM)
     MELODY_BUFFER_LEN = 512
  else
    ifeq ($(strip $(MED_PROFILE)),MED_LOW)
      MELODY_BUFFER_LEN = 1300
    else
      MELODY_BUFFER_LEN = 102400
    endif
  endif
endif 

ifdef OPTR_CODE
  ifeq ($(strip $(OPTR_CODE)),OP12)
    MELODY_BUFFER_LEN = 307200
  endif
endif

ifndef PHB_NAME_LENGTH
  PHB_NAME_LENGTH = 40
endif

MMA_MAX_NUM_VALUE = 2 3 4 5 6 7 8 9 10 11 12

32K_CRYSTAL_REMOVAL_SUPPORT_PLATFORM = MT6280 MT6290 $(strip $(SUPPORT_PLATFORM))
QUERY_32K_CRYSTAL_FROM_MD_PLATFORM = MT6280 MT6290
QUERY_32K_CRYSTAL_FROM_AP_PLATFORM = $(strip $(SUPPORT_PLATFORM))

# UL1 COMPLIST
UL1_HS_PLUS_PLATFORM = TK6280 MT6280 MT6589 MT6290 MT6595 $(strip $(SUPPORT_PLATFORM))
ifneq ($(strip $(UTRAN_MODE_SUPPORT)),NONE)
  UL1_SUPPORT = TRUE
else
  ifneq ($(strip $(GERAN_MODE_SUPPORT)),NONE)
    ifeq ($(strip $(TEST_LOAD_TYPE)),L1S)
      UL1_SUPPORT = TRUE
    endif
  endif
endif
ifeq ($(strip $(UL1_SUPPORT)),TRUE)
  ifdef L1_WCDMA
    ifeq ($(strip $(L1_WCDMA)),TRUE)
      ifeq ($(strip $(UMTS_FDD_SUPPORT)),UMTS_FDD_MODE_SUPPORT)
        UMTS_FDD_PLATFORM = FALSE
        ifneq ($(filter $(strip $(PLATFORM)),$(UL1_HS_PLUS_PLATFORM)),)
          UMTS_FDD_PLATFORM = TRUE
        endif
      endif
    endif
  endif
endif

ifeq ($(strip $(SMART_PHONE_CORE)),ANDROID_MODEM)
  ifdef MDSYS
    ifeq ($(strip $(MDSYS)),MD2)
      BT_SCO_SW_CODEC_PATH = ${COMMON_ROOT}/driver/audio/lib/MTKGCC_ARM9
    else
      BT_SCO_SW_CODEC_PATH = ${COMMON_ROOT}/driver/audio/lib/MTKGCC_CR4
    endif
  else
    BT_SCO_SW_CODEC_PATH = ${COMMON_ROOT}/driver/audio/lib/MTKGCC_CR4
  endif
    
  ifdef MTK_BT_CHIP
    BLUETOOTH_SCO_SW_CODEC_BT_CHIP = MTK_CONSYS_$(PLATFORM)
  else
    #Add in case of MTK_BT_CHIP missing definition
    BLUETOOTH_SCO_SW_CODEC_PLATFORM = $(PLATFORM)
  endif
endif

ARM9_PLATFORM = MT6238 MT6239 MT6235B MT6236 MT6236B MT6268A MT6270A MT6921 MT6255 MT6922
ARM11_PLATFORM = MT6256 MT6276 MT6573 MT6575 MT6577
CR4_PLATFORM = TK6280 MT6280 MT6290 MT6595 TK6291 MT6755 MT6797
