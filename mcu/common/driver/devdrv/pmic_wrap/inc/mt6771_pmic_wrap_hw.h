/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2014
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *  mt6771_pmic_wrap_hw.h
 *
 * Project:
 * --------
 *  Maui_Software
 *
 * Description:
 * ------------
 *	This is mt6771 pmic wrapper h/w register
 *
 * Author:
 * -------
 * -------
 *
 *============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 * removed!
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *============================================================================
 ****************************************************************************/

#ifndef __MT6771_PMIC_WRAP_HW_H__
#define __MT6771_PMIC_WRAP_HW_H__

#if !defined(FPGA_CTP)
#include "reg_base.h"

#define PMIC_WRAP_BASE				(BASE_MADDR_APMCU_MISC)
#else
#define PMIC_WRAP_BASE					(0x1000d000)
#define CKSYS_BASE                      (0x10000000)
#define INFRACFG_AO_BASE                (0x10001000)
#endif

#define PMIC_WRAP_MUX_SEL	((PMIC_WRAP_BASE+0x0))
#define PMIC_WRAP_WRAP_EN	((PMIC_WRAP_BASE+0x4))
#define PMIC_WRAP_DIO_EN	((PMIC_WRAP_BASE+0x8))
#define PMIC_WRAP_SI_SAMPLE_CTRL	((PMIC_WRAP_BASE+0xC))
#define PMIC_WRAP_SI_SAMPLE_CTRL_ULPOSC	((PMIC_WRAP_BASE+0x10))
#define PMIC_WRAP_RDDMY	((PMIC_WRAP_BASE+0x14))
#define PMIC_WRAP_CSHEXT_WRITE	((PMIC_WRAP_BASE+0x18))
#define PMIC_WRAP_CSHEXT_READ	((PMIC_WRAP_BASE+0x1C))
#define PMIC_WRAP_CSLEXT_WRITE	((PMIC_WRAP_BASE+0x20))
#define PMIC_WRAP_CSLEXT_READ	((PMIC_WRAP_BASE+0x24))
#define PMIC_WRAP_EXT_CK_WRITE	((PMIC_WRAP_BASE+0x28))
#define PMIC_WRAP_EXT_CK_READ	((PMIC_WRAP_BASE+0x2C))
#define PMIC_WRAP_STAUPD_CTRL	((PMIC_WRAP_BASE+0x30))
#define PMIC_WRAP_STAUPD_GRPEN	((PMIC_WRAP_BASE+0x34))
#define PMIC_WRAP_EINT_STA0_ADR	((PMIC_WRAP_BASE+0x38))
#define PMIC_WRAP_EINT_STA1_ADR	((PMIC_WRAP_BASE+0x3C))
#define PMIC_WRAP_EINT_STA	((PMIC_WRAP_BASE+0x40))
#define PMIC_WRAP_EINT_CLR	((PMIC_WRAP_BASE+0x44))
#define PMIC_WRAP_EINT_CTRL	((PMIC_WRAP_BASE+0x48))
#define PMIC_WRAP_STAUPD_MAN_TRIG	((PMIC_WRAP_BASE+0x4C))
#define PMIC_WRAP_STAUPD_STA	((PMIC_WRAP_BASE+0x50))
#define PMIC_WRAP_WRAP_STA	((PMIC_WRAP_BASE+0x54))
#define PMIC_WRAP_HARB_INIT	((PMIC_WRAP_BASE+0x58))
#define PMIC_WRAP_HARB_HPRIO	((PMIC_WRAP_BASE+0x5C))
#define PMIC_WRAP_HPRIO_ARB_EN	((PMIC_WRAP_BASE+0x60))
#define PMIC_WRAP_HARB_STA0	((PMIC_WRAP_BASE+0x64))
#define PMIC_WRAP_HARB_STA1	((PMIC_WRAP_BASE+0x68))
#define PMIC_WRAP_HARB_STA2	((PMIC_WRAP_BASE+0x6C))
#define PMIC_WRAP_MAN_EN	((PMIC_WRAP_BASE+0x70))
#define PMIC_WRAP_MAN_CMD	((PMIC_WRAP_BASE+0x74))
#define PMIC_WRAP_MAN_RDATA	((PMIC_WRAP_BASE+0x78))
#define PMIC_WRAP_MAN_VLDCLR	((PMIC_WRAP_BASE+0x7C))
#define PMIC_WRAP_WACS0_EN	((PMIC_WRAP_BASE+0x80))
#define PMIC_WRAP_INIT_DONE0	((PMIC_WRAP_BASE+0x84))
#define PMIC_WRAP_WACS1_EN	((PMIC_WRAP_BASE+0x88))
#define PMIC_WRAP_INIT_DONE1	((PMIC_WRAP_BASE+0x8C))
#define PMIC_WRAP_WACS2_EN	((PMIC_WRAP_BASE+0x90))
#define PMIC_WRAP_INIT_DONE2	((PMIC_WRAP_BASE+0x94))
#define PMIC_WRAP_WACS3_EN	((PMIC_WRAP_BASE+0x98))
#define PMIC_WRAP_INIT_DONE3	((PMIC_WRAP_BASE+0x9C))
#define PMIC_WRAP_WACS_P2P_EN	((PMIC_WRAP_BASE+0xA0))
#define PMIC_WRAP_INIT_DONE_P2P	((PMIC_WRAP_BASE+0xA4))
#define PMIC_WRAP_WACS_MD32_EN	((PMIC_WRAP_BASE+0xA8))
#define PMIC_WRAP_INIT_DONE_MD32	((PMIC_WRAP_BASE+0xAC))
#define PMIC_WRAP_INT0_EN	((PMIC_WRAP_BASE+0xB0))
#define PMIC_WRAP_INT0_FLG_RAW	((PMIC_WRAP_BASE+0xB4))
#define PMIC_WRAP_INT0_FLG	((PMIC_WRAP_BASE+0xB8))
#define PMIC_WRAP_INT0_CLR	((PMIC_WRAP_BASE+0xBC))
#define PMIC_WRAP_INT1_EN	((PMIC_WRAP_BASE+0xC0))
#define PMIC_WRAP_INT1_FLG_RAW	((PMIC_WRAP_BASE+0xC4))
#define PMIC_WRAP_INT1_FLG	((PMIC_WRAP_BASE+0xC8))
#define PMIC_WRAP_INT1_CLR	((PMIC_WRAP_BASE+0xCC))
#define PMIC_WRAP_SIG_ADR	((PMIC_WRAP_BASE+0xD0))
#define PMIC_WRAP_SIG_MODE	((PMIC_WRAP_BASE+0xD4))
#define PMIC_WRAP_SIG_VALUE	((PMIC_WRAP_BASE+0xD8))
#define PMIC_WRAP_SIG_ERRVAL	((PMIC_WRAP_BASE+0xDC))
#define PMIC_WRAP_CRC_EN	((PMIC_WRAP_BASE+0xE0))
#define PMIC_WRAP_TIMER_EN	((PMIC_WRAP_BASE+0xE4))
#define PMIC_WRAP_TIMER_STA	((PMIC_WRAP_BASE+0xE8))
#define PMIC_WRAP_WDT_UNIT	((PMIC_WRAP_BASE+0xEC))
#define PMIC_WRAP_WDT_SRC_EN_0	((PMIC_WRAP_BASE+0xF0))
#define PMIC_WRAP_WDT_SRC_EN_1	((PMIC_WRAP_BASE+0xF4))
#define PMIC_WRAP_WDT_FLG_0	((PMIC_WRAP_BASE+0xF8))
#define PMIC_WRAP_WDT_FLG_1	((PMIC_WRAP_BASE+0xFC))
#define PMIC_WRAP_DEBUG_INT_SEL	((PMIC_WRAP_BASE+0x100))
#define PMIC_WRAP_DVFS_ADR0	((PMIC_WRAP_BASE+0x104))
#define PMIC_WRAP_DVFS_WDATA0	((PMIC_WRAP_BASE+0x108))
#define PMIC_WRAP_DVFS_ADR1	((PMIC_WRAP_BASE+0x10C))
#define PMIC_WRAP_DVFS_WDATA1	((PMIC_WRAP_BASE+0x110))
#define PMIC_WRAP_DVFS_ADR2	((PMIC_WRAP_BASE+0x114))
#define PMIC_WRAP_DVFS_WDATA2	((PMIC_WRAP_BASE+0x118))
#define PMIC_WRAP_DVFS_ADR3	((PMIC_WRAP_BASE+0x11C))
#define PMIC_WRAP_DVFS_WDATA3	((PMIC_WRAP_BASE+0x120))
#define PMIC_WRAP_DVFS_ADR4	((PMIC_WRAP_BASE+0x124))
#define PMIC_WRAP_DVFS_WDATA4	((PMIC_WRAP_BASE+0x128))
#define PMIC_WRAP_DVFS_ADR5	((PMIC_WRAP_BASE+0x12C))
#define PMIC_WRAP_DVFS_WDATA5	((PMIC_WRAP_BASE+0x130))
#define PMIC_WRAP_DVFS_ADR6	((PMIC_WRAP_BASE+0x134))
#define PMIC_WRAP_DVFS_WDATA6	((PMIC_WRAP_BASE+0x138))
#define PMIC_WRAP_DVFS_ADR7	((PMIC_WRAP_BASE+0x13C))
#define PMIC_WRAP_DVFS_WDATA7	((PMIC_WRAP_BASE+0x140))
#define PMIC_WRAP_DVFS_ADR8	((PMIC_WRAP_BASE+0x144))
#define PMIC_WRAP_DVFS_WDATA8	((PMIC_WRAP_BASE+0x148))
#define PMIC_WRAP_DVFS_ADR9	((PMIC_WRAP_BASE+0x14C))
#define PMIC_WRAP_DVFS_WDATA9	((PMIC_WRAP_BASE+0x150))
#define PMIC_WRAP_DVFS_ADR10	((PMIC_WRAP_BASE+0x154))
#define PMIC_WRAP_DVFS_WDATA10	((PMIC_WRAP_BASE+0x158))
#define PMIC_WRAP_DVFS_ADR11	((PMIC_WRAP_BASE+0x15C))
#define PMIC_WRAP_DVFS_WDATA11	((PMIC_WRAP_BASE+0x160))
#define PMIC_WRAP_DVFS_ADR12	((PMIC_WRAP_BASE+0x164))
#define PMIC_WRAP_DVFS_WDATA12	((PMIC_WRAP_BASE+0x168))
#define PMIC_WRAP_DVFS_ADR13	((PMIC_WRAP_BASE+0x16C))
#define PMIC_WRAP_DVFS_WDATA13	((PMIC_WRAP_BASE+0x170))
#define PMIC_WRAP_DVFS_ADR14	((PMIC_WRAP_BASE+0x174))
#define PMIC_WRAP_DVFS_WDATA14	((PMIC_WRAP_BASE+0x178))
#define PMIC_WRAP_DVFS_ADR15	((PMIC_WRAP_BASE+0x17C))
#define PMIC_WRAP_DVFS_WDATA15	((PMIC_WRAP_BASE+0x180))
#define PMIC_WRAP_DCXO_ENABLE	((PMIC_WRAP_BASE+0x184))
#define PMIC_WRAP_DCXO_CONN_ADR0	((PMIC_WRAP_BASE+0x188))
#define PMIC_WRAP_DCXO_CONN_WDATA0	((PMIC_WRAP_BASE+0x18C))
#define PMIC_WRAP_DCXO_CONN_ADR1	((PMIC_WRAP_BASE+0x190))
#define PMIC_WRAP_DCXO_CONN_WDATA1	((PMIC_WRAP_BASE+0x194))
#define PMIC_WRAP_DCXO_NFC_ADR0	((PMIC_WRAP_BASE+0x198))
#define PMIC_WRAP_DCXO_NFC_WDATA0	((PMIC_WRAP_BASE+0x19C))
#define PMIC_WRAP_DCXO_NFC_ADR1	((PMIC_WRAP_BASE+0x1A0))
#define PMIC_WRAP_DCXO_NFC_WDATA1	((PMIC_WRAP_BASE+0x1A4))
#define PMIC_WRAP_SPMINF_STA_0	((PMIC_WRAP_BASE+0x1A8))
#define PMIC_WRAP_SPMINF_STA_1	((PMIC_WRAP_BASE+0x1AC))
#define PMIC_WRAP_SPMINF_BACKUP_STA	((PMIC_WRAP_BASE+0x1B0))
#define PMIC_WRAP_SCPINF_STA	((PMIC_WRAP_BASE+0x1B4))
#define PMIC_WRAP_CIPHER_KEY_SEL	((PMIC_WRAP_BASE+0x1B8))
#define PMIC_WRAP_CIPHER_IV_SEL	((PMIC_WRAP_BASE+0x1BC))
#define PMIC_WRAP_CIPHER_EN	((PMIC_WRAP_BASE+0x1C0))
#define PMIC_WRAP_CIPHER_RDY	((PMIC_WRAP_BASE+0x1C4))
#define PMIC_WRAP_CIPHER_MODE	((PMIC_WRAP_BASE+0x1C8))
#define PMIC_WRAP_CIPHER_SWRST	((PMIC_WRAP_BASE+0x1CC))
#define PMIC_WRAP_DCM_EN	((PMIC_WRAP_BASE+0x1D0))
#define PMIC_WRAP_DCM_SPI_DBC_PRD	((PMIC_WRAP_BASE+0x1D4))
#define PMIC_WRAP_DCM_DBC_PRD	((PMIC_WRAP_BASE+0x1D8))
#define PMIC_WRAP_INT_GPS_AUXADC_CMD_ADDR	((PMIC_WRAP_BASE+0x1DC))
#define PMIC_WRAP_INT_GPS_AUXADC_CMD	((PMIC_WRAP_BASE+0x1E0))
#define PMIC_WRAP_INT_GPS_AUXADC_RDATA_ADDR	((PMIC_WRAP_BASE+0x1E4))
#define PMIC_WRAP_EXT_GPS_AUXADC_RDATA_ADDR	((PMIC_WRAP_BASE+0x1E8))
#define PMIC_WRAP_GPSINF_0_STA	((PMIC_WRAP_BASE+0x1EC))
#define PMIC_WRAP_GPSINF_1_STA	((PMIC_WRAP_BASE+0x1F0))
#define PMIC_WRAP_MD_ADCINF_CTRL	((PMIC_WRAP_BASE+0x1F4))
#define PMIC_WRAP_MD_AUXADC_RDATA_LATEST_ADDR	((PMIC_WRAP_BASE+0x1F8))
#define PMIC_WRAP_MD_AUXADC_RDATA_WP_ADDR	((PMIC_WRAP_BASE+0x1FC))
#define PMIC_WRAP_MD_AUXADC_RDATA_0_ADDR	((PMIC_WRAP_BASE+0x200))
#define PMIC_WRAP_MD_AUXADC_RDATA_1_ADDR	((PMIC_WRAP_BASE+0x204))
#define PMIC_WRAP_MD_AUXADC_RDATA_2_ADDR	((PMIC_WRAP_BASE+0x208))
#define PMIC_WRAP_MD_AUXADC_RDATA_3_ADDR	((PMIC_WRAP_BASE+0x20C))
#define PMIC_WRAP_MD_AUXADC_RDATA_4_ADDR	((PMIC_WRAP_BASE+0x210))
#define PMIC_WRAP_MD_AUXADC_RDATA_5_ADDR	((PMIC_WRAP_BASE+0x214))
#define PMIC_WRAP_MD_AUXADC_RDATA_6_ADDR	((PMIC_WRAP_BASE+0x218))
#define PMIC_WRAP_MD_AUXADC_RDATA_7_ADDR	((PMIC_WRAP_BASE+0x21C))
#define PMIC_WRAP_MD_AUXADC_RDATA_8_ADDR	((PMIC_WRAP_BASE+0x220))
#define PMIC_WRAP_MD_AUXADC_RDATA_9_ADDR	((PMIC_WRAP_BASE+0x224))
#define PMIC_WRAP_MD_AUXADC_RDATA_10_ADDR	((PMIC_WRAP_BASE+0x228))
#define PMIC_WRAP_MD_AUXADC_RDATA_11_ADDR	((PMIC_WRAP_BASE+0x22C))
#define PMIC_WRAP_MD_AUXADC_RDATA_12_ADDR	((PMIC_WRAP_BASE+0x230))
#define PMIC_WRAP_MD_AUXADC_RDATA_13_ADDR	((PMIC_WRAP_BASE+0x234))
#define PMIC_WRAP_MD_AUXADC_RDATA_14_ADDR	((PMIC_WRAP_BASE+0x238))
#define PMIC_WRAP_MD_AUXADC_RDATA_15_ADDR	((PMIC_WRAP_BASE+0x23C))
#define PMIC_WRAP_MD_AUXADC_RDATA_16_ADDR	((PMIC_WRAP_BASE+0x240))
#define PMIC_WRAP_MD_AUXADC_RDATA_17_ADDR	((PMIC_WRAP_BASE+0x244))
#define PMIC_WRAP_MD_AUXADC_RDATA_18_ADDR	((PMIC_WRAP_BASE+0x248))
#define PMIC_WRAP_MD_AUXADC_RDATA_19_ADDR	((PMIC_WRAP_BASE+0x24C))
#define PMIC_WRAP_MD_AUXADC_RDATA_20_ADDR	((PMIC_WRAP_BASE+0x250))
#define PMIC_WRAP_MD_AUXADC_RDATA_21_ADDR	((PMIC_WRAP_BASE+0x254))
#define PMIC_WRAP_MD_AUXADC_RDATA_22_ADDR	((PMIC_WRAP_BASE+0x258))
#define PMIC_WRAP_MD_AUXADC_RDATA_23_ADDR	((PMIC_WRAP_BASE+0x25C))
#define PMIC_WRAP_MD_AUXADC_RDATA_24_ADDR	((PMIC_WRAP_BASE+0x260))
#define PMIC_WRAP_MD_AUXADC_RDATA_25_ADDR	((PMIC_WRAP_BASE+0x264))
#define PMIC_WRAP_MD_AUXADC_RDATA_26_ADDR	((PMIC_WRAP_BASE+0x268))
#define PMIC_WRAP_MD_AUXADC_RDATA_27_ADDR	((PMIC_WRAP_BASE+0x26C))
#define PMIC_WRAP_MD_AUXADC_RDATA_28_ADDR	((PMIC_WRAP_BASE+0x270))
#define PMIC_WRAP_MD_AUXADC_RDATA_29_ADDR	((PMIC_WRAP_BASE+0x274))
#define PMIC_WRAP_MD_AUXADC_RDATA_30_ADDR	((PMIC_WRAP_BASE+0x278))
#define PMIC_WRAP_MD_AUXADC_RDATA_31_ADDR	((PMIC_WRAP_BASE+0x27C))
#define PMIC_WRAP_MD_ADCINF_0_STA_0	((PMIC_WRAP_BASE+0x280))
#define PMIC_WRAP_MD_ADCINF_0_STA_1	((PMIC_WRAP_BASE+0x284))
#define PMIC_WRAP_MD_ADCINF_1_STA_0	((PMIC_WRAP_BASE+0x288))
#define PMIC_WRAP_MD_ADCINF_1_STA_1	((PMIC_WRAP_BASE+0x28C))
#define PMIC_WRAP_SWRST	((PMIC_WRAP_BASE+0x290))
#define PMIC_WRAP_SPM_SLEEP_GATING_CTRL	((PMIC_WRAP_BASE+0x294))
#define PMIC_WRAP_SCP_SLEEP_GATING_CTRL	((PMIC_WRAP_BASE+0x298))
#define PMIC_WRAP_PRIORITY_USER_SEL_0	((PMIC_WRAP_BASE+0x29C))
#define PMIC_WRAP_PRIORITY_USER_SEL_1	((PMIC_WRAP_BASE+0x2A0))
#define PMIC_WRAP_PRIORITY_USER_SEL_2	((PMIC_WRAP_BASE+0x2A4))
#define PMIC_WRAP_PRIORITY_USER_SEL_3	((PMIC_WRAP_BASE+0x2A8))
#define PMIC_WRAP_PRIORITY_USER_SEL_4	((PMIC_WRAP_BASE+0x2AC))
#define PMIC_WRAP_ARBITER_OUT_SEL_0	((PMIC_WRAP_BASE+0x2B0))
#define PMIC_WRAP_ARBITER_OUT_SEL_1	((PMIC_WRAP_BASE+0x2B4))
#define PMIC_WRAP_ARBITER_OUT_SEL_2	((PMIC_WRAP_BASE+0x2B8))
#define PMIC_WRAP_ARBITER_OUT_SEL_3	((PMIC_WRAP_BASE+0x2BC))
#define PMIC_WRAP_ARBITER_OUT_SEL_4	((PMIC_WRAP_BASE+0x2C0))
#define PMIC_WRAP_STARV_COUNTER_0	((PMIC_WRAP_BASE+0x2C4))
#define PMIC_WRAP_STARV_COUNTER_1	((PMIC_WRAP_BASE+0x2C8))
#define PMIC_WRAP_STARV_COUNTER_2	((PMIC_WRAP_BASE+0x2CC))
#define PMIC_WRAP_STARV_COUNTER_3	((PMIC_WRAP_BASE+0x2D0))
#define PMIC_WRAP_STARV_COUNTER_4	((PMIC_WRAP_BASE+0x2D4))
#define PMIC_WRAP_STARV_COUNTER_5	((PMIC_WRAP_BASE+0x2D8))
#define PMIC_WRAP_STARV_COUNTER_6	((PMIC_WRAP_BASE+0x2DC))
#define PMIC_WRAP_STARV_COUNTER_7	((PMIC_WRAP_BASE+0x2E0))
#define PMIC_WRAP_STARV_COUNTER_8	((PMIC_WRAP_BASE+0x2E4))
#define PMIC_WRAP_STARV_COUNTER_9	((PMIC_WRAP_BASE+0x2E8))
#define PMIC_WRAP_STARV_COUNTER_10	((PMIC_WRAP_BASE+0x2EC))
#define PMIC_WRAP_STARV_COUNTER_11	((PMIC_WRAP_BASE+0x2F0))
#define PMIC_WRAP_STARV_COUNTER_12	((PMIC_WRAP_BASE+0x2F4))
#define PMIC_WRAP_STARV_COUNTER_13	((PMIC_WRAP_BASE+0x2F8))
#define PMIC_WRAP_STARV_COUNTER_14	((PMIC_WRAP_BASE+0x2FC))
#define PMIC_WRAP_STARV_COUNTER_15	((PMIC_WRAP_BASE+0x300))
#define PMIC_WRAP_STARV_COUNTER_16	((PMIC_WRAP_BASE+0x304))
#define PMIC_WRAP_STARV_COUNTER_0_STATUS	((PMIC_WRAP_BASE+0x308))
#define PMIC_WRAP_STARV_COUNTER_1_STATUS	((PMIC_WRAP_BASE+0x30C))
#define PMIC_WRAP_STARV_COUNTER_2_STATUS	((PMIC_WRAP_BASE+0x310))
#define PMIC_WRAP_STARV_COUNTER_3_STATUS	((PMIC_WRAP_BASE+0x314))
#define PMIC_WRAP_STARV_COUNTER_4_STATUS	((PMIC_WRAP_BASE+0x318))
#define PMIC_WRAP_STARV_COUNTER_5_STATUS	((PMIC_WRAP_BASE+0x31C))
#define PMIC_WRAP_STARV_COUNTER_6_STATUS	((PMIC_WRAP_BASE+0x320))
#define PMIC_WRAP_STARV_COUNTER_7_STATUS	((PMIC_WRAP_BASE+0x324))
#define PMIC_WRAP_STARV_COUNTER_8_STATUS	((PMIC_WRAP_BASE+0x328))
#define PMIC_WRAP_STARV_COUNTER_9_STATUS	((PMIC_WRAP_BASE+0x32C))
#define PMIC_WRAP_STARV_COUNTER_10_STATUS	((PMIC_WRAP_BASE+0x330))
#define PMIC_WRAP_STARV_COUNTER_11_STATUS	((PMIC_WRAP_BASE+0x334))
#define PMIC_WRAP_STARV_COUNTER_12_STATUS	((PMIC_WRAP_BASE+0x338))
#define PMIC_WRAP_STARV_COUNTER_13_STATUS	((PMIC_WRAP_BASE+0x33C))
#define PMIC_WRAP_STARV_COUNTER_14_STATUS	((PMIC_WRAP_BASE+0x340))
#define PMIC_WRAP_STARV_COUNTER_15_STATUS	((PMIC_WRAP_BASE+0x344))
#define PMIC_WRAP_STARV_COUNTER_16_STATUS	((PMIC_WRAP_BASE+0x348))
#define PMIC_WRAP_STARV_COUNTER_CLR	((PMIC_WRAP_BASE+0x34C))
#define PMIC_WRAP_STARV_PRIO_STATUS	((PMIC_WRAP_BASE+0x350))
#define PMIC_WRAP_MONITOR_CTRL_0	((PMIC_WRAP_BASE+0x354))
#define PMIC_WRAP_MONITOR_CTRL_1	((PMIC_WRAP_BASE+0x358))
#define PMIC_WRAP_MONITOR_CTRL_2	((PMIC_WRAP_BASE+0x35C))
#define PMIC_WRAP_MONITOR_CTRL_3	((PMIC_WRAP_BASE+0x360))
#define PMIC_WRAP_CHANNEL_SEQUENCE_0	((PMIC_WRAP_BASE+0x364))
#define PMIC_WRAP_CHANNEL_SEQUENCE_1	((PMIC_WRAP_BASE+0x368))
#define PMIC_WRAP_CHANNEL_SEQUENCE_2	((PMIC_WRAP_BASE+0x36C))
#define PMIC_WRAP_CHANNEL_SEQUENCE_3	((PMIC_WRAP_BASE+0x370))
#define PMIC_WRAP_CMD_SEQUENCE_0	((PMIC_WRAP_BASE+0x374))
#define PMIC_WRAP_CMD_SEQUENCE_1	((PMIC_WRAP_BASE+0x378))
#define PMIC_WRAP_CMD_SEQUENCE_2	((PMIC_WRAP_BASE+0x37C))
#define PMIC_WRAP_CMD_SEQUENCE_3	((PMIC_WRAP_BASE+0x380))
#define PMIC_WRAP_CMD_SEQUENCE_4	((PMIC_WRAP_BASE+0x384))
#define PMIC_WRAP_CMD_SEQUENCE_5	((PMIC_WRAP_BASE+0x388))
#define PMIC_WRAP_CMD_SEQUENCE_6	((PMIC_WRAP_BASE+0x38C))
#define PMIC_WRAP_CMD_SEQUENCE_7	((PMIC_WRAP_BASE+0x390))
#define PMIC_WRAP_WDATA_SEQUENCE_0	((PMIC_WRAP_BASE+0x394))
#define PMIC_WRAP_WDATA_SEQUENCE_1	((PMIC_WRAP_BASE+0x398))
#define PMIC_WRAP_WDATA_SEQUENCE_2	((PMIC_WRAP_BASE+0x39C))
#define PMIC_WRAP_WDATA_SEQUENCE_3	((PMIC_WRAP_BASE+0x3A0))
#define PMIC_WRAP_WDATA_SEQUENCE_4	((PMIC_WRAP_BASE+0x3A4))
#define PMIC_WRAP_WDATA_SEQUENCE_5	((PMIC_WRAP_BASE+0x3A8))
#define PMIC_WRAP_WDATA_SEQUENCE_6	((PMIC_WRAP_BASE+0x3AC))
#define PMIC_WRAP_WDATA_SEQUENCE_7	((PMIC_WRAP_BASE+0x3B0))
#define PMIC_WRAP_DEBUG_SW_DRIVER_0	((PMIC_WRAP_BASE+0x3B4))
#define PMIC_WRAP_DEBUG_SW_DRIVER_1	((PMIC_WRAP_BASE+0x3B8))
#define PMIC_WRAP_DEBUG_SW_DRIVER_2	((PMIC_WRAP_BASE+0x3BC))
#define PMIC_WRAP_DEBUG_SW_DRIVER_3	((PMIC_WRAP_BASE+0x3C0))
#define PMIC_WRAP_DEBUG_SW_DRIVER_4	((PMIC_WRAP_BASE+0x3C4))
#define PMIC_WRAP_DEBUG_SW_DRIVER_5	((PMIC_WRAP_BASE+0x3C8))
#define PMIC_WRAP_BWC_OPTIONS	((PMIC_WRAP_BASE+0x3CC))
#define PMIC_WRAP_RESERVED	((PMIC_WRAP_BASE+0x3D0))
#define PMIC_WRAP_WACS0_CMD	((PMIC_WRAP_BASE+0xC00))
#define PMIC_WRAP_WACS0_RDATA	((PMIC_WRAP_BASE+0xC04))
#define PMIC_WRAP_WACS0_VLDCLR	((PMIC_WRAP_BASE+0xC08))
#define PMIC_WRAP_WACS1_CMD	((PMIC_WRAP_BASE+0xC10))
#define PMIC_WRAP_WACS1_RDATA	((PMIC_WRAP_BASE+0xC14))
#define PMIC_WRAP_WACS1_VLDCLR	((PMIC_WRAP_BASE+0xC18))
#define PMIC_WRAP_WACS2_CMD	((PMIC_WRAP_BASE+0xC20))
#define PMIC_WRAP_WACS2_RDATA	((PMIC_WRAP_BASE+0xC24))
#define PMIC_WRAP_WACS2_VLDCLR	((PMIC_WRAP_BASE+0xC28))
#define PMIC_WRAP_WACS3_CMD	((PMIC_WRAP_BASE+0xC30))
#define PMIC_WRAP_WACS3_RDATA	((PMIC_WRAP_BASE+0xC34))
#define PMIC_WRAP_WACS3_VLDCLR	((PMIC_WRAP_BASE+0xC38))

// Bit Control
#define GET_WACS0_RDATA(x)              ((x>>0)  & 0x0000ffff)
#define GET_WACS1_RDATA(x)              ((x>>0)  & 0x0000ffff)
#define GET_WRAP_AG_DLE_RESTCNT(x)      ((x>>5)  & 0x00000003)
#define GET_STAUPD_FSM(x)               ((x>>6)  & 0x00000007)
#define GET_MAN_FSM(x)                  ((x>>8)  & 0x00000007)
#define GET_MAN_REQ(x)                  ((x>>11) & 0x00000001)
#define GET_WACS_FSM(x)                 ((x>>16) & 0x00000007)
#define GET_WACS0_FSM(x)                ((x>>16) & 0x00000007)
#define GET_WACS_REQ(x)                 ((x>>19) & 0x00000001)
#define GET_SYNC_IDLE(x)                ((x>>20) & 0x00000001)
#define GET_INIT_DONE0(x)               ((x>>21) & 0x00000001)
#define GET_INIT_DONE1(x)               ((x>>21) & 0x00000001)

////////////////////////////////////////////////////////////
// For P2P
#define PMIC_WRAP_P2P_WACS_P2P_EN       (PMIC_WRAP_P2P_BASE+0x200)
#define PMIC_WRAP_P2P_INIT_DONE_P2P     (PMIC_WRAP_P2P_BASE+0x204)
#define PMIC_WRAP_P2P_WACS_P2P_CMD      (PMIC_WRAP_P2P_BASE+0x208)
#define PMIC_WRAP_P2P_WACS_P2P_RDATA    (PMIC_WRAP_P2P_BASE+0x20C)
#define PMIC_WRAP_P2P_WACS_P2P_VLDCLR   (PMIC_WRAP_P2P_BASE+0x210)

#define GET_WACS_P2P_WDATA(x)           ((x>>0)  & 0x0000ffff)
#define GET_WACS_P2P_ADR(x)             ((x>>16) & 0x00007fff)
#define GET_WACS_P2P_WRITE(x)           ((x>>31) & 0x00000001)
#define GET_WACS_P2P_RDATA(x)           ((x>>0)  & 0x0000ffff)
#define GET_WACS_P2P_FSM(x)             ((x>>16) & 0x00000007)
#define GET_WACS_P2P_REQ(x)             ((x>>19) & 0x00000001)
#define GET_SYNC_IDLE_P2P(x)            ((x>>20) & 0x00000001)
#define GET_INIT_DONE_P2P(x)            ((x>>21) & 0x00000001)
#define GET_SYS_IDLE_P2P(x)             ((x>>22) & 0x00000001)
#define GET_WACS_P2P_FIFO_FILLCNT(x)    ((x>>24) & 0x0000000f)
#define GET_WACS_P2P_FIFO_FREECNT(x)    ((x>>28) & 0x0000000f)
////////////////////////////////////////////////////////////

#define SPI_AUTO_MODE           0
#define SPI_MANUAL_MODE         1

#define HARB_HPRIO_ALL          0xFF
/*
[7]: WACS_P2P (MD32 SW)
[6]: GPSINF
[5]: STAUPD
[4]: WACS2 (AP SW)
[3]: WACS1 (MD2 SW)
[2]: DVFSINF
[1]: WACS0 (MD1 SW)
[0]: MDINF
*/
#define HARB_HPRIO_WACSP2P      (1 << 7)
#define HARB_HPRIO_GPSINF       (1 << 6)
#define HARB_HPRIO_STAUPD       (1 << 5)
#define HARB_HPRIO_WACS2        (1 << 4)
#define HARB_HPRIO_WACS1        (1 << 3)
#define HARB_HPRIO_DVFSINF      (1 << 2)
#define HARB_HPRIO_WACS0        (1 << 1)
#define HARB_HPRIO_MDINF        (1 << 0)

// Current WRAP FSM states.
#define WRAP_FSM_IDLE_STATE                 0x0
#define WRAP_FSM_CSL_ADR_START_STATE        0x2
#define WRAP_FSM_ADR_STATE                  0x4
#define WRAP_FSM_CSL_ADR_END_STATE          0x6
#define WRAP_FSM_CSH_ADR_STATE              0x8
#define WRAP_FSM_CSL_DATA_START_STATE       0xA
#define WRAP_FSM_DATA_STATE                 0xC
#define WRAP_FSM_CSL_DATA_END_STATE         0xE
#define WRAP_FSM_CSH_DATA_STATE             0xF

#define WACS_INIT_DONE_NOT_FINISHED         0
#define WACS_INIT_DONE_FINISHED             1

#define WACS_SYNC_MODULE_BUSY               0
#define WACS_SYNC_MODULE_IDLE               1

// Current WACS FSM states.
#define WACS_FSM_IDLE_STATE                 0x0
#define WACS_FSM_REQ_STATE                  0x2
#define WACS_FSM_WFDLE_STATE                0x4
#define WACS_FSM_WFVLDCLR_STATE             0x6

// Current MAN FSM states.
#define MAN_FSM_IDLE_STATE                  0x0
#define MAN_FSM_REQ_STATE                   0x2
#define MAN_FSM_WFDLE_STATE                 0x4
#define MAN_FSM_WFVLDCLR_STATE              0x6

// Current STAUPD FSM states.
#define STAUPD_FSM_IDLE_STATE               0x0
#define STAUPD_FSM_REQ_STATE                0x2
#define STAUPD_FSM_WFDLE_STATE              0x4

#define MT6331_DEW_READ_TEST_VALUE                 0x5AA5
#define MT6332_DEW_READ_TEST_VALUE                 0xA55A

//-----macro for manual commnd --------------------------------------------------------
// From par_spi_man.h
#define OP_WR    (0x1)
#define OP_RD    (0x0)

#define OP_CSH   (0x0)
#define OP_CSL   (0x1)
#define OP_CK    (0x2)

#define OP_OUTS  (0x8)
#define OP_OUTD  (0x9)
#define OP_OUTQ  (0xA)

#define OP_INS   (0xC)
#define OP_IND   (0xD)
#define OP_INQ   (0xE)

#define OP_OS2IS (0x10)
#define OP_OS2ID (0x11)
#define OP_OS2IQ (0x12)
#define OP_OD2IS (0x13)
#define OP_OD2ID (0x14)
#define OP_OD2IQ (0x15)
#define OP_OQ2IS (0x16)
#define OP_OQ2ID (0x17)
#define OP_OQ2IQ (0x18)

#define OP_OSNIS (0x19)
#define OP_ODNID (0x1A)

 #endif // __MT6771_PMIC_WRAP_HW_H__

