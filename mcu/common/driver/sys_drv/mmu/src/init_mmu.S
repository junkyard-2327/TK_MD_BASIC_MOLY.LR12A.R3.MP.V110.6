#include <mips/regdef.h>
#include <boot.h>
#include <mips/m32c0.h>
#include "mmu_def.h"

	.set	noreorder
	.set 	noat

//#if (defined(__ESL_ENABLE__) || defined(__MASE_LTEFDD__)) && !defined(__ESL_BYPASS_MMU_PROTECT__)
#if 0
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #if defined(__BUS_REMAPPING_WITHOUT_MMU__)
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
	#else
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #endif
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
	#if defined(__BUS_REMAPPING_WITHOUT_MMU__)
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #else
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #endif
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #if defined(__BUS_REMAPPING_WITHOUT_MMU__)
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #else
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
    #endif
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
/* under construction !*/
#else //(defined(__ESL_ENABLE__) || defined(__MASE_LTEFDD__)) && !defined(__ESL_BYPASS_MMU_PROTECT__)

//LEAF(init_MMU)
.section "NONCACHED_ROCODE", "ax"
.globl    init_MMU
.ent  init_MMU
init_MMU:

check_for_jtlb:
	// Determine if we have a TLB
	mfc0    v1, C0_CONFIG				// read C0_Config
	ext	    v1, v1, 7, 3				// extract MT field
	li	    a3, 0x1						// load a 1 to check against
	bne	    v1, a3, done_init_jtlb
	mfc0    v0, C0_CONFIG1				// C0_Config1
	nop

start_init_jtlb:
	// Config1MMUSize == Number of TLB entries - 1
	ext     v1, v0, CFG1_MMUSSHIFT, 6 	// extract MMU Size
	mtc0    zero, TLB_WIRED				// write Wired

init_CFG5:
    li      a0, PAGEMASK_256MB        	// pagemask 256MB
	mtc0    a0, TLB_PAGEMASK			// write PageMask
    mtc0    v1, TLB_INDEX				// write C0_Index

	// write C0_EntryHi
    mtc0	zero, TLB_ENTRYHI	    	// write EntryHi
	//bank0
	li      a0, (PFN_BANK0_ADDR<<TLB_PFN_OFFSET)
	ori     a0, ((MMU_CCA_UCA<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
    mtc0    a0, TLB_ENTRYLO0			// write EntryLo0
	//bank1
	li      a0, (PFN_BANK1_ADDR<<TLB_PFN_OFFSET)
	ori     a0, ((MMU_CCA_UC<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
	mtc0    a0, TLB_ENTRYLO1			// write EntryLo1
	ehb
	tlbwi
    add	    v1, -1						// update TLB entry number
	mtc0    v1, TLB_INDEX

    #if defined(__BUS_REMAPPING_WITHOUT_MMU__)
        // write C0_EntryHi
        li      a0, (VPN2_BANK2_ADDR<<TLB_VPN2_OFFSET)
        mtc0	a0, TLB_ENTRYHI 	    	// write EntryHi
        //bank2
        li      a0, (PFN_BANK2_ADDR<<TLB_PFN_OFFSET)
        ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO0			// write EntryLo0
        //bank3
        li      a0, (PFN_BANK3_ADDR<<TLB_PFN_OFFSET)
        ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO1			// write EntryLo1
    #else
        // write C0_EntryHi
        li      a0, (VPN2_BANK2_ADDR<<TLB_VPN2_OFFSET)
        mtc0	a0, TLB_ENTRYHI 	    	// write EntryHi
        //bank2
        li      a0, (PFN_BANK0_ADDR<<TLB_PFN_OFFSET)
        ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO0			// write EntryLo0
        //bank3
        li      a0, (PFN_BANK0_ADDR<<TLB_PFN_OFFSET)
        ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO1			// write EntryLo1
    #endif
        ehb
        tlbwi
        add	    v1, -1						// update TLB entry number
        mtc0    v1, TLB_INDEX

init_CFG4:
	// write C0_EntryHi
	li      a0, (VPN2_BANK4_ADDR<<TLB_VPN2_OFFSET)
    mtc0	a0, TLB_ENTRYHI 	    	// write EntryHi
	//bank4
	#if defined(__BUS_REMAPPING_WITHOUT_MMU__)
    	li      a0, (PFN_BANK4_ADDR<<TLB_PFN_OFFSET)
    	ori     a0, ((MMU_CCA_UC<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO0			// write EntryLo0
    #else
        li      a0, (PFN_BANK0_ADDR<<TLB_PFN_OFFSET)
    	ori     a0, ((MMU_CCA_UC<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO0			// write EntryLo0
    #endif
	//bank5
	#if defined(__BUS_REMAPPING_WITHOUT_MMU__)
    	li      a0, (PFN_BANK5_ADDR<<TLB_PFN_OFFSET)
    	ori     a0, ((MMU_CCA_UC<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO1			// write EntryLo1
    #else
        li      a0, (PFN_BANK0_ADDR<<TLB_PFN_OFFSET)
    	ori     a0, ((MMU_CCA_UC<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO1			// write EntryLo1
    #endif
	ehb
	tlbwi
    add	    v1, -1						// update TLB entry number
	mtc0    v1, TLB_INDEX

    #if defined(__BUS_REMAPPING_WITHOUT_MMU__)
    	// write C0_EntryHi
    	li      a0, (VPN2_BANK6_ADDR<<TLB_VPN2_OFFSET)
        mtc0	a0, TLB_ENTRYHI 	    	// write EntryHi
    	//bank6
    	li      a0, (PFN_BANK6_ADDR<<TLB_PFN_OFFSET)
    	ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO0			// write EntryLo0
    	//bank7
    	li      a0, (PFN_BANK7_ADDR<<TLB_PFN_OFFSET)
    	ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO1			// write EntryLo1
    #else
        // write C0_EntryHi
        li      a0, (VPN2_BANK6_ADDR<<TLB_VPN2_OFFSET)
        mtc0    a0, TLB_ENTRYHI             // write EntryHi
        //bank6
        li      a0, (PFN_BANK0_ADDR<<TLB_PFN_OFFSET)
        ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO0            // write EntryLo0
        //bank7
        li      a0, (PFN_BANK1_ADDR<<TLB_PFN_OFFSET)
        ori     a0, ((MMU_CCA_CWB<<TLB_CCA_OFFSET)|(TLB_VALID<<TLB_VALID_OFFSET)|(TLB_DIRTY<<TLB_DIRTY_OFFSET))
        mtc0    a0, TLB_ENTRYLO1            // write EntryLo1
    #endif
	ehb
	tlbwi
    add	    v1, -1						// update TLB entry number
	mtc0    v1, TLB_INDEX

	li      a0, (VPN2_BANK8_ADDR<<TLB_VPN2_OFFSET)
next_jtlb_entry_pair:
	mtc0	a0, TLB_ENTRYHI				// write EntryHi
    mtc0    zero, TLB_ENTRYLO0			// write EntryLo0
	mtc0    zero, TLB_ENTRYLO1			// write EntryLo1
	ehb
	tlbwi

	add	    v1, -1
    mtc0    v1, TLB_INDEX

	add	    a0, (2<<13)					// Add 8K to the address to avoid TLB conflict with previous entry
	bne		v1, zero, next_jtlb_entry_pair
	nop
done_init_jtlb:
    jr      ra
    nop
//END(init_MMU)
.end  init_MMU
#endif
