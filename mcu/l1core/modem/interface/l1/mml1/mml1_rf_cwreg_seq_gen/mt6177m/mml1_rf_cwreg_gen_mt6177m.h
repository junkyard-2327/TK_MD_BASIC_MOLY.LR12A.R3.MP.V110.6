/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *   mml1_rf_cwreg_gen_mt6173.h
 *
 * Project:
 * --------
 *   MT6293
 *
 * Description:
 * ------------
 *   Multi-Mode RF CW register gen definition
 *
 * Author:
 * -------
 * -------
 *
 *============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *----------------------------------------------------------------------------
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 *----------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *============================================================================
 ****************************************************************************/

#ifndef __MML1_RF_CWREG_GEN_MT6177M_H__
#define __MML1_RF_CWREG_GEN_MT6177M_H__
/*******************************************************************************
* #define
******************************************************************************/

/** CW1  **/
#define MMRF_CW1_POR_DATA  0x10200


#define MMRF_CW1_PACK(pOR, rEGcW1_TOP_SRX, rEGcW1_TOP_RAT, rEGcW1_TOP_TRX, rEGcW1_TOP_MODE, rEGcW1_TOP_RXFSM, rEGcW1_TOP_STD)\
( (pOR & 0x00017)\
| (rEGcW1_TOP_SRX)\
| (rEGcW1_TOP_RAT)\
| (rEGcW1_TOP_TRX)\
| (rEGcW1_TOP_MODE)\
| (rEGcW1_TOP_RXFSM)\
| (rEGcW1_TOP_STD)\
)

/** CW45  **/
#define MMRF_CW45_POR_DATA  0x00000

#define MMRF_CW45_TTG_OFF_TRIG_LSB (18)
#define MMRF_CW45_TTG_OFF_TRIG_MASK (0x40000)
#define MMRF_CW45_TTG_ON_TRIG_LSB (19)
#define MMRF_CW45_TTG_ON_TRIG_MASK (0x80000)

#define MMRF_CW45_PACK(pOR, rEGtTG_OFF_TRIG, rEGtTG_ON_TRIG)\
( (pOR & 0x3FFFF)\
| ((rEGtTG_OFF_TRIG                    << MMRF_CW45_TTG_OFF_TRIG_LSB               ) & MMRF_CW45_TTG_OFF_TRIG_MASK )\
| ((rEGtTG_ON_TRIG                     << MMRF_CW45_TTG_ON_TRIG_LSB                ) & MMRF_CW45_TTG_ON_TRIG_MASK )\
)

/** CW47  **/
#define MMRF_CW47_POR_DATA  0x00024


#define MMRF_CW47_PACK(pOR, rEGcW047_12_12_08_08)\
( (pOR & 0xFEEFF)\
| (rEGcW047_12_12_08_08)\
)

/** CW48  **/
#define MMRF_CW48_POR_DATA  0x80170


#define MMRF_CW48_PACK(pOR, rEGcW048_03_03)\
( (pOR & 0xFFFF7)\
| (rEGcW048_03_03)\
)

/** CW50  **/
#define MMRF_CW50_POR_DATA  0x00000

#define MMRF_CW50_TTG_SDM_FRAC_TX_LSB (0)
#define MMRF_CW50_TTG_SDM_FRAC_TX_MASK (0xFFFFF)

#define MMRF_CW50_PACK(pOR, rEGtTG_SDM_FRAC_TX)\
( (pOR & 0x00000)\
| ((rEGtTG_SDM_FRAC_TX                 << MMRF_CW50_TTG_SDM_FRAC_TX_LSB            ) & MMRF_CW50_TTG_SDM_FRAC_TX_MASK )\
)

/** CW51  **/
#define MMRF_CW51_POR_DATA  0x10000

#define MMRF_CW51_TTG_SDM_FRAC_TX_2_LSB (17)
#define MMRF_CW51_TTG_SDM_FRAC_TX_2_MASK (0xE0000)
#define MMRF_CW51_TTG_SDM_INT_TX_LSB (9)
#define MMRF_CW51_TTG_SDM_INT_TX_MASK (0x1FE00)

#define MMRF_CW51_PACK(pOR, rEGtTG_SDM_FRAC_TX_2, rEGtTG_SDM_INT_TX)\
( (pOR & 0x001FF)\
| ((rEGtTG_SDM_FRAC_TX_2               << MMRF_CW51_TTG_SDM_FRAC_TX_2_LSB          ) & MMRF_CW51_TTG_SDM_FRAC_TX_2_MASK )\
| ((rEGtTG_SDM_INT_TX                  << MMRF_CW51_TTG_SDM_INT_TX_LSB             ) & MMRF_CW51_TTG_SDM_INT_TX_MASK )\
)

/** CW52  **/
#define MMRF_CW52_POR_DATA  0x00000

#define MMRF_CW52_TTG_SDM_FRAC_RX_LSB (0)
#define MMRF_CW52_TTG_SDM_FRAC_RX_MASK (0xFFFFF)

#define MMRF_CW52_PACK(pOR, rEGtTG_SDM_FRAC_RX)\
( (pOR & 0x00000)\
| ((rEGtTG_SDM_FRAC_RX                 << MMRF_CW52_TTG_SDM_FRAC_RX_LSB            ) & MMRF_CW52_TTG_SDM_FRAC_RX_MASK )\
)

/** CW53  **/
#define MMRF_CW53_POR_DATA  0x10000

#define MMRF_CW53_TTG_SDM_FRAC_RX_2_LSB (17)
#define MMRF_CW53_TTG_SDM_FRAC_RX_2_MASK (0xE0000)
#define MMRF_CW53_TTG_SDM_INT_RX_LSB (9)
#define MMRF_CW53_TTG_SDM_INT_RX_MASK (0x1FE00)

#define MMRF_CW53_PACK(pOR, rEGtTG_SDM_FRAC_RX_2, rEGtTG_SDM_INT_RX)\
( (pOR & 0x001FF)\
| ((rEGtTG_SDM_FRAC_RX_2               << MMRF_CW53_TTG_SDM_FRAC_RX_2_LSB          ) & MMRF_CW53_TTG_SDM_FRAC_RX_2_MASK )\
| ((rEGtTG_SDM_INT_RX                  << MMRF_CW53_TTG_SDM_INT_RX_LSB             ) & MMRF_CW53_TTG_SDM_INT_RX_MASK )\
)

/** CW127  **/
#define MMRF_CW127_POR_DATA  0x00000

#define MMRF_CW127_SRX1_AFC_2SCOMP_LSB (0)
#define MMRF_CW127_SRX1_AFC_2SCOMP_MASK (0xFFFFF)

#define MMRF_CW127_PACK(pOR, rEGsRX1_AFC_2SCOMP)\
( (pOR & 0x00000)\
| ((rEGsRX1_AFC_2SCOMP                << MMRF_CW127_SRX1_AFC_2SCOMP_LSB           ) & MMRF_CW127_SRX1_AFC_2SCOMP_MASK )\
)

/** CW128  **/
#define MMRF_CW128_POR_DATA  0x00001

#define MMRF_CW128_SRX1_BAND_LSB (0)
#define MMRF_CW128_SRX1_BAND_MASK (0x0003F)

#define MMRF_CW128_PACK(pOR, rEGsRX1_BAND, rEGcW128_19_09_08_08_07_07)\
( (pOR & 0x00040)\
| ((rEGsRX1_BAND                      << MMRF_CW128_SRX1_BAND_LSB                 ) & MMRF_CW128_SRX1_BAND_MASK )\
| (rEGcW128_19_09_08_08_07_07)\
)

/** CW130  **/
#define MMRF_CW130_POR_DATA  0x29BB1

#define MMRF_CW130_SRX1_NFRAC1_LSB (0)
#define MMRF_CW130_SRX1_NFRAC1_MASK (0x007FF)
#define MMRF_CW130_SRX1_NINT_LSB (11)
#define MMRF_CW130_SRX1_NINT_MASK (0xFF800)

#define MMRF_CW130_PACK(pOR, rEGsRX1_NFRAC1, rEGsRX1_NINT)\
( (pOR & 0x00000)\
| ((rEGsRX1_NFRAC1                    << MMRF_CW130_SRX1_NFRAC1_LSB               ) & MMRF_CW130_SRX1_NFRAC1_MASK )\
| ((rEGsRX1_NINT                      << MMRF_CW130_SRX1_NINT_LSB                 ) & MMRF_CW130_SRX1_NINT_MASK )\
)

/** CW131  **/
#define MMRF_CW131_POR_DATA  0x3B1A8

#define MMRF_CW131_SRX1_NFRAC0_LSB (8)
#define MMRF_CW131_SRX1_NFRAC0_MASK (0xFFF00)

#define MMRF_CW131_PACK(pOR, rEGsRX1_NFRAC0, rEGcW131_07_07_05_05_03_03_02_00)\
( (pOR & 0x00050)\
| ((rEGsRX1_NFRAC0                    << MMRF_CW131_SRX1_NFRAC0_LSB               ) & MMRF_CW131_SRX1_NFRAC0_MASK )\
| (rEGcW131_07_07_05_05_03_03_02_00)\
)

/** CW134  **/
#define MMRF_CW134_POR_DATA  0x00040

#define MMRF_CW134_SRX1_NFRAC_OFFSET1_LSB (0)
#define MMRF_CW134_SRX1_NFRAC_OFFSET1_MASK (0x00007)
#define MMRF_CW134_SRX1_NINT_OFFSET_LSB (3)
#define MMRF_CW134_SRX1_NINT_OFFSET_MASK (0x00018)
#define MMRF_CW134_SRX1_N_OFFSET_SIGN_LSB (6)
#define MMRF_CW134_SRX1_N_OFFSET_SIGN_MASK (0x00040)
#define MMRF_CW134_SRX1_VCO_SUB_OFFSET_SIGN_LSB (16)
#define MMRF_CW134_SRX1_VCO_SUB_OFFSET_SIGN_MASK (0x10000)

#define MMRF_CW134_PACK(pOR, rEGsRX1_NFRAC_OFFSET1, rEGsRX1_NINT_OFFSET, rEGsRX1_N_OFFSET_SIGN, rEGsRX1_VCO_SUB_OFFSET_SIGN, rEGcW134_19_19_18_18_07_07)\
( (pOR & 0x2FF20)\
| ((rEGsRX1_NFRAC_OFFSET1             << MMRF_CW134_SRX1_NFRAC_OFFSET1_LSB        ) & MMRF_CW134_SRX1_NFRAC_OFFSET1_MASK )\
| ((rEGsRX1_NINT_OFFSET               << MMRF_CW134_SRX1_NINT_OFFSET_LSB          ) & MMRF_CW134_SRX1_NINT_OFFSET_MASK )\
| ((rEGsRX1_N_OFFSET_SIGN             << MMRF_CW134_SRX1_N_OFFSET_SIGN_LSB        ) & MMRF_CW134_SRX1_N_OFFSET_SIGN_MASK )\
| ((rEGsRX1_VCO_SUB_OFFSET_SIGN       << MMRF_CW134_SRX1_VCO_SUB_OFFSET_SIGN_LSB  ) & MMRF_CW134_SRX1_VCO_SUB_OFFSET_SIGN_MASK )\
| (rEGcW134_19_19_18_18_07_07)\
)

/** CW135  **/
#define MMRF_CW135_POR_DATA  0x00000

#define MMRF_CW135_SRX1_NFRAC_OFFSET0_LSB (0)
#define MMRF_CW135_SRX1_NFRAC_OFFSET0_MASK (0xFFFFF)

#define MMRF_CW135_PACK(pOR, rEGsRX1_NFRAC_OFFSET0)\
( (pOR & 0x00000)\
| ((rEGsRX1_NFRAC_OFFSET0             << MMRF_CW135_SRX1_NFRAC_OFFSET0_LSB        ) & MMRF_CW135_SRX1_NFRAC_OFFSET0_MASK )\
)

/** CW179  **/
#define MMRF_CW179_POR_DATA  0x0738C


#define MMRF_CW179_PACK(pOR, rEGcW179_15_11_10_06_05_00)\
( (pOR & 0xF0000)\
| (rEGcW179_15_11_10_06_05_00)\
)

/** CW181  **/
#define MMRF_CW181_POR_DATA  0x0298A


#define MMRF_CW181_PACK(pOR, rEGcW181_15_11_10_06_05_00)\
( (pOR & 0xF0000)\
| (rEGcW181_15_11_10_06_05_00)\
)

/** CW183  **/
#define MMRF_CW183_POR_DATA  0x05E11


#define MMRF_CW183_PACK(pOR, rEGcW183_15_11_10_06_05_00)\
( (pOR & 0xF0000)\
| (rEGcW183_15_11_10_06_05_00)\
)

/** CW320  **/
#define MMRF_CW320_POR_DATA  0x01FFF


#define MMRF_CW320_PACK(pOR, rEGcW320_PRX1_POFF, rEGcW320_PRX1_IIP2C)\
( (pOR & 0xC0000)\
| (rEGcW320_PRX1_POFF)\
| (rEGcW320_PRX1_IIP2C)\
)

/** CW321  **/
#define MMRF_CW321_POR_DATA  0x01FFF


#define MMRF_CW321_PACK(pOR, rEGcW321_DRX1_POFF)\
( (pOR & 0xFE000)\
| (rEGcW321_DRX1_POFF)\
)

/** CW322  **/
#define MMRF_CW322_POR_DATA  0x00001


#define MMRF_CW322_PACK(pOR, rEGcW322_11_11_04_04_03_03_02_02, rEGcW322_PRX1_LNASEL, rEGcW322_PRX1_2G_IRRC, rEGcW322_PRX1_LNAMIXER_EN, rEGcW322_PRX1_BANDSEL)\
( (pOR & 0x71002)\
| (rEGcW322_11_11_04_04_03_03_02_02)\
| (rEGcW322_PRX1_LNASEL)\
| (rEGcW322_PRX1_2G_IRRC)\
| (rEGcW322_PRX1_LNAMIXER_EN)\
| (rEGcW322_PRX1_BANDSEL)\
)

/** CW324  **/
#define MMRF_CW324_POR_DATA  0x01801


#define MMRF_CW324_PACK(pOR, rEGcW324_04_04_03_03_02_02, rEGcW324_DRX1_BANDSEL, rEGcW324_DRX1_LNASEL, rEGcW324_DRX1_LNAMIXER_EN)\
( (pOR & 0xF1802)\
| (rEGcW324_04_04_03_03_02_02)\
| (rEGcW324_DRX1_BANDSEL)\
| (rEGcW324_DRX1_LNASEL)\
| (rEGcW324_DRX1_LNAMIXER_EN)\
)

/** CW326  **/
#define MMRF_CW326_POR_DATA  0x10000


#define MMRF_CW326_PACK(pOR, rEGcW326_DRX1_BW, rEGcW326_PRX1_BW, rEGcW326_RX1_GSYNC)\
( (pOR & 0xE0000)\
| (rEGcW326_DRX1_BW)\
| (rEGcW326_PRX1_BW)\
| (rEGcW326_RX1_GSYNC)\
)

/** CW334  **/
#define MMRF_CW334_POR_DATA  0x001CE


#define MMRF_CW334_PACK(pOR, rEGcW334_PRX1_GAIN)\
( (pOR & 0xFF800)\
| (rEGcW334_PRX1_GAIN)\
)

/** CW335  **/
#define MMRF_CW335_POR_DATA  0x04104

#define MMRF_CW335_RXIF1_DC_EST_I_LSB (9)
#define MMRF_CW335_RXIF1_DC_EST_I_MASK (0x07E00)
#define MMRF_CW335_RXIF1_DC_EST_Q_LSB (3)
#define MMRF_CW335_RXIF1_DC_EST_Q_MASK (0x001F8)

#define MMRF_CW335_PACK(pOR, rEGrXIF1_DC_EST_I, rEGrXIF1_DC_EST_Q)\
( (pOR & 0xF8007)\
| ((rEGrXIF1_DC_EST_I                 << MMRF_CW335_RXIF1_DC_EST_I_LSB            ) & MMRF_CW335_RXIF1_DC_EST_I_MASK )\
| ((rEGrXIF1_DC_EST_Q                 << MMRF_CW335_RXIF1_DC_EST_Q_LSB            ) & MMRF_CW335_RXIF1_DC_EST_Q_MASK )\
)

/** CW336  **/
#define MMRF_CW336_POR_DATA  0x001CE


#define MMRF_CW336_PACK(pOR, rEGcW336_DRX1_GAIN)\
( (pOR & 0xFF800)\
| (rEGcW336_DRX1_GAIN)\
)

/** CW337  **/
#define MMRF_CW337_POR_DATA  0x04104

#define MMRF_CW337_RXDIF1_DC_EST_I_LSB (9)
#define MMRF_CW337_RXDIF1_DC_EST_I_MASK (0x07E00)
#define MMRF_CW337_RXDIF1_DC_EST_Q_LSB (3)
#define MMRF_CW337_RXDIF1_DC_EST_Q_MASK (0x001F8)

#define MMRF_CW337_PACK(pOR, rEGrXDIF1_DC_EST_I, rEGrXDIF1_DC_EST_Q)\
( (pOR & 0xF8007)\
| ((rEGrXDIF1_DC_EST_I                << MMRF_CW337_RXDIF1_DC_EST_I_LSB           ) & MMRF_CW337_RXDIF1_DC_EST_I_MASK )\
| ((rEGrXDIF1_DC_EST_Q                << MMRF_CW337_RXDIF1_DC_EST_Q_LSB           ) & MMRF_CW337_RXDIF1_DC_EST_Q_MASK )\
)

/** CW338  **/
#define MMRF_CW338_POR_DATA  0x00000

#define MMRF_CW338_RXRXD_GAIN_LATCH_BRIDGE_T_LSB (17)
#define MMRF_CW338_RXRXD_GAIN_LATCH_BRIDGE_T_MASK (0x20000)
#define MMRF_CW338_RXRXD_GAIN_LATCH_PATH1_LSB (18)
#define MMRF_CW338_RXRXD_GAIN_LATCH_PATH1_MASK (0x40000)

#define MMRF_CW338_PACK(pOR, rEGrXRXD_GAIN_LATCH_BRIDGE_T, rEGrXRXD_GAIN_LATCH_PATH1)\
( (pOR & 0x9FFFF)\
| ((rEGrXRXD_GAIN_LATCH_BRIDGE_T      << MMRF_CW338_RXRXD_GAIN_LATCH_BRIDGE_T_LSB ) & MMRF_CW338_RXRXD_GAIN_LATCH_BRIDGE_T_MASK )\
| ((rEGrXRXD_GAIN_LATCH_PATH1         << MMRF_CW338_RXRXD_GAIN_LATCH_PATH1_LSB    ) & MMRF_CW338_RXRXD_GAIN_LATCH_PATH1_MASK )\
)

/** CW339  **/
#define MMRF_CW339_POR_DATA  0x00000

#define MMRF_CW339_RXD_PATH1_GAIN_DELAY_LSB (10)
#define MMRF_CW339_RXD_PATH1_GAIN_DELAY_MASK (0xFFC00)
#define MMRF_CW339_RX_PATH1_GAIN_DELAY_LSB (0)
#define MMRF_CW339_RX_PATH1_GAIN_DELAY_MASK (0x003FF)

#define MMRF_CW339_PACK(pOR, rEGrXD_PATH1_GAIN_DELAY, rEGrX_PATH1_GAIN_DELAY)\
( (pOR & 0x00000)\
| ((rEGrXD_PATH1_GAIN_DELAY           << MMRF_CW339_RXD_PATH1_GAIN_DELAY_LSB      ) & MMRF_CW339_RXD_PATH1_GAIN_DELAY_MASK )\
| ((rEGrX_PATH1_GAIN_DELAY            << MMRF_CW339_RX_PATH1_GAIN_DELAY_LSB       ) & MMRF_CW339_RX_PATH1_GAIN_DELAY_MASK )\
)

/** CW348  **/
#define MMRF_CW348_POR_DATA  0x00000


#define MMRF_CW348_PACK(pOR, rEGcW348_PRX1_OBBFLAG)\
( (pOR & 0xFFFFC)\
| (rEGcW348_PRX1_OBBFLAG)\
)

/** CW389  **/
#define MMRF_CW389_POR_DATA  0x009D0


#define MMRF_CW389_PACK(pOR, rEGcW389_08_06)\
( (pOR & 0xFFE3F)\
| (rEGcW389_08_06)\
)

/** CW390  **/
#define MMRF_CW390_POR_DATA  0x00990


#define MMRF_CW390_PACK(pOR, rEGcW390_08_06)\
( (pOR & 0xFFE3F)\
| (rEGcW390_08_06)\
)

/** CW391  **/
#define MMRF_CW391_POR_DATA  0x009D0


#define MMRF_CW391_PACK(pOR, rEGcW391_08_06)\
( (pOR & 0xFFE3F)\
| (rEGcW391_08_06)\
)

/** CW399  **/
#define MMRF_CW399_POR_DATA  0x02142


#define MMRF_CW399_PACK(pOR, rEGcW399_13_10_06_03)\
( (pOR & 0xFC387)\
| (rEGcW399_13_10_06_03)\
)

/** CW413  **/
#define MMRF_CW413_POR_DATA  0x007F8


#define MMRF_CW413_PACK(pOR, rEGcW413_PRX1_PM)\
( (pOR & 0xFE001)\
| (rEGcW413_PRX1_PM)\
)

/** CW414  **/
#define MMRF_CW414_POR_DATA  0x007F8


#define MMRF_CW414_PACK(pOR, rEGcW414_DRX1_PM)\
( (pOR & 0xFE001)\
| (rEGcW414_DRX1_PM)\
)

/** CW473  **/
#define MMRF_CW473_POR_DATA  0x02040

#define MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_I_LSB (0)
#define MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_I_MASK (0x0007F)
#define MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_Q_LSB (7)
#define MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_Q_MASK (0x03F80)

#define MMRF_CW473_PACK(pOR, rEGrG_RX_BIAS_MIXER1_IIP2C_I, rEGrG_RX_BIAS_MIXER1_IIP2C_Q)\
( (pOR & 0xFC000)\
| ((rEGrG_RX_BIAS_MIXER1_IIP2C_I      << MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_I_LSB ) & MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_I_MASK )\
| ((rEGrG_RX_BIAS_MIXER1_IIP2C_Q      << MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_Q_LSB ) & MMRF_CW473_RG_RX_BIAS_MIXER1_IIP2C_Q_MASK )\
)

/** CW495  **/
#define MMRF_CW495_POR_DATA  0x08800


#define MMRF_CW495_PACK(pOR, rEGcW495_17_17_16_13_12_09_08_08_06_04_03_00)\
( (pOR & 0xC0080)\
| (rEGcW495_17_17_16_13_12_09_08_08_06_04_03_00)\
)

/** CW500  **/
#define MMRF_CW500_POR_DATA  0x1B780


#define MMRF_CW500_PACK(pOR, rEGcW500_17_15_14_12_11_09_08_05)\
( (pOR & 0xC001F)\
| (rEGcW500_17_15_14_12_11_09_08_05)\
)

/** CW501  **/
#define MMRF_CW501_POR_DATA  0x1B780


#define MMRF_CW501_PACK(pOR, rEGcW501_17_15_14_12_11_09_08_05)\
( (pOR & 0xC001F)\
| (rEGcW501_17_15_14_12_11_09_08_05)\
)

/** CW511  **/
#define MMRF_CW511_POR_DATA  0x00001

#define MMRF_CW511_BAND_STX_LSB (14)
#define MMRF_CW511_BAND_STX_MASK (0xFC000)

#define MMRF_CW511_PACK(pOR, rEGbAND_STX, rEGcW511_13_09_08_08_07_07_06_05_01_01)\
( (pOR & 0x0001D)\
| ((rEGbAND_STX                       << MMRF_CW511_BAND_STX_LSB                  ) & MMRF_CW511_BAND_STX_MASK )\
| (rEGcW511_13_09_08_08_07_07_06_05_01_01)\
)

/** CW521  **/
#define MMRF_CW521_POR_DATA  0x82060


#define MMRF_CW521_PACK(pOR, rEGcW521_12_09)\
( (pOR & 0xFE1FF)\
| (rEGcW521_12_09)\
)

/** CW529  **/
#define MMRF_CW529_POR_DATA  0x00010

#define MMRF_CW529_DCO_SCAK_CODETYP_LSB (8)
#define MMRF_CW529_DCO_SCAK_CODETYP_MASK (0xFFF00)

#define MMRF_CW529_PACK(pOR, rEGdCO_SCAK_CODETYP)\
( (pOR & 0x000FF)\
| ((rEGdCO_SCAK_CODETYP               << MMRF_CW529_DCO_SCAK_CODETYP_LSB          ) & MMRF_CW529_DCO_SCAK_CODETYP_MASK )\
)

/** CW549  **/
#define MMRF_CW549_POR_DATA  0x80000

#define MMRF_CW549_MMD_SDM_NFRAC_LSB (0)
#define MMRF_CW549_MMD_SDM_NFRAC_MASK (0x00FFF)
#define MMRF_CW549_MMD_SDM_NINT_LSB (12)
#define MMRF_CW549_MMD_SDM_NINT_MASK (0xFF000)

#define MMRF_CW549_PACK(pOR, rEGmMD_SDM_NFRAC, rEGmMD_SDM_NINT)\
( (pOR & 0x00000)\
| ((rEGmMD_SDM_NFRAC                  << MMRF_CW549_MMD_SDM_NFRAC_LSB             ) & MMRF_CW549_MMD_SDM_NFRAC_MASK )\
| ((rEGmMD_SDM_NINT                   << MMRF_CW549_MMD_SDM_NINT_LSB              ) & MMRF_CW549_MMD_SDM_NINT_MASK )\
)

/** CW550  **/
#define MMRF_CW550_POR_DATA  0x00000

#define MMRF_CW550_MMD_SDM_NFRAC_2_LSB (9)
#define MMRF_CW550_MMD_SDM_NFRAC_2_MASK (0xFFE00)

#define MMRF_CW550_PACK(pOR, rEGmMD_SDM_NFRAC_2)\
( (pOR & 0x001FF)\
| ((rEGmMD_SDM_NFRAC_2                << MMRF_CW550_MMD_SDM_NFRAC_2_LSB           ) & MMRF_CW550_MMD_SDM_NFRAC_2_MASK )\
)

/** CW551  **/
#define MMRF_CW551_POR_DATA  0x80000

#define MMRF_CW551_MMD_SDM_NFRAC1_LSB (0)
#define MMRF_CW551_MMD_SDM_NFRAC1_MASK (0x00FFF)
#define MMRF_CW551_MMD_SDM_NINT1_LSB (12)
#define MMRF_CW551_MMD_SDM_NINT1_MASK (0xFF000)

#define MMRF_CW551_PACK(pOR, rEGmMD_SDM_NFRAC1, rEGmMD_SDM_NINT1)\
( (pOR & 0x00000)\
| ((rEGmMD_SDM_NFRAC1                 << MMRF_CW551_MMD_SDM_NFRAC1_LSB            ) & MMRF_CW551_MMD_SDM_NFRAC1_MASK )\
| ((rEGmMD_SDM_NINT1                  << MMRF_CW551_MMD_SDM_NINT1_LSB             ) & MMRF_CW551_MMD_SDM_NINT1_MASK )\
)

/** CW552  **/
#define MMRF_CW552_POR_DATA  0x00000

#define MMRF_CW552_DCO_SCAK_NOFFSET_LSB (2)
#define MMRF_CW552_DCO_SCAK_NOFFSET_MASK (0x0003C)
#define MMRF_CW552_MMD_SDM_NFRAC1_2_LSB (9)
#define MMRF_CW552_MMD_SDM_NFRAC1_2_MASK (0xFFE00)

#define MMRF_CW552_PACK(pOR, rEGdCO_SCAK_NOFFSET, rEGmMD_SDM_NFRAC1_2)\
( (pOR & 0x001C3)\
| ((rEGdCO_SCAK_NOFFSET               << MMRF_CW552_DCO_SCAK_NOFFSET_LSB          ) & MMRF_CW552_DCO_SCAK_NOFFSET_MASK )\
| ((rEGmMD_SDM_NFRAC1_2               << MMRF_CW552_MMD_SDM_NFRAC1_2_LSB          ) & MMRF_CW552_MMD_SDM_NFRAC1_2_MASK )\
)

/** CW568  **/
#define MMRF_CW568_POR_DATA  0x00000

#define MMRF_CW568_DCC_DELTA_NC_LSB (9)
#define MMRF_CW568_DCC_DELTA_NC_MASK (0xFFE00)
#define MMRF_CW568_DCC_EST_EN_LSB (0)
#define MMRF_CW568_DCC_EST_EN_MASK (0x00001)

#define MMRF_CW568_PACK(pOR, rEGdCC_DELTA_NC, rEGdCC_EST_EN)\
( (pOR & 0x001FE)\
| ((rEGdCC_DELTA_NC                   << MMRF_CW568_DCC_DELTA_NC_LSB              ) & MMRF_CW568_DCC_DELTA_NC_MASK )\
| ((rEGdCC_EST_EN                     << MMRF_CW568_DCC_EST_EN_LSB                ) & MMRF_CW568_DCC_EST_EN_MASK )\
)

/** CW582  **/
#define MMRF_CW582_POR_DATA  0x00000

#define MMRF_CW582_MMD_SDM_NOFFSET_LSB (0)
#define MMRF_CW582_MMD_SDM_NOFFSET_MASK (0xFFFFF)

#define MMRF_CW582_PACK(pOR, rEGmMD_SDM_NOFFSET)\
( (pOR & 0x00000)\
| ((rEGmMD_SDM_NOFFSET                << MMRF_CW582_MMD_SDM_NOFFSET_LSB           ) & MMRF_CW582_MMD_SDM_NOFFSET_MASK )\
)

/** CW704  **/
#define MMRF_CW704_POR_DATA  0x00000


#define MMRF_CW704_PACK(pOR, rEGcW704_00_00)\
( (pOR & 0xFFFFE)\
| (rEGcW704_00_00)\
)

/** CW705  **/
#define MMRF_CW705_POR_DATA  0x05A80

#define MMRF_CW705_RG_TX_DET_PGA_CSEL_LSB (7)
#define MMRF_CW705_RG_TX_DET_PGA_CSEL_MASK (0x07F80)

#define MMRF_CW705_PACK(pOR, rEGrG_TX_DET_PGA_CSEL, rEGcW705_DET_GAIN_TABLE)\
( (pOR & 0xF8000)\
| ((rEGrG_TX_DET_PGA_CSEL             << MMRF_CW705_RG_TX_DET_PGA_CSEL_LSB        ) & MMRF_CW705_RG_TX_DET_PGA_CSEL_MASK )\
| (rEGcW705_DET_GAIN_TABLE)\
)

/** CW706  **/
#define MMRF_CW706_POR_DATA  0x7BFC0


#define MMRF_CW706_PACK(pOR, rEGcW706_TX_GAIN_TABLE)\
( (pOR & 0x00000)\
| (rEGcW706_TX_GAIN_TABLE)\
)

/** CW707  **/
#define MMRF_CW707_POR_DATA  0x00000


#define MMRF_CW707_PACK(pOR, rEGcW707_13_13, rEGcW707_TX_PORT)\
( (pOR & 0xFC000)\
| (rEGcW707_13_13)\
| (rEGcW707_TX_PORT)\
)

/** CW710  **/
#define MMRF_CW710_POR_DATA  0x15024


#define MMRF_CW710_PACK(pOR, rEGcW710_TX_LPF_GAIN_TABLE, rEGcW710_TXLPF)\
( (pOR & 0xD8087)\
| (rEGcW710_TX_LPF_GAIN_TABLE)\
| (rEGcW710_TXLPF)\
)

/** CW711  **/
#define MMRF_CW711_POR_DATA  0x00002


#define MMRF_CW711_PACK(pOR, rEGcW711_07_07)\
( (pOR & 0xFFF7F)\
| (rEGcW711_07_07)\
)

/** CW712  **/
#define MMRF_CW712_POR_DATA  0x00042


#define MMRF_CW712_PACK(pOR, rEGcW712_13_10_09_09_06_04)\
( (pOR & 0xFC18F)\
| (rEGcW712_13_10_09_09_06_04)\
)

/** CW714  **/
#define MMRF_CW714_POR_DATA  0x80000

#define MMRF_CW714_TX_LO_CAP_ARRAY_LSB (11)
#define MMRF_CW714_TX_LO_CAP_ARRAY_MASK (0x3F800)
#define MMRF_CW714_TX_LO_FE_IN_BIAS_HPM_LSB (0)
#define MMRF_CW714_TX_LO_FE_IN_BIAS_HPM_MASK (0x0001F)
#define MMRF_CW714_TX_LO_FE_IN_BIAS_LPM_LSB (5)
#define MMRF_CW714_TX_LO_FE_IN_BIAS_LPM_MASK (0x003E0)
#define MMRF_CW714_TX_LO_IND_SW_LSB (10)
#define MMRF_CW714_TX_LO_IND_SW_MASK (0x00400)

#define MMRF_CW714_PACK(pOR, rEGtX_LO_CAP_ARRAY, rEGtX_LO_FE_IN_BIAS_HPM, rEGtX_LO_FE_IN_BIAS_LPM, rEGtX_LO_IND_SW)\
( (pOR & 0xC0000)\
| ((rEGtX_LO_CAP_ARRAY                << MMRF_CW714_TX_LO_CAP_ARRAY_LSB           ) & MMRF_CW714_TX_LO_CAP_ARRAY_MASK )\
| ((rEGtX_LO_FE_IN_BIAS_HPM           << MMRF_CW714_TX_LO_FE_IN_BIAS_HPM_LSB      ) & MMRF_CW714_TX_LO_FE_IN_BIAS_HPM_MASK )\
| ((rEGtX_LO_FE_IN_BIAS_LPM           << MMRF_CW714_TX_LO_FE_IN_BIAS_LPM_LSB      ) & MMRF_CW714_TX_LO_FE_IN_BIAS_LPM_MASK )\
| ((rEGtX_LO_IND_SW                   << MMRF_CW714_TX_LO_IND_SW_LSB              ) & MMRF_CW714_TX_LO_IND_SW_MASK )\
)

/** CW727  **/
#define MMRF_CW727_POR_DATA  0x1403C


#define MMRF_CW727_PACK(pOR, rEGcW727_19_10_09_00)\
( (pOR & 0x00000)\
| (rEGcW727_19_10_09_00)\
)

/** CW728  **/
#define MMRF_CW728_POR_DATA  0x00000


#define MMRF_CW728_PACK(pOR, rEGcW728_19_10_09_00)\
( (pOR & 0x00000)\
| (rEGcW728_19_10_09_00)\
)

/** CW732  **/
#define MMRF_CW732_POR_DATA  0x00055


#define MMRF_CW732_PACK(pOR, rEGcW732_19_10)\
( (pOR & 0x003FF)\
| (rEGcW732_19_10)\
)

/** CW786  **/
#define MMRF_CW786_POR_DATA  0xC0002


#define MMRF_CW786_PACK(pOR, rEGcW786_17_10_09_00)\
( (pOR & 0xC0000)\
| (rEGcW786_17_10_09_00)\
)

/** CW787  **/
#define MMRF_CW787_POR_DATA  0x7C001

#define MMRF_CW787_TX_LPF_RC_CODE_LSB (14)
#define MMRF_CW787_TX_LPF_RC_CODE_MASK (0xFC000)

#define MMRF_CW787_PACK(pOR, rEGtX_LPF_RC_CODE)\
( (pOR & 0x03FFF)\
| ((rEGtX_LPF_RC_CODE                 << MMRF_CW787_TX_LPF_RC_CODE_LSB            ) & MMRF_CW787_TX_LPF_RC_CODE_MASK )\
)

/** CW793  **/
#define MMRF_CW793_POR_DATA  0x00107

#define MMRF_CW793_RG_TX_RCF_CSEL_LSB (4)
#define MMRF_CW793_RG_TX_RCF_CSEL_MASK (0x007F0)

#define MMRF_CW793_PACK(pOR, rEGrG_TX_RCF_CSEL, rEGcW793_TXRCF)\
( (pOR & 0xFF800)\
| ((rEGrG_TX_RCF_CSEL                 << MMRF_CW793_RG_TX_RCF_CSEL_LSB            ) & MMRF_CW793_RG_TX_RCF_CSEL_MASK )\
| (rEGcW793_TXRCF)\
)

/** CW794  **/
#define MMRF_CW794_POR_DATA  0x00000


#define MMRF_CW794_PACK(pOR, rEGcW794_19_15_14_10_09_05_04_00)\
( (pOR & 0x00000)\
| (rEGcW794_19_15_14_10_09_05_04_00)\
)

/** CW795  **/
#define MMRF_CW795_POR_DATA  0x20820

#define MMRF_CW795_TX_BAL_CAPA_AACT_LSB (6)
#define MMRF_CW795_TX_BAL_CAPA_AACT_MASK (0x00FC0)
#define MMRF_CW795_TX_BAL_CAPB_AACT_LSB (0)
#define MMRF_CW795_TX_BAL_CAPB_AACT_MASK (0x0003F)

#define MMRF_CW795_PACK(pOR, rEGtX_BAL_CAPA_AACT, rEGtX_BAL_CAPB_AACT)\
( (pOR & 0xFF000)\
| ((rEGtX_BAL_CAPA_AACT               << MMRF_CW795_TX_BAL_CAPA_AACT_LSB          ) & MMRF_CW795_TX_BAL_CAPA_AACT_MASK )\
| ((rEGtX_BAL_CAPB_AACT               << MMRF_CW795_TX_BAL_CAPB_AACT_LSB          ) & MMRF_CW795_TX_BAL_CAPB_AACT_MASK )\
)

/** CW796  **/
#define MMRF_CW796_POR_DATA  0x20820

#define MMRF_CW796_TX_BAL_CAPA_BACT_LSB (6)
#define MMRF_CW796_TX_BAL_CAPA_BACT_MASK (0x00FC0)
#define MMRF_CW796_TX_BAL_CAPB_BACT_LSB (0)
#define MMRF_CW796_TX_BAL_CAPB_BACT_MASK (0x0003F)

#define MMRF_CW796_PACK(pOR, rEGtX_BAL_CAPA_BACT, rEGtX_BAL_CAPB_BACT)\
( (pOR & 0xFF000)\
| ((rEGtX_BAL_CAPA_BACT               << MMRF_CW796_TX_BAL_CAPA_BACT_LSB          ) & MMRF_CW796_TX_BAL_CAPA_BACT_MASK )\
| ((rEGtX_BAL_CAPB_BACT               << MMRF_CW796_TX_BAL_CAPB_BACT_LSB          ) & MMRF_CW796_TX_BAL_CAPB_BACT_MASK )\
)

/** CW797  **/
#define MMRF_CW797_POR_DATA  0x00000


#define MMRF_CW797_PACK(pOR, rEGcW797_17_12_11_06_05_03_02_00)\
( (pOR & 0xC0000)\
| (rEGcW797_17_12_11_06_05_03_02_00)\
)

/** CW798  **/
#define MMRF_CW798_POR_DATA  0x6DB0F


#define MMRF_CW798_PACK(pOR, rEGcW798_07_04_03_00)\
( (pOR & 0xFFF00)\
| (rEGcW798_07_04_03_00)\
)

/** CW799  **/
#define MMRF_CW799_POR_DATA  0x00000


#define MMRF_CW799_PACK(pOR, rEGcW799_19_14_13_11_09_04_02_00)\
( (pOR & 0x00408)\
| (rEGcW799_19_14_13_11_09_04_02_00)\
)

/** CW802  **/
#define MMRF_CW802_POR_DATA  0x018FE


#define MMRF_CW802_PACK(pOR, rEGcW802_19_15_14_10_09_09_08_08_07_05_04_02)\
( (pOR & 0x00003)\
| (rEGcW802_19_15_14_10_09_09_08_08_07_05_04_02)\
)

/** CW803  **/
#define MMRF_CW803_POR_DATA  0x00000


#define MMRF_CW803_PACK(pOR, rEGcW803_19_13_12_06_04_00, rEGcW803_TX_LO_CAL_EN)\
( (pOR & 0x00000)\
| (rEGcW803_19_13_12_06_04_00)\
| (rEGcW803_TX_LO_CAL_EN)\
)

/** CW807  **/
#define MMRF_CW807_POR_DATA  0x00000

#define MMRF_CW807_TXDET_CDCOC_I1_M_LSB (15)
#define MMRF_CW807_TXDET_CDCOC_I1_M_MASK (0xF8000)
#define MMRF_CW807_TXDET_CDCOC_I2_M_LSB (5)
#define MMRF_CW807_TXDET_CDCOC_I2_M_MASK (0x003E0)
#define MMRF_CW807_TXDET_CDCOC_Q1_M_LSB (10)
#define MMRF_CW807_TXDET_CDCOC_Q1_M_MASK (0x07C00)
#define MMRF_CW807_TXDET_CDCOC_Q2_M_LSB (0)
#define MMRF_CW807_TXDET_CDCOC_Q2_M_MASK (0x0001F)

#define MMRF_CW807_PACK(pOR, rEGtXDET_CDCOC_I1_M, rEGtXDET_CDCOC_I2_M, rEGtXDET_CDCOC_Q1_M, rEGtXDET_CDCOC_Q2_M)\
( (pOR & 0x00000)\
| ((rEGtXDET_CDCOC_I1_M               << MMRF_CW807_TXDET_CDCOC_I1_M_LSB          ) & MMRF_CW807_TXDET_CDCOC_I1_M_MASK )\
| ((rEGtXDET_CDCOC_I2_M               << MMRF_CW807_TXDET_CDCOC_I2_M_LSB          ) & MMRF_CW807_TXDET_CDCOC_I2_M_MASK )\
| ((rEGtXDET_CDCOC_Q1_M               << MMRF_CW807_TXDET_CDCOC_Q1_M_LSB          ) & MMRF_CW807_TXDET_CDCOC_Q1_M_MASK )\
| ((rEGtXDET_CDCOC_Q2_M               << MMRF_CW807_TXDET_CDCOC_Q2_M_LSB          ) & MMRF_CW807_TXDET_CDCOC_Q2_M_MASK )\
)

/** CW808  **/
#define MMRF_CW808_POR_DATA  0x00000

#define MMRF_CW808_TXDET_CDCOC_I3_M_LSB (15)
#define MMRF_CW808_TXDET_CDCOC_I3_M_MASK (0xF8000)
#define MMRF_CW808_TXDET_CDCOC_I4_M_LSB (5)
#define MMRF_CW808_TXDET_CDCOC_I4_M_MASK (0x003E0)
#define MMRF_CW808_TXDET_CDCOC_Q3_M_LSB (10)
#define MMRF_CW808_TXDET_CDCOC_Q3_M_MASK (0x07C00)
#define MMRF_CW808_TXDET_CDCOC_Q4_M_LSB (0)
#define MMRF_CW808_TXDET_CDCOC_Q4_M_MASK (0x0001F)

#define MMRF_CW808_PACK(pOR, rEGtXDET_CDCOC_I3_M, rEGtXDET_CDCOC_I4_M, rEGtXDET_CDCOC_Q3_M, rEGtXDET_CDCOC_Q4_M)\
( (pOR & 0x00000)\
| ((rEGtXDET_CDCOC_I3_M               << MMRF_CW808_TXDET_CDCOC_I3_M_LSB          ) & MMRF_CW808_TXDET_CDCOC_I3_M_MASK )\
| ((rEGtXDET_CDCOC_I4_M               << MMRF_CW808_TXDET_CDCOC_I4_M_LSB          ) & MMRF_CW808_TXDET_CDCOC_I4_M_MASK )\
| ((rEGtXDET_CDCOC_Q3_M               << MMRF_CW808_TXDET_CDCOC_Q3_M_LSB          ) & MMRF_CW808_TXDET_CDCOC_Q3_M_MASK )\
| ((rEGtXDET_CDCOC_Q4_M               << MMRF_CW808_TXDET_CDCOC_Q4_M_LSB          ) & MMRF_CW808_TXDET_CDCOC_Q4_M_MASK )\
)

/** CW814  **/
#define MMRF_CW814_POR_DATA  0x6D556


#define MMRF_CW814_PACK(pOR, rEGcW814_05_03)\
( (pOR & 0xFFFC7)\
| (rEGcW814_05_03)\
)

/** CW816  **/
#define MMRF_CW816_POR_DATA  0x5222C


#define MMRF_CW816_PACK(pOR, rEGcW816_09_07, rEGcW816_TX_DET_ON)\
( (pOR & 0xFF87F)\
| (rEGcW816_09_07)\
| (rEGcW816_TX_DET_ON)\
)

/** CW818  **/
#define MMRF_CW818_POR_DATA  0x01417


#define MMRF_CW818_PACK(pOR, rEGcW818_05_04)\
( (pOR & 0xFFFCF)\
| (rEGcW818_05_04)\
)

/** CW825  **/
#define MMRF_CW825_POR_DATA  0x0030C


#define MMRF_CW825_PACK(pOR, rEGcW825_TXLPF)\
( (pOR & 0xC3C03)\
| (rEGcW825_TXLPF)\
)

/** CW826  **/
#define MMRF_CW826_POR_DATA  0x28050


#define MMRF_CW826_PACK(pOR, rEGcW826_TXLPF)\
( (pOR & 0xC3F0F)\
| (rEGcW826_TXLPF)\
)

/*******************************************************************************
*                       Common info                                             *
******************************************************************************/

typedef enum
{
   TTG_RX_GGE_2G_DCS1800,
   TTG_RX_GGE_2G_GSM850,
   TTG_RX_GGE_2G_GSM900,
   TTG_RX_GGE_2G_PCS1900,
   TTG_RX_WCDMA_3G_FDD_Band01,
   TTG_RX_WCDMA_3G_FDD_Band02,
   TTG_RX_WCDMA_3G_FDD_Band03,
   TTG_RX_WCDMA_3G_FDD_Band04,
   TTG_RX_WCDMA_3G_FDD_Band05,
   TTG_RX_WCDMA_3G_FDD_Band06,
   TTG_RX_WCDMA_3G_FDD_Band07,
   TTG_RX_WCDMA_3G_FDD_Band08,
   TTG_RX_WCDMA_3G_FDD_Band09,
   TTG_RX_WCDMA_3G_FDD_Band10,
   TTG_RX_WCDMA_3G_FDD_Band11,
   TTG_RX_WCDMA_3G_FDD_Band12,
   TTG_RX_WCDMA_3G_FDD_Band13,
   TTG_RX_WCDMA_3G_FDD_Band14,
   TTG_RX_WCDMA_3G_FDD_Band15,
   TTG_RX_WCDMA_3G_FDD_Band16,
   TTG_RX_WCDMA_3G_FDD_Band17,
   TTG_RX_WCDMA_3G_FDD_Band18,
   TTG_RX_WCDMA_3G_FDD_Band19,
   TTG_RX_WCDMA_3G_FDD_Band20,
   TTG_RX_WCDMA_3G_FDD_Band21,
   TTG_RX_WCDMA_3G_FDD_Band22,
   TTG_RX_WCDMA_3G_FDD_Band23,
   TTG_RX_WCDMA_3G_FDD_Band24,
   TTG_RX_WCDMA_3G_FDD_Band25,
   TTG_RX_WCDMA_3G_FDD_Band26,
   TTG_RX_WCDMA_3G_FDD_Band27,
   TTG_RX_WCDMA_3G_FDD_Band28,
   TTG_RX_WCDMA_3G_FDD_Band29,
   TTG_RX_WCDMA_3G_FDD_Band30,
   TTG_RX_WCDMA_3G_FDD_Band62,
   TTG_RX_TDSCDMA_3G_TDD_Band33,
   TTG_RX_TDSCDMA_3G_TDD_Band34,
   TTG_RX_TDSCDMA_3G_TDD_Band35,
   TTG_RX_TDSCDMA_3G_TDD_Band36,
   TTG_RX_TDSCDMA_3G_TDD_Band37,
   TTG_RX_TDSCDMA_3G_TDD_Band38,
   TTG_RX_TDSCDMA_3G_TDD_Band39,
   TTG_RX_TDSCDMA_3G_TDD_Band40,
   TTG_RX_TDSCDMA_3G_TDD_Band41,
   TTG_RX_TDSCDMA_3G_TDD_Band42,
   TTG_RX_TDSCDMA_3G_TDD_Band43,
   TTG_RX_TDSCDMA_3G_TDD_Band63,
   TTG_RX_LTE_4G_FDD_Band01,
   TTG_RX_LTE_4G_FDD_Band01CCA,
   TTG_RX_LTE_4G_FDD_Band02,
   TTG_RX_LTE_4G_FDD_Band02CCA,
   TTG_RX_LTE_4G_FDD_Band03,
   TTG_RX_LTE_4G_FDD_Band03CCA,
   TTG_RX_LTE_4G_FDD_Band04,
   TTG_RX_LTE_4G_FDD_Band04_B66,
   TTG_RX_LTE_4G_FDD_Band04_B66CCA,
   TTG_RX_LTE_4G_FDD_Band05,
   TTG_RX_LTE_4G_FDD_Band05HRM,
   TTG_RX_LTE_4G_FDD_Band05NHRM,
   TTG_RX_LTE_4G_FDD_Band06,
   TTG_RX_LTE_4G_FDD_Band06HRM,
   TTG_RX_LTE_4G_FDD_Band06NHRM,
   TTG_RX_LTE_4G_FDD_Band07,
   TTG_RX_LTE_4G_FDD_Band07CCA,
   TTG_RX_LTE_4G_FDD_Band08,
   TTG_RX_LTE_4G_FDD_Band08HRM,
   TTG_RX_LTE_4G_FDD_Band08NHRM,
   TTG_RX_LTE_4G_FDD_Band09,
   TTG_RX_LTE_4G_FDD_Band10,
   TTG_RX_LTE_4G_FDD_Band11,
   TTG_RX_LTE_4G_FDD_Band12,
   TTG_RX_LTE_4G_FDD_Band12HRM,
   TTG_RX_LTE_4G_FDD_Band12NHRM,
   TTG_RX_LTE_4G_FDD_Band13,
   TTG_RX_LTE_4G_FDD_Band13HRM,
   TTG_RX_LTE_4G_FDD_Band13NHRM,
   TTG_RX_LTE_4G_FDD_Band14,
   TTG_RX_LTE_4G_FDD_Band14HRM,
   TTG_RX_LTE_4G_FDD_Band15,
   TTG_RX_LTE_4G_FDD_Band16,
   TTG_RX_LTE_4G_FDD_Band17,
   TTG_RX_LTE_4G_FDD_Band17HRM,
   TTG_RX_LTE_4G_FDD_Band17NHRM,
   TTG_RX_LTE_4G_FDD_Band18,
   TTG_RX_LTE_4G_FDD_Band18HRM,
   TTG_RX_LTE_4G_FDD_Band18NHRM,
   TTG_RX_LTE_4G_FDD_Band19,
   TTG_RX_LTE_4G_FDD_Band19HRM,
   TTG_RX_LTE_4G_FDD_Band19NHRM,
   TTG_RX_LTE_4G_FDD_Band20,
   TTG_RX_LTE_4G_FDD_Band20HRM,
   TTG_RX_LTE_4G_FDD_Band20NHRM,
   TTG_RX_LTE_4G_FDD_Band21,
   TTG_RX_LTE_4G_FDD_Band22,
   TTG_RX_LTE_4G_FDD_Band23,
   TTG_RX_LTE_4G_FDD_Band24,
   TTG_RX_LTE_4G_FDD_Band25,
   TTG_RX_LTE_4G_FDD_Band26,
   TTG_RX_LTE_4G_FDD_Band26HRM,
   TTG_RX_LTE_4G_FDD_Band26NHRM,
   TTG_RX_LTE_4G_FDD_Band27,
   TTG_RX_LTE_4G_FDD_Band27HRM,
   TTG_RX_LTE_4G_FDD_Band27NHRM,
   TTG_RX_LTE_4G_FDD_Band28,
   TTG_RX_LTE_4G_FDD_Band28HRM,
   TTG_RX_LTE_4G_FDD_Band28NHRM,
   TTG_RX_LTE_4G_FDD_Band29,
   TTG_RX_LTE_4G_FDD_Band30,
   TTG_RX_LTE_4G_FDD_Band62,
   TTG_RX_LTE_4G_FDD_Band62CCA,
   TTG_RX_LTE_4G_TDD_Band33,
   TTG_RX_LTE_4G_TDD_Band34,
   TTG_RX_LTE_4G_TDD_Band35,
   TTG_RX_LTE_4G_TDD_Band36,
   TTG_RX_LTE_4G_TDD_Band37,
   TTG_RX_LTE_4G_TDD_Band38,
   TTG_RX_LTE_4G_TDD_Band38CCA,
   TTG_RX_LTE_4G_TDD_Band38HPUECCA,
   TTG_RX_LTE_4G_TDD_Band39,
   TTG_RX_LTE_4G_TDD_Band39CCA,
   TTG_RX_LTE_4G_TDD_Band40,
   TTG_RX_LTE_4G_TDD_Band40CCA,
   TTG_RX_LTE_4G_TDD_Band41,
   TTG_RX_LTE_4G_TDD_Band41CCA,
   TTG_RX_LTE_4G_TDD_Band41HPUECCA,
   TTG_RX_LTE_4G_TDD_Band42,
   TTG_RX_LTE_4G_TDD_Band43,
   TTG_RX_LTE_4G_TDD_Band44HRM,
   TTG_RX_LTE_4G_TDD_Band44NHRM,
   TTG_RX_LTE_4G_TDD_Band63,
   TTG_RX_C2K_Band00,
   TTG_RX_C2K_Band01,
   TTG_RX_C2K_Band02,
   TTG_RX_C2K_Band03,
   TTG_RX_C2K_Band04,
   TTG_RX_C2K_Band06,
   TTG_RX_C2K_Band10,
   TTG_RX_C2K_Band14,
   TTG_RX_C2K_Band15,
   TTG_RX_BAND_CNT,
}TTG_RX_BAND_E;

typedef enum
{
   SRX1_1_GGE_2G_Band02_xSAWLESS,
   SRX1_1_GGE_2G_Band03_xSAWLESS,
   SRX1_1_GGE_2G_Band05_xSAWLESS,
   SRX1_1_GGE_2G_Band08_xSAWLESS,
   SRX1_1_GGE_2G_DCS1800,
   SRX1_1_GGE_2G_GSM850,
   SRX1_1_GGE_2G_GSM900,
   SRX1_1_GGE_2G_PCS1900,
   SRX1_1_WCDMA_3G_FDD_Band01,
   SRX1_1_WCDMA_3G_FDD_Band02,
   SRX1_1_WCDMA_3G_FDD_Band03,
   SRX1_1_WCDMA_3G_FDD_Band04,
   SRX1_1_WCDMA_3G_FDD_Band05,
   SRX1_1_WCDMA_3G_FDD_Band06,
   SRX1_1_WCDMA_3G_FDD_Band07,
   SRX1_1_WCDMA_3G_FDD_Band08,
   SRX1_1_WCDMA_3G_FDD_Band09,
   SRX1_1_WCDMA_3G_FDD_Band10,
   SRX1_1_WCDMA_3G_FDD_Band11,
   SRX1_1_WCDMA_3G_FDD_Band12,
   SRX1_1_WCDMA_3G_FDD_Band13,
   SRX1_1_WCDMA_3G_FDD_Band14,
   SRX1_1_WCDMA_3G_FDD_Band15,
   SRX1_1_WCDMA_3G_FDD_Band16,
   SRX1_1_WCDMA_3G_FDD_Band17,
   SRX1_1_WCDMA_3G_FDD_Band18,
   SRX1_1_WCDMA_3G_FDD_Band19,
   SRX1_1_WCDMA_3G_FDD_Band20,
   SRX1_1_WCDMA_3G_FDD_Band21,
   SRX1_1_WCDMA_3G_FDD_Band22,
   SRX1_1_WCDMA_3G_FDD_Band23,
   SRX1_1_WCDMA_3G_FDD_Band24,
   SRX1_1_WCDMA_3G_FDD_Band25,
   SRX1_1_WCDMA_3G_FDD_Band26,
   SRX1_1_WCDMA_3G_FDD_Band27,
   SRX1_1_WCDMA_3G_FDD_Band28,
   SRX1_1_WCDMA_3G_FDD_Band29,
   SRX1_1_WCDMA_3G_FDD_Band30,
   SRX1_1_WCDMA_3G_FDD_Band62,
   SRX1_1_TDSCDMA_3G_TDD_Band33,
   SRX1_1_TDSCDMA_3G_TDD_Band34,
   SRX1_1_TDSCDMA_3G_TDD_Band35,
   SRX1_1_TDSCDMA_3G_TDD_Band36,
   SRX1_1_TDSCDMA_3G_TDD_Band37,
   SRX1_1_TDSCDMA_3G_TDD_Band38,
   SRX1_1_TDSCDMA_3G_TDD_Band39,
   SRX1_1_TDSCDMA_3G_TDD_Band40,
   SRX1_1_TDSCDMA_3G_TDD_Band41,
   SRX1_1_TDSCDMA_3G_TDD_Band41TRSW,
   SRX1_1_TDSCDMA_3G_TDD_Band63,
   SRX1_1_LTE_4G_FDD_Band01,
   SRX1_1_LTE_4G_FDD_Band01CCA,
   SRX1_1_LTE_4G_FDD_Band02,
   SRX1_1_LTE_4G_FDD_Band02CCA,
   SRX1_1_LTE_4G_FDD_Band03,
   SRX1_1_LTE_4G_FDD_Band03CCA,
   SRX1_1_LTE_4G_FDD_Band04,
   SRX1_1_LTE_4G_FDD_Band04_B66,
   SRX1_1_LTE_4G_FDD_Band04_B66CCA,
   SRX1_1_LTE_4G_FDD_Band05,
   SRX1_1_LTE_4G_FDD_Band06,
   SRX1_1_LTE_4G_FDD_Band07,
   SRX1_1_LTE_4G_FDD_Band07CCA,
   SRX1_1_LTE_4G_FDD_Band08,
   SRX1_1_LTE_4G_FDD_Band09,
   SRX1_1_LTE_4G_FDD_Band10,
   SRX1_1_LTE_4G_FDD_Band11,
   SRX1_1_LTE_4G_FDD_Band12,
   SRX1_1_LTE_4G_FDD_Band13,
   SRX1_1_LTE_4G_FDD_Band14,
   SRX1_1_LTE_4G_FDD_Band15,
   SRX1_1_LTE_4G_FDD_Band16,
   SRX1_1_LTE_4G_FDD_Band17,
   SRX1_1_LTE_4G_FDD_Band18,
   SRX1_1_LTE_4G_FDD_Band19,
   SRX1_1_LTE_4G_FDD_Band20,
   SRX1_1_LTE_4G_FDD_Band21,
   SRX1_1_LTE_4G_FDD_Band22,
   SRX1_1_LTE_4G_FDD_Band23,
   SRX1_1_LTE_4G_FDD_Band24,
   SRX1_1_LTE_4G_FDD_Band25,
   SRX1_1_LTE_4G_FDD_Band26,
   SRX1_1_LTE_4G_FDD_Band27,
   SRX1_1_LTE_4G_FDD_Band28,
   SRX1_1_LTE_4G_FDD_Band29,
   SRX1_1_LTE_4G_FDD_Band30,
   SRX1_1_LTE_4G_FDD_Band62,
   SRX1_1_LTE_4G_FDD_Band62CCA,
   SRX1_1_LTE_4G_TDD_Band33,
   SRX1_1_LTE_4G_TDD_Band34,
   SRX1_1_LTE_4G_TDD_Band35,
   SRX1_1_LTE_4G_TDD_Band35TRSW,
   SRX1_1_LTE_4G_TDD_Band36,
   SRX1_1_LTE_4G_TDD_Band36TRSW,
   SRX1_1_LTE_4G_TDD_Band37,
   SRX1_1_LTE_4G_TDD_Band38,
   SRX1_1_LTE_4G_TDD_Band38CCA,
   SRX1_1_LTE_4G_TDD_Band38HPUE,
   SRX1_1_LTE_4G_TDD_Band38HPUECCA,
   SRX1_1_LTE_4G_TDD_Band38TRSW,
   SRX1_1_LTE_4G_TDD_Band38TRSW_FEW,
   SRX1_1_LTE_4G_TDD_Band39,
   SRX1_1_LTE_4G_TDD_Band39CCA,
   SRX1_1_LTE_4G_TDD_Band39TRSW,
   SRX1_1_LTE_4G_TDD_Band39TRSW_FEW,
   SRX1_1_LTE_4G_TDD_Band40,
   SRX1_1_LTE_4G_TDD_Band40CCA,
   SRX1_1_LTE_4G_TDD_Band40TRSW,
   SRX1_1_LTE_4G_TDD_Band40TRSW_FEW,
   SRX1_1_LTE_4G_TDD_Band41,
   SRX1_1_LTE_4G_TDD_Band41CCA,
   SRX1_1_LTE_4G_TDD_Band41HPUE,
   SRX1_1_LTE_4G_TDD_Band41HPUECCA,
   SRX1_1_LTE_4G_TDD_Band41TRSW,
   SRX1_1_LTE_4G_TDD_Band41TRSW_FEW,
   SRX1_1_LTE_4G_TDD_Band44HRM,
   SRX1_1_LTE_4G_TDD_Band44NHRM,
   SRX1_1_LTE_4G_TDD_Band63,
   SRX1_1_LTE_4G_TDD_Band63TRSW,
   SRX1_1_C2K_Band00,
   SRX1_1_C2K_Band01,
   SRX1_1_C2K_Band04,
   SRX1_1_C2K_Band06,
   SRX1_1_C2K_Band10,
   SRX1_1_C2K_Band14,
   SRX1_1_C2K_Band15,
   SRX1_1_BAND_CNT,
}SRX1_1_BAND_E;

typedef enum
{
   TTG_TX_GGE_2G_DCS1800,
   TTG_TX_GGE_2G_GSM850,
   TTG_TX_GGE_2G_GSM900,
   TTG_TX_GGE_2G_PCS1900,
   TTG_TX_WCDMA_3G_FDD_Band01,
   TTG_TX_WCDMA_3G_FDD_Band02,
   TTG_TX_WCDMA_3G_FDD_Band03,
   TTG_TX_WCDMA_3G_FDD_Band04,
   TTG_TX_WCDMA_3G_FDD_Band05,
   TTG_TX_WCDMA_3G_FDD_Band06,
   TTG_TX_WCDMA_3G_FDD_Band07,
   TTG_TX_WCDMA_3G_FDD_Band08,
   TTG_TX_WCDMA_3G_FDD_Band09,
   TTG_TX_WCDMA_3G_FDD_Band10,
   TTG_TX_WCDMA_3G_FDD_Band11,
   TTG_TX_WCDMA_3G_FDD_Band12,
   TTG_TX_WCDMA_3G_FDD_Band13,
   TTG_TX_WCDMA_3G_FDD_Band14,
   TTG_TX_WCDMA_3G_FDD_Band15,
   TTG_TX_WCDMA_3G_FDD_Band16,
   TTG_TX_WCDMA_3G_FDD_Band17,
   TTG_TX_WCDMA_3G_FDD_Band18,
   TTG_TX_WCDMA_3G_FDD_Band19,
   TTG_TX_WCDMA_3G_FDD_Band20,
   TTG_TX_WCDMA_3G_FDD_Band21,
   TTG_TX_WCDMA_3G_FDD_Band22,
   TTG_TX_WCDMA_3G_FDD_Band23,
   TTG_TX_WCDMA_3G_FDD_Band24,
   TTG_TX_WCDMA_3G_FDD_Band25,
   TTG_TX_WCDMA_3G_FDD_Band26,
   TTG_TX_WCDMA_3G_FDD_Band27,
   TTG_TX_WCDMA_3G_FDD_Band28,
   TTG_TX_WCDMA_3G_FDD_Band29,
   TTG_TX_WCDMA_3G_FDD_Band30,
   TTG_TX_WCDMA_3G_FDD_Band62,
   TTG_TX_TDSCDMA_3G_TDD_Band33,
   TTG_TX_TDSCDMA_3G_TDD_Band34,
   TTG_TX_TDSCDMA_3G_TDD_Band35,
   TTG_TX_TDSCDMA_3G_TDD_Band36,
   TTG_TX_TDSCDMA_3G_TDD_Band37,
   TTG_TX_TDSCDMA_3G_TDD_Band38,
   TTG_TX_TDSCDMA_3G_TDD_Band39,
   TTG_TX_TDSCDMA_3G_TDD_Band40,
   TTG_TX_TDSCDMA_3G_TDD_Band41,
   TTG_TX_TDSCDMA_3G_TDD_Band42,
   TTG_TX_TDSCDMA_3G_TDD_Band43,
   TTG_TX_TDSCDMA_3G_TDD_Band63,
   TTG_TX_LTE_4G_FDD_Band01,
   TTG_TX_LTE_4G_FDD_Band01CCA,
   TTG_TX_LTE_4G_FDD_Band02,
   TTG_TX_LTE_4G_FDD_Band03,
   TTG_TX_LTE_4G_FDD_Band03CCA,
   TTG_TX_LTE_4G_FDD_Band04,
   TTG_TX_LTE_4G_FDD_Band04_B66,
   TTG_TX_LTE_4G_FDD_Band04_B66CCA,
   TTG_TX_LTE_4G_FDD_Band05,
   TTG_TX_LTE_4G_FDD_Band05HRM,
   TTG_TX_LTE_4G_FDD_Band05NHRM,
   TTG_TX_LTE_4G_FDD_Band06,
   TTG_TX_LTE_4G_FDD_Band06HRM,
   TTG_TX_LTE_4G_FDD_Band06NHRM,
   TTG_TX_LTE_4G_FDD_Band07,
   TTG_TX_LTE_4G_FDD_Band07CCA,
   TTG_TX_LTE_4G_FDD_Band08,
   TTG_TX_LTE_4G_FDD_Band08HRM,
   TTG_TX_LTE_4G_FDD_Band08NHRM,
   TTG_TX_LTE_4G_FDD_Band09,
   TTG_TX_LTE_4G_FDD_Band10,
   TTG_TX_LTE_4G_FDD_Band11,
   TTG_TX_LTE_4G_FDD_Band12,
   TTG_TX_LTE_4G_FDD_Band12HRM,
   TTG_TX_LTE_4G_FDD_Band12NHRM,
   TTG_TX_LTE_4G_FDD_Band13,
   TTG_TX_LTE_4G_FDD_Band13HRM,
   TTG_TX_LTE_4G_FDD_Band13NHRM,
   TTG_TX_LTE_4G_FDD_Band14,
   TTG_TX_LTE_4G_FDD_Band14HRM,
   TTG_TX_LTE_4G_FDD_Band15,
   TTG_TX_LTE_4G_FDD_Band16,
   TTG_TX_LTE_4G_FDD_Band17,
   TTG_TX_LTE_4G_FDD_Band17HRM,
   TTG_TX_LTE_4G_FDD_Band17NHRM,
   TTG_TX_LTE_4G_FDD_Band18,
   TTG_TX_LTE_4G_FDD_Band18HRM,
   TTG_TX_LTE_4G_FDD_Band18NHRM,
   TTG_TX_LTE_4G_FDD_Band19,
   TTG_TX_LTE_4G_FDD_Band19HRM,
   TTG_TX_LTE_4G_FDD_Band19NHRM,
   TTG_TX_LTE_4G_FDD_Band20,
   TTG_TX_LTE_4G_FDD_Band20HRM,
   TTG_TX_LTE_4G_FDD_Band20NHRM,
   TTG_TX_LTE_4G_FDD_Band21,
   TTG_TX_LTE_4G_FDD_Band22,
   TTG_TX_LTE_4G_FDD_Band23,
   TTG_TX_LTE_4G_FDD_Band24,
   TTG_TX_LTE_4G_FDD_Band25,
   TTG_TX_LTE_4G_FDD_Band26,
   TTG_TX_LTE_4G_FDD_Band26HRM,
   TTG_TX_LTE_4G_FDD_Band26NHRM,
   TTG_TX_LTE_4G_FDD_Band27,
   TTG_TX_LTE_4G_FDD_Band27HRM,
   TTG_TX_LTE_4G_FDD_Band27NHRM,
   TTG_TX_LTE_4G_FDD_Band28,
   TTG_TX_LTE_4G_FDD_Band28HRM,
   TTG_TX_LTE_4G_FDD_Band28NHRM,
   TTG_TX_LTE_4G_FDD_Band29,
   TTG_TX_LTE_4G_FDD_Band30,
   TTG_TX_LTE_4G_FDD_Band62,
   TTG_TX_LTE_4G_FDD_Band62CCA,
   TTG_TX_LTE_4G_TDD_Band33,
   TTG_TX_LTE_4G_TDD_Band34,
   TTG_TX_LTE_4G_TDD_Band35,
   TTG_TX_LTE_4G_TDD_Band36,
   TTG_TX_LTE_4G_TDD_Band37,
   TTG_TX_LTE_4G_TDD_Band38,
   TTG_TX_LTE_4G_TDD_Band38CCA,
   TTG_TX_LTE_4G_TDD_Band38HPUECCA,
   TTG_TX_LTE_4G_TDD_Band39,
   TTG_TX_LTE_4G_TDD_Band39CCA,
   TTG_TX_LTE_4G_TDD_Band40,
   TTG_TX_LTE_4G_TDD_Band40CCA,
   TTG_TX_LTE_4G_TDD_Band41,
   TTG_TX_LTE_4G_TDD_Band41CCA,
   TTG_TX_LTE_4G_TDD_Band41HPUECCA,
   TTG_TX_LTE_4G_TDD_Band42,
   TTG_TX_LTE_4G_TDD_Band43,
   TTG_TX_LTE_4G_TDD_Band44HRM,
   TTG_TX_LTE_4G_TDD_Band44NHRM,
   TTG_TX_LTE_4G_TDD_Band63,
   TTG_TX_C2K_Band00,
   TTG_TX_C2K_Band01,
   TTG_TX_C2K_Band02,
   TTG_TX_C2K_Band03,
   TTG_TX_C2K_Band04,
   TTG_TX_C2K_Band06,
   TTG_TX_C2K_Band10,
   TTG_TX_C2K_Band14,
   TTG_TX_C2K_Band15,
   TTG_TX_BAND_CNT,
}TTG_TX_BAND_E;

typedef enum
{
   RX1_GGE_2G_Band02_xSAWLESS,
   RX1_GGE_2G_Band03_xSAWLESS,
   RX1_GGE_2G_Band05_xSAWLESS,
   RX1_GGE_2G_Band08_xSAWLESS,
   RX1_GGE_2G_DCS1800,
   RX1_GGE_2G_GSM850,
   RX1_GGE_2G_GSM900,
   RX1_GGE_2G_PCS1900,
   RX1_WCDMA_3G_FDD_Band01,
   RX1_WCDMA_3G_FDD_Band02,
   RX1_WCDMA_3G_FDD_Band03,
   RX1_WCDMA_3G_FDD_Band04,
   RX1_WCDMA_3G_FDD_Band05,
   RX1_WCDMA_3G_FDD_Band06,
   RX1_WCDMA_3G_FDD_Band07,
   RX1_WCDMA_3G_FDD_Band08,
   RX1_WCDMA_3G_FDD_Band09,
   RX1_WCDMA_3G_FDD_Band10,
   RX1_WCDMA_3G_FDD_Band11,
   RX1_WCDMA_3G_FDD_Band12,
   RX1_WCDMA_3G_FDD_Band13,
   RX1_WCDMA_3G_FDD_Band14,
   RX1_WCDMA_3G_FDD_Band17,
   RX1_WCDMA_3G_FDD_Band18,
   RX1_WCDMA_3G_FDD_Band19,
   RX1_WCDMA_3G_FDD_Band20,
   RX1_WCDMA_3G_FDD_Band21,
   RX1_WCDMA_3G_FDD_Band23,
   RX1_WCDMA_3G_FDD_Band24,
   RX1_WCDMA_3G_FDD_Band25,
   RX1_WCDMA_3G_FDD_Band26,
   RX1_WCDMA_3G_FDD_Band27,
   RX1_WCDMA_3G_FDD_Band28,
   RX1_WCDMA_3G_FDD_Band29,
   RX1_WCDMA_3G_FDD_Band30,
   RX1_WCDMA_3G_FDD_Band62,
   RX1_TDSCDMA_3G_TDD_Band33,
   RX1_TDSCDMA_3G_TDD_Band34,
   RX1_TDSCDMA_3G_TDD_Band35,
   RX1_TDSCDMA_3G_TDD_Band36,
   RX1_TDSCDMA_3G_TDD_Band37,
   RX1_TDSCDMA_3G_TDD_Band38,
   RX1_TDSCDMA_3G_TDD_Band39,
   RX1_TDSCDMA_3G_TDD_Band40,
   RX1_TDSCDMA_3G_TDD_Band41,
   RX1_TDSCDMA_3G_TDD_Band63,
   RX1_LTE_4G_FDD_Band01,
   RX1_LTE_4G_FDD_Band01CCA,
   RX1_LTE_4G_FDD_Band02,
   RX1_LTE_4G_FDD_Band02CCA,
   RX1_LTE_4G_FDD_Band03,
   RX1_LTE_4G_FDD_Band03CCA,
   RX1_LTE_4G_FDD_Band04,
   RX1_LTE_4G_FDD_Band04_B66,
   RX1_LTE_4G_FDD_Band04_B66CCA,
   RX1_LTE_4G_FDD_Band05,
   RX1_LTE_4G_FDD_Band06,
   RX1_LTE_4G_FDD_Band07,
   RX1_LTE_4G_FDD_Band07CCA,
   RX1_LTE_4G_FDD_Band08,
   RX1_LTE_4G_FDD_Band09,
   RX1_LTE_4G_FDD_Band10,
   RX1_LTE_4G_FDD_Band11,
   RX1_LTE_4G_FDD_Band12,
   RX1_LTE_4G_FDD_Band13,
   RX1_LTE_4G_FDD_Band14,
   RX1_LTE_4G_FDD_Band17,
   RX1_LTE_4G_FDD_Band18,
   RX1_LTE_4G_FDD_Band19,
   RX1_LTE_4G_FDD_Band20,
   RX1_LTE_4G_FDD_Band21,
   RX1_LTE_4G_FDD_Band23,
   RX1_LTE_4G_FDD_Band24,
   RX1_LTE_4G_FDD_Band25,
   RX1_LTE_4G_FDD_Band26,
   RX1_LTE_4G_FDD_Band27,
   RX1_LTE_4G_FDD_Band28,
   RX1_LTE_4G_FDD_Band29,
   RX1_LTE_4G_FDD_Band30,
   RX1_LTE_4G_FDD_Band62,
   RX1_LTE_4G_FDD_Band62CCA,
   RX1_LTE_4G_TDD_Band33,
   RX1_LTE_4G_TDD_Band34,
   RX1_LTE_4G_TDD_Band35,
   RX1_LTE_4G_TDD_Band36,
   RX1_LTE_4G_TDD_Band37,
   RX1_LTE_4G_TDD_Band38,
   RX1_LTE_4G_TDD_Band38CCA,
   RX1_LTE_4G_TDD_Band38HPUE,
   RX1_LTE_4G_TDD_Band38HPUECCA,
   RX1_LTE_4G_TDD_Band39,
   RX1_LTE_4G_TDD_Band39CCA,
   RX1_LTE_4G_TDD_Band40,
   RX1_LTE_4G_TDD_Band40CCA,
   RX1_LTE_4G_TDD_Band41,
   RX1_LTE_4G_TDD_Band41CCA,
   RX1_LTE_4G_TDD_Band41HPUE,
   RX1_LTE_4G_TDD_Band41HPUECCA,
   RX1_LTE_4G_TDD_Band41TRSW,
   RX1_LTE_4G_TDD_Band44HRM,
   RX1_LTE_4G_TDD_Band44NHRM,
   RX1_LTE_4G_TDD_Band63,
   RX1_C2K_Band00,
   RX1_C2K_Band01,
   RX1_C2K_Band04,
   RX1_C2K_Band06,
   RX1_C2K_Band10,
   RX1_C2K_Band14,
   RX1_C2K_Band15,
   RX1_BAND_CNT,
}RX1_BAND_E;

typedef enum
{
   STX_GGE_2G_DCS1800,
   STX_GGE_2G_GSM850,
   STX_GGE_2G_GSM900,
   STX_GGE_2G_PCS1900,
   STX_WCDMA_3G_FDD_Band01,
   STX_WCDMA_3G_FDD_Band02,
   STX_WCDMA_3G_FDD_Band03,
   STX_WCDMA_3G_FDD_Band04,
   STX_WCDMA_3G_FDD_Band05,
   STX_WCDMA_3G_FDD_Band06,
   STX_WCDMA_3G_FDD_Band08,
   STX_WCDMA_3G_FDD_Band09,
   STX_WCDMA_3G_FDD_Band11,
   STX_WCDMA_3G_FDD_Band18,
   STX_WCDMA_3G_FDD_Band19,
   STX_WCDMA_3G_FDD_Band21,
   STX_LTE_4G_FDD_Band01,
   STX_LTE_4G_FDD_Band01CCA,
   STX_LTE_4G_FDD_Band02,
   STX_LTE_4G_FDD_Band03,
   STX_LTE_4G_FDD_Band03CCA,
   STX_LTE_4G_FDD_Band04,
   STX_LTE_4G_FDD_Band04_B66,
   STX_LTE_4G_FDD_Band04_B66CCA,
   STX_LTE_4G_FDD_Band05,
   STX_LTE_4G_FDD_Band06,
   STX_LTE_4G_FDD_Band07,
   STX_LTE_4G_FDD_Band07CCA,
   STX_LTE_4G_FDD_Band08,
   STX_LTE_4G_FDD_Band09,
   STX_LTE_4G_FDD_Band10,
   STX_LTE_4G_FDD_Band11,
   STX_LTE_4G_FDD_Band12,
   STX_LTE_4G_FDD_Band13,
   STX_LTE_4G_FDD_Band14,
   STX_LTE_4G_FDD_Band17,
   STX_LTE_4G_FDD_Band18,
   STX_LTE_4G_FDD_Band19,
   STX_LTE_4G_FDD_Band20,
   STX_LTE_4G_FDD_Band21,
   STX_LTE_4G_FDD_Band23,
   STX_LTE_4G_FDD_Band24,
   STX_LTE_4G_FDD_Band25,
   STX_LTE_4G_FDD_Band26,
   STX_LTE_4G_FDD_Band27,
   STX_LTE_4G_FDD_Band28,
   STX_LTE_4G_FDD_Band30,
   STX_LTE_4G_FDD_Band62,
   STX_C2K_Band00,
   STX_C2K_Band01,
   STX_C2K_Band02,
   STX_C2K_Band03,
   STX_C2K_Band04,
   STX_C2K_Band06,
   STX_C2K_Band10,
   STX_C2K_Band14,
   STX_C2K_Band15,
   STX_BAND_CNT,
}STX_BAND_E;

typedef enum
{
   TX_GGE_2G_DCS1800,
   TX_GGE_2G_GSM850,
   TX_GGE_2G_GSM900,
   TX_GGE_2G_PCS1900,
   TX_WCDMA_3G_FDD_Band01,
   TX_WCDMA_3G_FDD_Band02,
   TX_WCDMA_3G_FDD_Band03,
   TX_WCDMA_3G_FDD_Band04,
   TX_WCDMA_3G_FDD_Band05,
   TX_WCDMA_3G_FDD_Band06,
   TX_WCDMA_3G_FDD_Band08,
   TX_WCDMA_3G_FDD_Band09,
   TX_WCDMA_3G_FDD_Band11,
   TX_WCDMA_3G_FDD_Band18,
   TX_WCDMA_3G_FDD_Band19,
   TX_WCDMA_3G_FDD_Band21,
   TX_TDSCDMA_3G_TDD_Band34,
   TX_TDSCDMA_3G_TDD_Band38,
   TX_TDSCDMA_3G_TDD_Band39,
   TX_TDSCDMA_3G_TDD_Band40,
   TX_LTE_4G_FDD_Band01,
   TX_LTE_4G_FDD_Band01CCA,
   TX_LTE_4G_FDD_Band02,
   TX_LTE_4G_FDD_Band03,
   TX_LTE_4G_FDD_Band03CCA,
   TX_LTE_4G_FDD_Band04,
   TX_LTE_4G_FDD_Band04_B66,
   TX_LTE_4G_FDD_Band05,
   TX_LTE_4G_FDD_Band06,
   TX_LTE_4G_FDD_Band07,
   TX_LTE_4G_FDD_Band07CCA,
   TX_LTE_4G_FDD_Band08,
   TX_LTE_4G_FDD_Band09,
   TX_LTE_4G_FDD_Band10,
   TX_LTE_4G_FDD_Band11,
   TX_LTE_4G_FDD_Band12,
   TX_LTE_4G_FDD_Band13,
   TX_LTE_4G_FDD_Band14,
   TX_LTE_4G_FDD_Band17,
   TX_LTE_4G_FDD_Band18,
   TX_LTE_4G_FDD_Band19,
   TX_LTE_4G_FDD_Band20,
   TX_LTE_4G_FDD_Band21,
   TX_LTE_4G_FDD_Band23,
   TX_LTE_4G_FDD_Band24,
   TX_LTE_4G_FDD_Band25,
   TX_LTE_4G_FDD_Band26,
   TX_LTE_4G_FDD_Band27,
   TX_LTE_4G_FDD_Band28,
   TX_LTE_4G_FDD_Band30,
   TX_LTE_4G_FDD_Band62,
   TX_LTE_4G_TDD_Band33,
   TX_LTE_4G_TDD_Band34,
   TX_LTE_4G_TDD_Band35,
   TX_LTE_4G_TDD_Band36,
   TX_LTE_4G_TDD_Band37,
   TX_LTE_4G_TDD_Band38,
   TX_LTE_4G_TDD_Band38CCA,
   TX_LTE_4G_TDD_Band38HPUE,
   TX_LTE_4G_TDD_Band38HPUECCA,
   TX_LTE_4G_TDD_Band39,
   TX_LTE_4G_TDD_Band39CCA,
   TX_LTE_4G_TDD_Band40,
   TX_LTE_4G_TDD_Band40CCA,
   TX_LTE_4G_TDD_Band41,
   TX_LTE_4G_TDD_Band41CCA,
   TX_LTE_4G_TDD_Band41HPUE,
   TX_LTE_4G_TDD_Band41HPUECCA,
   TX_LTE_4G_TDD_Band44HRM,
   TX_LTE_4G_TDD_Band44NHRM,
   TX_LTE_4G_TDD_Band63,
   TX_C2K_Band00,
   TX_C2K_Band01,
   TX_C2K_Band04,
   TX_C2K_Band06,
   TX_C2K_Band10,
   TX_C2K_Band14,
   TX_C2K_Band15,
   TX_BAND_CNT,
}TX_BAND_E;

typedef struct
{
   TTG_RX_BAND_E     band;
   kal_uint32 cw047_12_12_08_08;
   kal_uint32 cw048_03_03;
}TTG_RX_CW_T;

typedef struct
{
   SRX1_1_BAND_E     band;
   kal_uint32 cw128_19_09_08_08_07_07;
   kal_uint32 cw131_07_07_05_05_03_03_02_00;
   kal_uint32 cw134_19_19_18_18_07_07;
   kal_uint32 cw179_15_11_10_06_05_00;
   kal_uint32 cw181_15_11_10_06_05_00;
   kal_uint32 cw183_15_11_10_06_05_00;
}SRX1_1_CW_T;

typedef struct
{
   TTG_TX_BAND_E     band;
   kal_uint32 cw047_12_12_08_08;
   kal_uint32 cw048_03_03;
}TTG_TX_CW_T;

typedef struct
{
   STX_BAND_E     band;
   kal_uint32 cw511_13_09_08_08_07_07_06_05_01_01;
   kal_uint32 cw521_12_09;
   kal_uint32 cw704_00_00;
}STX_CW_T;

typedef struct
{
   RX1_BAND_E     band;
   kal_uint32 cw322_11_11_04_04_03_03_02_02;
   kal_uint32 cw324_04_04_03_03_02_02;
   kal_uint32 cw389_08_06;
   kal_uint32 cw390_08_06;
   kal_uint32 cw391_08_06;
   kal_uint32 cw399_13_10_06_03;
   kal_uint32 cw495_17_17_16_13_12_09_08_08_06_04_03_00;
   kal_uint32 cw500_17_15_14_12_11_09_08_05;
   kal_uint32 cw501_17_15_14_12_11_09_08_05;
}RX1_CW_T;

typedef struct
{
   TX_BAND_E     band;
   kal_uint32 cw707_13_13;
   kal_uint32 cw711_07_07;
   kal_uint32 cw712_13_10_09_09_06_04;
   kal_uint32 cw727_19_10_09_00;
   kal_uint32 cw728_19_10_09_00;
   kal_uint32 cw732_19_10;
   kal_uint32 cw786_17_10_09_00;
   kal_uint32 cw794_19_15_14_10_09_05_04_00;
   kal_uint32 cw797_17_12_11_06_05_03_02_00;
   kal_uint32 cw798_07_04_03_00;
   kal_uint32 cw799_19_14_13_11_09_04_02_00;
   kal_uint32 cw802_19_15_14_10_09_09_08_08_07_05_04_02;
   kal_uint32 cw803_19_13_12_06_04_00;
   kal_uint32 cw814_05_03;
   kal_uint32 cw816_09_07;
   kal_uint32 cw818_05_04;
}TX_CW_T;

/*******************************************************************************
*                       *Reg-base info*                                         *
******************************************************************************/

typedef enum
{
   DET_GAIN_TABLE_DT00,
   DET_GAIN_TABLE_DT01,
   DET_GAIN_TABLE_DT02,
   DET_GAIN_TABLE_DT03,
   DET_GAIN_TABLE_DT04,
   DET_GAIN_TABLE_DT05,
   DET_GAIN_TABLE_DT06,
   DET_GAIN_TABLE_DT07,
   DET_GAIN_TABLE_DT08,
   DET_GAIN_TABLE_DT09,
   DET_GAIN_TABLE_DT10,
   DET_GAIN_TABLE_DT11,
   DET_GAIN_TABLE_DT12,
   DET_GAIN_TABLE_DT13,
   DET_GAIN_TABLE_DT14,
   DET_GAIN_TABLE_RFLPBK_DT15,
   DET_GAIN_TABLE_RFLPBK_DT16,
   DET_GAIN_TABLE_CNT,
}DET_GAIN_TABLE_E;

typedef enum
{
   DRX1_BANDSEL_ALL_OPEN,
   DRX1_BANDSEL_BSEL_0P6GHZ_TO_1GHZ,
   DRX1_BANDSEL_BSEL_1GHZ_TO_2GHZ,
   DRX1_BANDSEL_BSEL_2GHZ_TO_2P7GHZ,
   DRX1_BANDSEL_CNT,
}DRX1_BANDSEL_E;

typedef enum
{
   DRX1_BW_GGE_TDSCDMASC_C2K_LTE1P4M,
   DRX1_BW_LTE20M,
   DRX1_BW_LTEA30M,
   DRX1_BW_LTEA35M,
   DRX1_BW_LTEA40M,
   DRX1_BW_TDSCDMADC,
   DRX1_BW_WCDMA3C_LTE15M,
   DRX1_BW_WCDMADC_LTE10M,
   DRX1_BW_WCDMASC_LTE3M_LTE5M,
   DRX1_BW_CNT,
}DRX1_BW_E;

typedef enum
{
   DRX1_GAIN_HPM_DIF_RX_GAIN_11P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_14P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_17P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_20P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_23P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_26P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_29P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_32P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_35P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_38P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_41P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_44P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_47P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_50P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_53P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_56P6DB,
   DRX1_GAIN_HPM_DIF_RX_GAIN_8P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_11P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_14P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_17P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_20P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_23P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_26P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_29P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_32P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_35P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_38P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_41P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_44P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_47P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_50P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_53P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_56P6DB,
   DRX1_GAIN_HPM_SE_RX_GAIN_8P6DB,
   DRX1_GAIN_HPM_WI_IIP2K_DIF_RX_GAIN_56P6DB,
   DRX1_GAIN_HPM_WI_IIP2K_SE_RX_GAIN_56P6DB,
   DRX1_GAIN_HPM_WI_IRRK_DIF_RX_GAIN_26P6DB,
   DRX1_GAIN_HPM_WI_IRRK_SE_RX_GAIN_32P6DB,
   DRX1_GAIN_LPM_DIF_RX_GAIN_12P6DB,
   DRX1_GAIN_LPM_DIF_RX_GAIN_18P6DB,
   DRX1_GAIN_LPM_DIF_RX_GAIN_24P6DB,
   DRX1_GAIN_LPM_DIF_RX_GAIN_30P6DB,
   DRX1_GAIN_LPM_DIF_RX_GAIN_36P6DB,
   DRX1_GAIN_LPM_DIF_RX_GAIN_42P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_12P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_15P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_18P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_21P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_24P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_27P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_30P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_33P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_36P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_39P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_42P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_45P6DB,
   DRX1_GAIN_LPM_SE_RX_GAIN_48P6DB,
   DRX1_GAIN_LPM_WI_IIP2K_DIF_RX_GAIN_42P6DB,
   DRX1_GAIN_LPM_WI_IIP2K_SE_RX_GAIN_48P6DB,
   DRX1_GAIN_LPM_WI_IRRK_DIF_RX_GAIN_24P6DB,
   DRX1_GAIN_LPM_WI_IRRK_SE_RX_GAIN_33P6DB,
   DRX1_GAIN_CNT,
}DRX1_GAIN_E;

typedef enum
{
   DRX1_LNAMIXER_EN_LNA_MIXER_DISABLE,
   DRX1_LNAMIXER_EN_LNA_MIXER_ENABLE,
   DRX1_LNAMIXER_EN_CNT,
}DRX1_LNAMIXER_EN_E;

typedef enum
{
   DRX1_LNASEL_LNA0,
   DRX1_LNASEL_LNA1,
   DRX1_LNASEL_LNA10,
   DRX1_LNASEL_LNA2,
   DRX1_LNASEL_LNA3,
   DRX1_LNASEL_LNA4,
   DRX1_LNASEL_LNA5,
   DRX1_LNASEL_LNA6,
   DRX1_LNASEL_LNA7,
   DRX1_LNASEL_LNA8,
   DRX1_LNASEL_LNA9,
   DRX1_LNASEL_CNT,
}DRX1_LNASEL_E;

typedef enum
{
   DRX1_PM_HPM,
   DRX1_PM_LPM_LTEA_30_35_40_MHZ_DIF,
   DRX1_PM_LPM_LTEA_30_35_40_MHZ_SE,
   DRX1_PM_LPM_LTE_15_20_MHZ_DIF,
   DRX1_PM_LPM_LTE_15_20_MHZ_SE,
   DRX1_PM_LPM_LTE_1P4_3_5_10_MHZ_DIF,
   DRX1_PM_LPM_LTE_1P4_3_5_10_MHZ_SE,
   DRX1_PM_LPM_WCDMA_VOICE_DIF,
   DRX1_PM_LPM_WCDMA_VOICE_SE,
   DRX1_PM_CNT,
}DRX1_PM_E;

typedef enum
{
   DRX1_POFF_DCOC_LNA_OFF,
   DRX1_POFF_NORMAL_OPERATION,
   DRX1_POFF_PARTIAL_OFF,
   DRX1_POFF_CNT,
}DRX1_POFF_E;

typedef enum
{
   PRX1_2G_IRRC_2G_IRRC_DISABLE,
   PRX1_2G_IRRC_2G_IRRC_ENABLE,
   PRX1_2G_IRRC_CNT,
}PRX1_2G_IRRC_E;

typedef enum
{
   PRX1_BANDSEL_ALL_OPEN,
   PRX1_BANDSEL_BSEL_0P6GHZ_TO_1GHZ,
   PRX1_BANDSEL_BSEL_1GHZ_TO_2GHZ,
   PRX1_BANDSEL_BSEL_2GHZ_TO_2P7GHZ,
   PRX1_BANDSEL_CNT,
}PRX1_BANDSEL_E;

typedef enum
{
   PRX1_BW_GGE_TDSCDMASC_C2K_LTE1P4M,
   PRX1_BW_LTE20M,
   PRX1_BW_LTEA30M,
   PRX1_BW_LTEA35M,
   PRX1_BW_LTEA40M,
   PRX1_BW_TDSCDMADC,
   PRX1_BW_WCDMA3C_LTE15M,
   PRX1_BW_WCDMADC_LTE10M,
   PRX1_BW_WCDMASC_LTE3M_LTE5M,
   PRX1_BW_CNT,
}PRX1_BW_E;

typedef enum
{
   PRX1_GAIN_HPM_DIF_RX_GAIN_11P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_14P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_17P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_20P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_23P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_26P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_29P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_32P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_35P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_38P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_41P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_44P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_47P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_50P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_53P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_56P6DB,
   PRX1_GAIN_HPM_DIF_RX_GAIN_8P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_11P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_14P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_17P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_20P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_23P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_26P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_29P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_32P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_35P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_38P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_41P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_44P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_47P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_50P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_53P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_56P6DB,
   PRX1_GAIN_HPM_SE_RX_GAIN_8P6DB,
   PRX1_GAIN_HPM_WI_IIP2K_DIF_RX_GAIN_56P6DB,
   PRX1_GAIN_HPM_WI_IIP2K_SE_RX_GAIN_56P6DB,
   PRX1_GAIN_HPM_WI_IRRK_DIF_RX_GAIN_26P6DB,
   PRX1_GAIN_HPM_WI_IRRK_SE_RX_GAIN_32P6DB,
   PRX1_GAIN_LPM_DIF_RX_GAIN_12P6DB,
   PRX1_GAIN_LPM_DIF_RX_GAIN_18P6DB,
   PRX1_GAIN_LPM_DIF_RX_GAIN_24P6DB,
   PRX1_GAIN_LPM_DIF_RX_GAIN_30P6DB,
   PRX1_GAIN_LPM_DIF_RX_GAIN_36P6DB,
   PRX1_GAIN_LPM_DIF_RX_GAIN_42P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_12P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_15P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_18P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_21P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_24P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_27P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_30P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_33P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_36P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_39P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_42P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_45P6DB,
   PRX1_GAIN_LPM_SE_RX_GAIN_48P6DB,
   PRX1_GAIN_LPM_WI_IIP2K_DIF_RX_GAIN_42P6DB,
   PRX1_GAIN_LPM_WI_IIP2K_SE_RX_GAIN_48P6DB,
   PRX1_GAIN_LPM_WI_IRRK_DIF_RX_GAIN_24P6DB,
   PRX1_GAIN_LPM_WI_IRRK_SE_RX_GAIN_33P6DB,
   PRX1_GAIN_CNT,
}PRX1_GAIN_E;

typedef enum
{
   PRX1_IIP2C_ALL_OFF,
   PRX1_IIP2C_IIP2C_0P6GHZ_TO_1GHZ,
   PRX1_IIP2C_IIP2C_1GHZ_TO_2P02GHZ,
   PRX1_IIP2C_IIP2C_2P3GHZ_TO_2P7GHZ,
   PRX1_IIP2C_CNT,
}PRX1_IIP2C_E;

typedef enum
{
   PRX1_LNAMIXER_EN_LNA_MIXER_DISABLE,
   PRX1_LNAMIXER_EN_LNA_MIXER_ENABLE,
   PRX1_LNAMIXER_EN_CNT,
}PRX1_LNAMIXER_EN_E;

typedef enum
{
   PRX1_LNASEL_LNA0,
   PRX1_LNASEL_LNA1,
   PRX1_LNASEL_LNA10,
   PRX1_LNASEL_LNA2,
   PRX1_LNASEL_LNA3,
   PRX1_LNASEL_LNA4,
   PRX1_LNASEL_LNA5,
   PRX1_LNASEL_LNA6,
   PRX1_LNASEL_LNA7,
   PRX1_LNASEL_LNA8,
   PRX1_LNASEL_LNA9,
   PRX1_LNASEL_CNT,
}PRX1_LNASEL_E;

typedef enum
{
   PRX1_OBBFLAG_GGE_OBBFLAG_ON,
   PRX1_OBBFLAG_OBBFLAG_OFF,
   PRX1_OBBFLAG_TDD_OBBFLAG_ON,
   PRX1_OBBFLAG_CNT,
}PRX1_OBBFLAG_E;

typedef enum
{
   PRX1_PM_HPM,
   PRX1_PM_LPM_LTEA_30_35_40_MHZ_DIF,
   PRX1_PM_LPM_LTEA_30_35_40_MHZ_SE,
   PRX1_PM_LPM_LTE_15_20_MHZ_DIF,
   PRX1_PM_LPM_LTE_15_20_MHZ_SE,
   PRX1_PM_LPM_LTE_1P4_3_5_10_MHZ_DIF,
   PRX1_PM_LPM_LTE_1P4_3_5_10_MHZ_SE,
   PRX1_PM_LPM_WCDMA_VOICE_DIF,
   PRX1_PM_LPM_WCDMA_VOICE_SE,
   PRX1_PM_CNT,
}PRX1_PM_E;

typedef enum
{
   PRX1_POFF_DCOC_LNA_OFF,
   PRX1_POFF_NORMAL_OPERATION,
   PRX1_POFF_PARTIAL_OFF,
   PRX1_POFF_CNT,
}PRX1_POFF_E;

typedef enum
{
   RX1_GSYNC_DISABLE,
   RX1_GSYNC_ENABLE,
   RX1_GSYNC_CNT,
}RX1_GSYNC_E;

typedef enum
{
   TOP_MODE_BST,
   TOP_MODE_CAL,
   TOP_MODE_DEFAULT,
   TOP_MODE_SLP,
   TOP_MODE_WUP,
   TOP_MODE_CNT,
}TOP_MODE_E;

typedef enum
{
   TOP_RAT_C2K,
   TOP_RAT_FDD,
   TOP_RAT_GGE,
   TOP_RAT_TDD,
   TOP_RAT_CNT,
}TOP_RAT_E;

typedef enum
{
   TOP_RXFSM_DEFAULT,
   TOP_RXFSM_RX1_FSM_ON,
   TOP_RXFSM_CNT,
}TOP_RXFSM_E;

typedef enum
{
   TOP_SRX_DEFAULT,
   TOP_SRX_SRX1_PCC,
   TOP_SRX_CNT,
}TOP_SRX_E;

typedef enum
{
   TOP_STD_C2K,
   TOP_STD_GGE_EDGE,
   TOP_STD_GGE_GMSK,
   TOP_STD_LTE,
   TOP_STD_TDSCDMA,
   TOP_STD_WCDMA,
   TOP_STD_CNT,
}TOP_STD_E;

typedef enum
{
   TOP_TRX_DEFAULT,
   TOP_TRX_RX,
   TOP_TRX_TRX,
   TOP_TRX_TX,
   TOP_TRX_CNT,
}TOP_TRX_E;

typedef enum
{
   TXLPF_TX_2G_HMB,
   TXLPF_TX_2G_LB,
   TXLPF_TX_3G_FDD_HMB,
   TXLPF_TX_3G_FDD_LB,
   TXLPF_TX_3G_TDD_HMB,
   TXLPF_TX_3G_TDD_LB,
   TXLPF_TX_4G_LTE_10M_HMB,
   TXLPF_TX_4G_LTE_10M_LB,
   TXLPF_TX_4G_LTE_15M_HMB,
   TXLPF_TX_4G_LTE_15M_LB,
   TXLPF_TX_4G_LTE_1P4M_HMB,
   TXLPF_TX_4G_LTE_1P4M_LB,
   TXLPF_TX_4G_LTE_20M_HMB,
   TXLPF_TX_4G_LTE_20M_LB,
   TXLPF_TX_4G_LTE_3M_HMB,
   TXLPF_TX_4G_LTE_3M_LB,
   TXLPF_TX_4G_LTE_5M_HMB,
   TXLPF_TX_4G_LTE_5M_LB,
   TXLPF_TX_4G_LTE_CCA,
   TXLPF_TX_C2K_HMB,
   TXLPF_TX_C2K_LB,
   TXLPF_CNT,
}TXLPF_E;

typedef enum
{
   TXRCF_RCF_16M,
   TXRCF_RCF_20M,
   TXRCF_RCF_2G,
   TXRCF_RCF_32M,
   TXRCF_RCF_64M,
   TXRCF_RCF_8M,
   TXRCF_RCF_C2K,
   TXRCF_CNT,
}TXRCF_E;

typedef enum
{
   TX_DET_ON_OFF,
   TX_DET_ON_ON,
   TX_DET_ON_CNT,
}TX_DET_ON_E;

typedef enum
{
   TX_GAIN_TABLE_G0,
   TX_GAIN_TABLE_G1,
   TX_GAIN_TABLE_G10,
   TX_GAIN_TABLE_G11,
   TX_GAIN_TABLE_G12,
   TX_GAIN_TABLE_G13,
   TX_GAIN_TABLE_G14,
   TX_GAIN_TABLE_G15,
   TX_GAIN_TABLE_G16,
   TX_GAIN_TABLE_G17,
   TX_GAIN_TABLE_G18,
   TX_GAIN_TABLE_G19,
   TX_GAIN_TABLE_G2,
   TX_GAIN_TABLE_G20,
   TX_GAIN_TABLE_G21,
   TX_GAIN_TABLE_G22,
   TX_GAIN_TABLE_G23,
   TX_GAIN_TABLE_G24,
   TX_GAIN_TABLE_G25,
   TX_GAIN_TABLE_G26,
   TX_GAIN_TABLE_G27,
   TX_GAIN_TABLE_G27DNL,
   TX_GAIN_TABLE_G28,
   TX_GAIN_TABLE_G28DNL,
   TX_GAIN_TABLE_G29,
   TX_GAIN_TABLE_G29DNL,
   TX_GAIN_TABLE_G3,
   TX_GAIN_TABLE_G4,
   TX_GAIN_TABLE_G5,
   TX_GAIN_TABLE_G6,
   TX_GAIN_TABLE_G7,
   TX_GAIN_TABLE_G8,
   TX_GAIN_TABLE_G9,
   TX_GAIN_TABLE_G_TXCAL,
   TX_GAIN_TABLE_CNT,
}TX_GAIN_TABLE_E;

typedef enum
{
   TX_LO_CAL_EN_OFF,
   TX_LO_CAL_EN_ON,
   TX_LO_CAL_EN_CNT,
}TX_LO_CAL_EN_E;

typedef enum
{
   TX_LPF_GAIN_TABLE_ABB_0DB,
   TX_LPF_GAIN_TABLE_ABB_4DB,
   TX_LPF_GAIN_TABLE_CNT,
}TX_LPF_GAIN_TABLE_E;

typedef enum
{
   TX_PORT_HB1,
   TX_PORT_HB2,
   TX_PORT_HB_ON_CHIP_TERM,
   TX_PORT_HB_OPEN_SW,
   TX_PORT_LB1,
   TX_PORT_LB2,
   TX_PORT_LB3_GMSK,
   TX_PORT_LB_ON_CHIP_TERM,
   TX_PORT_LB_OPEN_SW,
   TX_PORT_MB1,
   TX_PORT_MB2,
   TX_PORT_MB3_GMSK,
   TX_PORT_MB_ON_CHIP_TERM,
   TX_PORT_MB_OPEN_SW,
   TX_PORT_NONE,
   TX_PORT_CNT,
}TX_PORT_E;

/*******************************************************************************
*                       *CW-base info*                                         *
******************************************************************************/


typedef enum
{
   TTG_RX,
   TTG_TX,
}TTG_RX_TTG_TX_E;

//*** CW1_INFO_T *** 

typedef struct
{
   TOP_RAT_E top_rat;
   TOP_MODE_E top_mode;
   TOP_RXFSM_E top_rxfsm;
   TOP_TRX_E top_trx;
   TOP_SRX_E top_srx;
   TOP_STD_E top_std;
}CW1_INFO_T;


//*** CW45_INFO_T *** 

typedef struct
{
   kal_uint32 ttg_off_trig;
   kal_uint32 ttg_on_trig;
}CW45_INFO_T;


//*** CW47_INFO_T *** 

typedef struct
{
   TTG_RX_TTG_TX_E ttg_rx_ttg_tx_s;/*register value define in two_sheet*/
   TTG_RX_BAND_E ttg_rx_band;
   TTG_TX_BAND_E ttg_tx_band;
}CW47_INFO_T;


//*** CW48_INFO_T *** 

typedef struct
{
   TTG_RX_TTG_TX_E ttg_rx_ttg_tx_s;/*register value define in two_sheet*/
   TTG_RX_BAND_E ttg_rx_band;
   TTG_TX_BAND_E ttg_tx_band;
}CW48_INFO_T;


//*** CW50_INFO_T *** 

typedef struct
{
   kal_uint32 ttg_sdm_frac_tx;
}CW50_INFO_T;


//*** CW51_INFO_T *** 

typedef struct
{
   kal_uint32 ttg_sdm_frac_tx_2;
   kal_uint32 ttg_sdm_int_tx;
}CW51_INFO_T;


//*** CW52_INFO_T *** 

typedef struct
{
   kal_uint32 ttg_sdm_frac_rx;
}CW52_INFO_T;


//*** CW53_INFO_T *** 

typedef struct
{
   kal_uint32 ttg_sdm_frac_rx_2;
   kal_uint32 ttg_sdm_int_rx;
}CW53_INFO_T;


//*** CW127_INFO_T *** 

typedef struct
{
   kal_uint32 srx1_afc_2scomp;
}CW127_INFO_T;


//*** CW128_INFO_T *** 

typedef struct
{
   kal_uint32 srx1_band;
   SRX1_1_BAND_E srx1_1_band;
}CW128_INFO_T;


//*** CW130_INFO_T *** 

typedef struct
{
   kal_uint32 srx1_nfrac1;
   kal_uint32 srx1_nint;
}CW130_INFO_T;


//*** CW131_INFO_T *** 

typedef struct
{
   kal_uint32 srx1_nfrac0;
   SRX1_1_BAND_E srx1_1_band;
}CW131_INFO_T;


//*** CW134_INFO_T *** 

typedef struct
{
   kal_uint32 srx1_nfrac_offset1;
   kal_uint32 srx1_nint_offset;
   kal_uint32 srx1_n_offset_sign;
   kal_uint32 srx1_vco_sub_offset_sign;
   SRX1_1_BAND_E srx1_1_band;
}CW134_INFO_T;


//*** CW135_INFO_T *** 

typedef struct
{
   kal_uint32 srx1_nfrac_offset0;
}CW135_INFO_T;


//*** CW179_INFO_T *** 

typedef struct
{
   SRX1_1_BAND_E srx1_1_band;
}CW179_INFO_T;


//*** CW181_INFO_T *** 

typedef struct
{
   SRX1_1_BAND_E srx1_1_band;
}CW181_INFO_T;


//*** CW183_INFO_T *** 

typedef struct
{
   SRX1_1_BAND_E srx1_1_band;
}CW183_INFO_T;


//*** CW320_INFO_T *** 

typedef struct
{
   PRX1_IIP2C_E prx1_iip2c;
   PRX1_POFF_E prx1_poff;
}CW320_INFO_T;


//*** CW321_INFO_T *** 

typedef struct
{
   DRX1_POFF_E drx1_poff;
}CW321_INFO_T;


//*** CW322_INFO_T *** 

typedef struct
{
   PRX1_LNAMIXER_EN_E prx1_lnamixer_en;
   RX1_BAND_E rx1_band;
   PRX1_LNASEL_E prx1_lnasel;
   PRX1_2G_IRRC_E prx1_2g_irrc;
   PRX1_BANDSEL_E prx1_bandsel;
}CW322_INFO_T;


//*** CW324_INFO_T *** 

typedef struct
{
   DRX1_BANDSEL_E drx1_bandsel;
   DRX1_LNAMIXER_EN_E drx1_lnamixer_en;
   RX1_BAND_E rx1_band;
   DRX1_LNASEL_E drx1_lnasel;
}CW324_INFO_T;


//*** CW326_INFO_T *** 

typedef struct
{
   DRX1_BW_E drx1_bw;
   RX1_GSYNC_E rx1_gsync;
   PRX1_BW_E prx1_bw;
}CW326_INFO_T;


//*** CW334_INFO_T *** 

typedef struct
{
   PRX1_GAIN_E prx1_gain;
}CW334_INFO_T;


//*** CW335_INFO_T *** 

typedef struct
{
   kal_uint32 rxif1_dc_est_i;
   kal_uint32 rxif1_dc_est_q;
}CW335_INFO_T;


//*** CW336_INFO_T *** 

typedef struct
{
   DRX1_GAIN_E drx1_gain;
}CW336_INFO_T;


//*** CW337_INFO_T *** 

typedef struct
{
   kal_uint32 rxdif1_dc_est_i;
   kal_uint32 rxdif1_dc_est_q;
}CW337_INFO_T;


//*** CW338_INFO_T *** 

typedef struct
{
   kal_uint32 rxrxd_gain_latch_bridge_t;
   kal_uint32 rxrxd_gain_latch_path1;
}CW338_INFO_T;


//*** CW339_INFO_T *** 

typedef struct
{
   kal_uint32 rxd_path1_gain_delay;
   kal_uint32 rx_path1_gain_delay;
}CW339_INFO_T;


//*** CW348_INFO_T *** 

typedef struct
{
   PRX1_OBBFLAG_E prx1_obbflag;
}CW348_INFO_T;


//*** CW389_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW389_INFO_T;


//*** CW390_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW390_INFO_T;


//*** CW391_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW391_INFO_T;


//*** CW399_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW399_INFO_T;


//*** CW413_INFO_T *** 

typedef struct
{
   PRX1_PM_E prx1_pm;
}CW413_INFO_T;


//*** CW414_INFO_T *** 

typedef struct
{
   DRX1_PM_E drx1_pm;
}CW414_INFO_T;


//*** CW473_INFO_T *** 

typedef struct
{
   kal_uint32 rg_rx_bias_mixer1_iip2c_i;
   kal_uint32 rg_rx_bias_mixer1_iip2c_q;
}CW473_INFO_T;


//*** CW495_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW495_INFO_T;


//*** CW500_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW500_INFO_T;


//*** CW501_INFO_T *** 

typedef struct
{
   RX1_BAND_E rx1_band;
}CW501_INFO_T;


//*** CW511_INFO_T *** 

typedef struct
{
   kal_uint32 band_stx;
   STX_BAND_E stx_band;
}CW511_INFO_T;


//*** CW521_INFO_T *** 

typedef struct
{
   STX_BAND_E stx_band;
}CW521_INFO_T;


//*** CW529_INFO_T *** 

typedef struct
{
   kal_uint32 dco_scak_codetyp;
}CW529_INFO_T;


//*** CW549_INFO_T *** 

typedef struct
{
   kal_uint32 mmd_sdm_nfrac;
   kal_uint32 mmd_sdm_nint;
}CW549_INFO_T;


//*** CW550_INFO_T *** 

typedef struct
{
   kal_uint32 mmd_sdm_nfrac_2;
}CW550_INFO_T;


//*** CW551_INFO_T *** 

typedef struct
{
   kal_uint32 mmd_sdm_nfrac1;
   kal_uint32 mmd_sdm_nint1;
}CW551_INFO_T;


//*** CW552_INFO_T *** 

typedef struct
{
   kal_uint32 dco_scak_noffset;
   kal_uint32 mmd_sdm_nfrac1_2;
}CW552_INFO_T;


//*** CW568_INFO_T *** 

typedef struct
{
   kal_uint32 dcc_delta_nc;
   kal_uint32 dcc_est_en;
}CW568_INFO_T;


//*** CW582_INFO_T *** 

typedef struct
{
   kal_uint32 mmd_sdm_noffset;
}CW582_INFO_T;


//*** CW704_INFO_T *** 

typedef struct
{
   STX_BAND_E stx_band;
}CW704_INFO_T;


//*** CW705_INFO_T *** 

typedef struct
{
   kal_uint32 rg_tx_det_pga_csel;
   DET_GAIN_TABLE_E det_gain_table;
}CW705_INFO_T;


//*** CW706_INFO_T *** 

typedef struct
{
   TX_GAIN_TABLE_E tx_gain_table;
}CW706_INFO_T;


//*** CW707_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
   TX_PORT_E tx_port;
}CW707_INFO_T;


//*** CW710_INFO_T *** 

typedef struct
{
   TXLPF_E txlpf;
   TX_LPF_GAIN_TABLE_E tx_lpf_gain_table;
}CW710_INFO_T;


//*** CW711_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW711_INFO_T;


//*** CW712_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW712_INFO_T;


//*** CW714_INFO_T *** 

typedef struct
{
   kal_uint32 tx_lo_cap_array;
   kal_uint32 tx_lo_fe_in_bias_hpm;
   kal_uint32 tx_lo_fe_in_bias_lpm;
   kal_uint32 tx_lo_ind_sw;
}CW714_INFO_T;


//*** CW727_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW727_INFO_T;


//*** CW728_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW728_INFO_T;


//*** CW732_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW732_INFO_T;


//*** CW786_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW786_INFO_T;


//*** CW787_INFO_T *** 

typedef struct
{
   kal_uint32 tx_lpf_rc_code;
}CW787_INFO_T;


//*** CW793_INFO_T *** 

typedef struct
{
   kal_uint32 rg_tx_rcf_csel;
   TXRCF_E txrcf;
}CW793_INFO_T;


//*** CW794_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW794_INFO_T;


//*** CW795_INFO_T *** 

typedef struct
{
   kal_uint32 tx_bal_capa_aact;
   kal_uint32 tx_bal_capb_aact;
}CW795_INFO_T;


//*** CW796_INFO_T *** 

typedef struct
{
   kal_uint32 tx_bal_capa_bact;
   kal_uint32 tx_bal_capb_bact;
}CW796_INFO_T;


//*** CW797_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW797_INFO_T;


//*** CW798_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW798_INFO_T;


//*** CW799_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW799_INFO_T;


//*** CW802_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW802_INFO_T;


//*** CW803_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
   TX_LO_CAL_EN_E tx_lo_cal_en;
}CW803_INFO_T;


//*** CW807_INFO_T *** 

typedef struct
{
   kal_uint32 txdet_cdcoc_i1_m;
   kal_uint32 txdet_cdcoc_i2_m;
   kal_uint32 txdet_cdcoc_q1_m;
   kal_uint32 txdet_cdcoc_q2_m;
}CW807_INFO_T;


//*** CW808_INFO_T *** 

typedef struct
{
   kal_uint32 txdet_cdcoc_i3_m;
   kal_uint32 txdet_cdcoc_i4_m;
   kal_uint32 txdet_cdcoc_q3_m;
   kal_uint32 txdet_cdcoc_q4_m;
}CW808_INFO_T;


//*** CW814_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW814_INFO_T;


//*** CW816_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
   TX_DET_ON_E tx_det_on;
}CW816_INFO_T;


//*** CW818_INFO_T *** 

typedef struct
{
   TX_BAND_E tx_band;
}CW818_INFO_T;


//*** CW825_INFO_T *** 

typedef struct
{
   TXLPF_E txlpf;
}CW825_INFO_T;


//*** CW826_INFO_T *** 

typedef struct
{
   TXLPF_E txlpf;
}CW826_INFO_T;

/*******************************************************************************
*                 Global Functions Prototype (Interface)                        *
******************************************************************************/

kal_uint32 MMRF_CW1_Gen(CW1_INFO_T *cw1_info);
kal_uint32 MMRF_CW45_Gen(CW45_INFO_T *cw45_info);
kal_uint32 MMRF_CW47_Gen(CW47_INFO_T *cw47_info);
kal_uint32 MMRF_CW48_Gen(CW48_INFO_T *cw48_info);
kal_uint32 MMRF_CW50_Gen(CW50_INFO_T *cw50_info);
kal_uint32 MMRF_CW51_Gen(CW51_INFO_T *cw51_info);
kal_uint32 MMRF_CW52_Gen(CW52_INFO_T *cw52_info);
kal_uint32 MMRF_CW53_Gen(CW53_INFO_T *cw53_info);
kal_uint32 MMRF_CW127_Gen(CW127_INFO_T *cw127_info);
kal_uint32 MMRF_CW128_Gen(CW128_INFO_T *cw128_info);
kal_uint32 MMRF_CW130_Gen(CW130_INFO_T *cw130_info);
kal_uint32 MMRF_CW131_Gen(CW131_INFO_T *cw131_info);
kal_uint32 MMRF_CW134_Gen(CW134_INFO_T *cw134_info);
kal_uint32 MMRF_CW135_Gen(CW135_INFO_T *cw135_info);
kal_uint32 MMRF_CW179_Gen(CW179_INFO_T *cw179_info);
kal_uint32 MMRF_CW181_Gen(CW181_INFO_T *cw181_info);
kal_uint32 MMRF_CW183_Gen(CW183_INFO_T *cw183_info);
kal_uint32 MMRF_CW320_Gen(CW320_INFO_T *cw320_info);
kal_uint32 MMRF_CW321_Gen(CW321_INFO_T *cw321_info);
kal_uint32 MMRF_CW322_Gen(CW322_INFO_T *cw322_info);
kal_uint32 MMRF_CW324_Gen(CW324_INFO_T *cw324_info);
kal_uint32 MMRF_CW326_Gen(CW326_INFO_T *cw326_info);
kal_uint32 MMRF_CW334_Gen(CW334_INFO_T *cw334_info);
kal_uint32 MMRF_CW335_Gen(CW335_INFO_T *cw335_info);
kal_uint32 MMRF_CW336_Gen(CW336_INFO_T *cw336_info);
kal_uint32 MMRF_CW337_Gen(CW337_INFO_T *cw337_info);
kal_uint32 MMRF_CW338_Gen(CW338_INFO_T *cw338_info);
kal_uint32 MMRF_CW339_Gen(CW339_INFO_T *cw339_info);
kal_uint32 MMRF_CW348_Gen(CW348_INFO_T *cw348_info);
kal_uint32 MMRF_CW389_Gen(CW389_INFO_T *cw389_info);
kal_uint32 MMRF_CW390_Gen(CW390_INFO_T *cw390_info);
kal_uint32 MMRF_CW391_Gen(CW391_INFO_T *cw391_info);
kal_uint32 MMRF_CW399_Gen(CW399_INFO_T *cw399_info);
kal_uint32 MMRF_CW413_Gen(CW413_INFO_T *cw413_info);
kal_uint32 MMRF_CW414_Gen(CW414_INFO_T *cw414_info);
kal_uint32 MMRF_CW473_Gen(CW473_INFO_T *cw473_info);
kal_uint32 MMRF_CW495_Gen(CW495_INFO_T *cw495_info);
kal_uint32 MMRF_CW500_Gen(CW500_INFO_T *cw500_info);
kal_uint32 MMRF_CW501_Gen(CW501_INFO_T *cw501_info);
kal_uint32 MMRF_CW511_Gen(CW511_INFO_T *cw511_info);
kal_uint32 MMRF_CW521_Gen(CW521_INFO_T *cw521_info);
kal_uint32 MMRF_CW529_Gen(CW529_INFO_T *cw529_info);
kal_uint32 MMRF_CW549_Gen(CW549_INFO_T *cw549_info);
kal_uint32 MMRF_CW550_Gen(CW550_INFO_T *cw550_info);
kal_uint32 MMRF_CW551_Gen(CW551_INFO_T *cw551_info);
kal_uint32 MMRF_CW552_Gen(CW552_INFO_T *cw552_info);
kal_uint32 MMRF_CW568_Gen(CW568_INFO_T *cw568_info);
kal_uint32 MMRF_CW582_Gen(CW582_INFO_T *cw582_info);
kal_uint32 MMRF_CW704_Gen(CW704_INFO_T *cw704_info);
kal_uint32 MMRF_CW705_Gen(CW705_INFO_T *cw705_info);
kal_uint32 MMRF_CW706_Gen(CW706_INFO_T *cw706_info);
kal_uint32 MMRF_CW707_Gen(CW707_INFO_T *cw707_info);
kal_uint32 MMRF_CW710_Gen(CW710_INFO_T *cw710_info);
kal_uint32 MMRF_CW711_Gen(CW711_INFO_T *cw711_info);
kal_uint32 MMRF_CW712_Gen(CW712_INFO_T *cw712_info);
kal_uint32 MMRF_CW714_Gen(CW714_INFO_T *cw714_info);
kal_uint32 MMRF_CW727_Gen(CW727_INFO_T *cw727_info);
kal_uint32 MMRF_CW728_Gen(CW728_INFO_T *cw728_info);
kal_uint32 MMRF_CW732_Gen(CW732_INFO_T *cw732_info);
kal_uint32 MMRF_CW786_Gen(CW786_INFO_T *cw786_info);
kal_uint32 MMRF_CW787_Gen(CW787_INFO_T *cw787_info);
kal_uint32 MMRF_CW793_Gen(CW793_INFO_T *cw793_info);
kal_uint32 MMRF_CW794_Gen(CW794_INFO_T *cw794_info);
kal_uint32 MMRF_CW795_Gen(CW795_INFO_T *cw795_info);
kal_uint32 MMRF_CW796_Gen(CW796_INFO_T *cw796_info);
kal_uint32 MMRF_CW797_Gen(CW797_INFO_T *cw797_info);
kal_uint32 MMRF_CW798_Gen(CW798_INFO_T *cw798_info);
kal_uint32 MMRF_CW799_Gen(CW799_INFO_T *cw799_info);
kal_uint32 MMRF_CW802_Gen(CW802_INFO_T *cw802_info);
kal_uint32 MMRF_CW803_Gen(CW803_INFO_T *cw803_info);
kal_uint32 MMRF_CW807_Gen(CW807_INFO_T *cw807_info);
kal_uint32 MMRF_CW808_Gen(CW808_INFO_T *cw808_info);
kal_uint32 MMRF_CW814_Gen(CW814_INFO_T *cw814_info);
kal_uint32 MMRF_CW816_Gen(CW816_INFO_T *cw816_info);
kal_uint32 MMRF_CW818_Gen(CW818_INFO_T *cw818_info);
kal_uint32 MMRF_CW825_Gen(CW825_INFO_T *cw825_info);
kal_uint32 MMRF_CW826_Gen(CW826_INFO_T *cw826_info);

#endif /*__MML1_RF_CWREG_GEN_MT6177M_H__*/
