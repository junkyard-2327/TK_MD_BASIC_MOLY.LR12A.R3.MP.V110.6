/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/
 /*******************************************************************************
 *  Copyright Statement:
 *  --------------------
 *  This software is protected by Copyright and the information contained
 *  herein is confidential. The software may not be copied and the information
 *  contained herein may not be used or disclosed except with the written
 *  permission of MediaTek Inc. (C) 2001
 *
 *******************************************************************************/

 /*******************************************************************************
 * Filename:
 * ---------
 *   sim_public_enum.h
 *
 * Project:
 * --------
 *   MAUI
 *
 * Description:
 * ------------
 *   Enum and Constant  provided by SIM task and outside-PS task uses also
 *
 * Author:
 * -------
 * -------
 *
 *******************************************************************************/
#ifndef SIM_PUBLIC_ENUM_H
#define SIM_PUBLIC_ENUM_H

#include "global_def.h"
#include "sim_public_enum_public.h"
#include "sim_exported_enum.h"

/******************* MMDC START *******************/
typedef enum
{
    SIM_ACCESS_EXTERNAL_READ_BINARY,
    SIM_ACCESS_EXTERNAL_READ_RECORD,
    SIM_ACCESS_EXTERNAL_UPDATE_BINARY,
    SIM_ACCESS_EXTERNAL_UPDATE_RECORD,
    SIM_ACCESS_EXTERNAL_FILE_INFO,
    SIM_ACCESS_EXTERNAL_AUTHENTICATION
}sim_access_extmd_op_enum;

typedef enum
{
    SIM_NOTIFY_INITIALIZATION,
    SIM_RESPONSE_ACCESS,
    SIM_NOTIFY_CARD_STATUS,
    SIM_NOTIFY_CARD_TYPE,
    SIM_NOTIFY_FILE_CHANGE
}sim_extmd_notify_enum;

/******************* MMDC END *******************/
typedef enum
{
   SERVICE_CHV_DISABLE_FUNCTION=1,
   SERVICE_ADN,
   SERVICE_FDN,
   SERVICE_SMS,
   SERVICE_AOC,
   SERVICE_CCP,
   SERVICE_PLMNSEL,
   SERVICE_RFU1,
   SERVICE_MSISDN,
   SERVICE_EXT1,
   SERVICE_EXT2,
   SERVICE_SMSP,
   SERVICE_LND,
   SERVICE_CBMI,
   SERVICE_GID1,
   SERVICE_GID2,
   SERVICE_SPN,
   SERVICE_SDN,
   SERVICE_EXT3,
   SERVICE_RFU2,
   SERVICE_VGCS,
   SERVICE_VBS,
   SERVICE_EMLPP,
   SERVICE_AAEM,
   SERVICE_DATA_DOWNLOAD_SMS_CB,
   SERVICE_DATA_DOWNLOAD_SMS_PP,
   SERVICE_MENU_SELECTION,
   SERVICE_CALL_CONTROL,
   SERVICE_PROACTIVE_SIM,
   SERVICE_CBMIR,
   SERVICE_BDN,
   SERVICE_EXT4,
   SERVICE_DCK,
   SERVICE_CNL,
   SERVICE_SMSR,
   SERVICE_NW_IND_ALERT,
   SERVICE_MO_SMS,
   SERVICE_GPRS,
   SERVICE_IMAGE,
   SERVICE_SOLSA,
   SERVICE_USSD,
   SERVICE_RUN_AT_CMD,
   SERVICE_PLMNWACT,
   SERVICE_OPLMNWACT,
   SERVICE_HPLMNWACT,
   SERVICE_CPBCCH,
   SERVICE_INVSCAN,
   SERVICE_ECCP,
   SERVICE_MEXE,
   SERVICE_RFU,
   SERVICE_PLMN_NAME,
   SERVICE_OPLMN_LIST,
   SERVICE_MAILBOX_DIAL_NUM,
   SERVICE_MSG_WAIT_IND,
   SERVICE_CALL_FWD_IND,
   SERVICE_SP_DSPL_INFO,
   SERVICE_MMS,
   SERVICE_EXT8,
   SERVICE_MMS_UCP,
   SERVICE_EMPTY, /* 60 */
   SERVICE_CSP,
   SERVICE_SST,
   SERVICE_MAILBOX_NUM,
   SERVICE_OPNAME_SHORTFORM,
   SERVICE_INFO_NUM,
   SERVICE_END,
   SERVICE_U_LOCAL_PHB,  // 1
   SERVICE_U_FDN,
   SERVICE_U_EXT2,
   SERVICE_U_SDN,
   SERVICE_U_EXT3,
   SERVICE_U_BDN,
   SERVICE_U_EXT4,
   SERVICE_U_OCI_OCT,
   SERVICE_U_ICI_ICT,
   SERVICE_U_SMS,  // 10
   SERVICE_U_SMSR,
   SERVICE_U_SMSP,
   SERVICE_U_AOC,
   SERVICE_U_CCP,
   SERVICE_U_CBMI,
   SERVICE_U_CBMIR,
   SERVICE_U_GID1,
   SERVICE_U_GID2,
   SERVICE_U_SPN,
   SERVICE_U_PLMNWACT,  // 20
   SERVICE_U_MSISDN,
   SERVICE_U_IMG,
   SERVICE_U_SOLSA,
   SERVICE_U_EMLPP,
   SERVICE_U_AAEM,
   SERVICE_U_RFU,
   SERVICE_U_GSM_ACCESS,
   SERVICE_U_DATA_DOWNLOAD_SMS_PP,
   SERVICE_U_DATA_DOWNLOAD_SMS_CB,
   SERVICE_U_CALL_CONTROL,  // 30
   SERVICE_U_SMS_CONTROL,
   SERVICE_U_RUN_AT_CMD,
   SERVICE_U_RFU_1,
   SERVICE_U_EST,
   SERVICE_U_ACL,
   SERVICE_U_DCK,
   SERVICE_U_CO_NWLIST,
   SERVICE_U_GSM_SECURITY_CTX,
   SERVICE_U_CPBCCH,
   SERVICE_U_INVSCAN,  // 40
   SERVICE_U_MEXE,
   SERVICE_U_OPLMNWACT,
   SERVICE_U_HPLMNWACT,
   SERVICE_U_EXT5,
   SERVICE_U_PLMN_NAME,
   SERVICE_U_OPLMN_LIST,
   SERVICE_U_MAILBOX_DIAL_NUM,
   SERVICE_U_MSG_WAIT_IND,
   SERVICE_U_CALL_FWD_IND,
   SERVICE_U_RFU_2,  // 50
   SERVICE_U_SP_DSPL_INFO,
   SERVICE_U_MMS,
   SERVICE_U_EXT8,
   SERVICE_U_GPRS_CALL_CONTROL,
   SERVICE_U_MMS_UCP,
   SERVICE_U_NIA,
   SERVICE_U_VGCS, //__R7_EHPLMN__ start
   SERVICE_U_VBS,
   SERVICE_U_PSEUDO, 
   SERVICE_U_UPLMNWLAN,  // 60
   SERVICE_U_OPLMNWLAN,
   SERVICE_U_UWSIDL,
   SERVICE_U_OWSIDL,
   SERVICE_U_VGCS_SECURITY,
   SERVICE_U_VBS_SECURITY,
   SERVICE_U_WRI,
   SERVICE_U_MULTIMEDIA_MSG_STORAGE,
   SERVICE_U_GBA,
   SERVICE_U_MBMS_SECURITY,
   SERVICE_U_DATA_DOWNLOAD_USSD,  // 70
   SERVICE_U_EHPLMN,   //__R7_EHPLMN__ end
   SERVICE_U_ADDITIONAL_TERMINAL_PROFILE,
   SERVICE_U_EHPLMNPI,
   SERVICE_U_LRPLMNSI,
   SERVICE_U_OMA_BCAST, //R8 __CSG_SUPPORT__ start  
   SERVICE_U_GBA_LOCAL_KEY,
   SERVICE_U_TERMINAL_AP,
   SERVICE_U_SPNI,
   SERVICE_U_PNNI,
   SERVICE_U_CPIP,  // 80
   SERVICE_U_HWSIDL, 
   SERVICE_U_WEHPLMNPI, 
   SERVICE_U_WHPI, 
   SERVICE_U_WLRPLMN, 
   SERVICE_U_EPS_MM_INFO, 
   SERVICE_U_ACSGL,    //R8 __CSG_SUPPORT__ end
   SERVICE_U_CC_EPS_PDN, //Call control on EPS PDN connection by USIM
   SERVICE_U_HPLMNDA,
   SERVICE_U_ECALL_DATA, //__ECALL_SUPPORT__
   SERVICE_U_OCSGL,  // 90
   SERVICE_U_SM_OVER_IP,
   SERVICE_U_CSG_DISPLAY, 
   SERVICE_U_COMM_CTRL_IMS,
   SERVICE_U_EXT_TERMINAL_APP,
   SERVICE_U_UICC_ACCESS_IMS,
   SERVICE_U_NAS_CONFIG,  
   SERVICE_U_PWS_CONFIG,
   SERVICE_U_RFU_98,
   SERVICE_U_URI_SUPPORT_BY_UICC,
   SERVICE_U_EXT_EARFCN_SUPPORT, // 100
   SERVICE_U_PROSE,
   SERVICE_U_USAT_APPLICATION_PAIRING,
   SERVICE_U_MEDIA_TYPE,
   SERVICE_U_IMS_CALL_DISCONN_CAUSE,
   SERVICE_U_URI_MO_SMS_CTRL,
   SERVICE_U_EPDG_CONF_INFO_SUPPORT,
   SERVICE_U_EPDG_CONF_INFO_CONF,
   SERVICE_U_ACDC,
   SERVICE_U_MCPTT,
   SERVICE_U_EPDG_CONF_INFO_EMER_SERVICE_SUPPORT, // 110
   SERVICE_U_EPDG_CONF_INFO_EMER_SERVICE_CONF,
   SERVICE_U_ECALL_DATA_IMS,
   SERVICE_U_URI_SMS_PP_DL,
   SERVICE_U_FROM_PREFERRED,
   SERVICE_U_IMS_CONF_DATA,
   SERVICE_U_TV_CONF,
   SERVICE_U_3GPP_PS_DATA_OFF,
   SERVICE_U_3GPP_PS_DATA_OFF_SERVICE_LIST,
   SERVICE_U_V2X,
   SERVICE_U_END
}sim_service_enum;

typedef enum
{
   SERVICE_NOT_SUPPORT,
   SERVICE_SUPPORT,
   SERVICE_ALLOCATE,
   SERVICE_UNDEFINED
}sim_service_state_enum;

typedef enum
{
   SIM_NOT_READY, /* initial state */
   SIM_CARD_NOT_INSERTED, /* No SIM found after initialization */
   NORMAL_SIM_PRESENCE, /* Normal SIM found after initialization */
   TEST_SIM_PRESENCE, /* Test SIM found after initialization */
   SIM_ERROR_SIM_PRESENCE  /* mtk80420: SIM hot swap */
}sim_card_status_enum;

typedef enum
{
   TYPE_NAA_INIT_AND_FULL_FILE_CHANGE,
   TYPE_FILE_CHANGE,
   TYPE_NAA_INIT_AND_FILE_CHANGE,
   TYPE_NAA_INIT,
   TYPE_SIM_RESET,
   TYPE_NAA_APPLICATION_RESET,
   TYPE_NAA_SESSION_RESET,
   TYPE_STEERING_OF_ROAMING,
   TYPE_STEERING_OF_ROAMING_FOR_IWLAN,
   TYPE_EUICC_PROFILE_STATE_CHANGE,
   TYPE_NON_SAT_REFRESH = 0xFE //[MAUI_01321308] mtk01612: for G+C
}sat_refresh_type_enum;

typedef enum
{
    SIM_INFO_ATR,
    SIM_INFO_CDMA,
    SIM_INFO_MAX
}sim_query_info_enum;

typedef enum
{
   SIM_ECALL_NONE,
   SIM_ECALL_ONLY,
   SIM_ECALL_AND_NORMAL,
   SIM_ECALL_TEST_DISABLE //for ecall test simulation
}sim_ecall_mode_enum;

typedef enum
{
    GSMCDMA_DUALSIM_DISCONNECT,
    GSMCDMA_DUALSIM_CONNECT
}gsmcdma_dualsim_mode_enum;

typedef enum
{
    DUALSIM_CMD_SUCCESS,
    DUALSIM_CMD_FAIL_RESET_ABNORMAL,
    DUALSIM_CMD_FAIL_CHVINFO_ABNORMAL,
    DUALSIM_CMD_FAIL_DISCONNECT_NOT_ALLOWED,
    DUALSIM_CMD_FAIL_CONNECT_NOT_ALLOWED,
    DUAKSIM_CMD_FAIL_UNDEFINED_OPERATION,
    DUALSIM_CMD_FAIL_PUK_STATE
}gsmcdma_dualsim_result_enum;

typedef enum
{
   VERIFY,
   DISABLE,
   ENABLE,
   CHANGE,
   UNBLOCK,
   SUPER_VERIFY, //link_SML
   RESTORE_LOCK, //link_SML
}sim_security_operation_enum; /*[MAUI_03058435] mtk01612: move sim_security_operation_enum into this file due to HAL rule*/

typedef enum
{
   TYPE_ONLY_DIGIT,         // mtk01488: digit only and sms default alphabet
   TYPE_SMS_DEFAULT_SET,    // mtk01488: alphabet set and SMS default alphabet
   TYPE_UCS2,               // mtk01488: alphabet set and UCS2 alphabet
   TYPE_YES_NO,
   TYPE_ONLY_DIGIT_UCS2     // mtk01488: digit only and UCS2 alphabet
}sat_input_type_enum;

typedef enum
{
   SAT_CMD_PERFORMED_SUCCESSFULLY=	0,
   SAT_CMD_PERFORMED_WITH_PARTIAL_COMPREHENSION=	0X01,
   SAT_CMD_PERFORMED_WITH_MISSING_INFO=	0X02,
   SAT_REFRESH_PERFORMED_WITH_ADDITIONAL_EF_READ=	0X03,
   SAT_CMD_PERFORMED_BUT_ICON_COULD_NOT_DSPL=	0X04,
   SAT_CMD_PERFORMED_BUT_MODIFIED_CC_BY_SIM=	0X05,
   SAT_CMD_PERFORMED_LIMITED_SERVICE=	0X06,
   SAT_CMD_PERFORMED_WITH_MODIFIED=	0X07,
   SAT_REFRESH_PERFORM_BUT_NAA_NOT_ACTIVE = 0X08,
   SAT_PROACTIVE_CMD_TERMINATED_BY_USER=	0X10,
   SAT_BACKWARD_MOVE_IN_PROACTIVE_SESSION_BY_USER=	0X11,
   SAT_NO_RESPONSE_FROM_USER=	0X12,
   SAT_HELP_INFO_REQUEST_BY_USER=	0X13,
   SAT_USSD_SS_TRANSACTION_TERMINATION_BY_USER=	0X14,
   SAT_ME_CURRENTLY_UNABLE_TO_PROCESS_CMD=	0X20,
   SAT_NET_CURRENTLY_UNABLE_TO_PROCESS_CMD=	0X21,
   SAT_USER_DID_NOT_ACCEPT_THE_PROACTIVE_CMD=	0X22,
   SAT_USER_CLEAR_DOWN_CALL_BEFORE_CONNECTION_RELEASE=	0X23,
   SAT_ACTION_IN_CONTRACTION_WITH_CURRENT_TIMER_STATE=	0X24,
   SAT_INTERACTION_WITH_CALL_CTRL_BY_SIM_TEMPORARY_ERROR=	0X25,
   SAT_LAUNCH_BROWER_GENERIC_ERROR_CODE=	0X26,
   SAT_CMD_BEYOND_ME_CAP=	0X30,
   SAT_CMD_TYPE_NOT_UNDERSTAND_BY_ME=	0X31,
   SAT_CMD_DATA_NOT_UNDERSTAND_BY_ME=	0X32,
   SAT_CMD_NUMBER_NOT_KNOWN_BY_ME=	0X33,
   SAT_SS_RETURN_ERROR=	0X34,
   SAT_SMS_RP_ERROR=	0X35,
   SAT_ERROR_REQUIRED_VALUE_MISSING=	0X36,
   SAT_USSD_RETURN_ERROR=	0X37,
   SAT_MULTICARD_CMD_ERROR=	0X38,
   SAT_INTERACTION_WITH_CALL_CTRL_BY_SIM_PERMANENT_ERROR=	0X39,
   SAT_BEARER_INDEPENDENT_PROTOCOL_ERROR=	0X3A
}sat_terminal_res_enum;

typedef enum
{
   SAT_NO_SPECIFIC_CAUSE,
   SAT_SCREEN_BUSY,
   SAT_ME_CURRENTLY_BUSY_ON_CALL,
   SAT_ME_CURRENTLY_BUSY_ON_SS,
   SAT_NO_SERVICE,
   SAT_ACCESS_CTRL_CLASS_BAR,
   SAT_RR_NOT_BRANTED,
   SAT_NOT_IN_SPEECH_MODE,
   SAT_ME_CURRENTLY_BUSY_ON_USSD,
   SAT_ME_CURRENTLY_BUSY_ON_DTMF
}sat_additional_info_for_res_enum;

typedef enum
{
   SAT_LAUNCH_BROWSER_IF_NOT_ALREADY_LAUNCHED = 0x00,
   SAT_USE_EXISTING_BROWSER = 0x02,
   SAT_CLOSE_EXISTING_BROWSER_AND_LAUNCH_NEW = 0x03
}sat_launch_browser_mode_enum;

typedef enum
{
   SAT_LAUNCH_BROWSER_NO_SPECIFIC_CAUSE,
   SAT_LAUNCH_BROWSER_BEARER_UNAVALIABLE,
   SAT_LAUNCH_BROWSER_BROWSER_UNAVALIABLE,
   SAT_LAUNCH_BROWSER_ME_UNABLE_TO_READ_PROVISION_DATA
}sat_launch_browser_additional_info_for_res_enum;

typedef enum
{
   SAT_BROWSER_USER_TERMINATION,
   SAT_BROWSER_ERROR_TERMINATION
}sat_browser_termination_mode_enum;

/* proactive SIM command struct */
typedef enum
{
   SETUP_CALL_IF_NO_ANOTHER_CALL,
   SETUP_CALL_WITH_REDIAL_IF_NO_ANOTHER_CALL,
   SETUP_CALL_PUT_ANOTHER_HOLD,    
   SETUP_CALL_WITH_REDIAL_PUT_ANOTHER_HOLD,   
   SETUP_CALL_DISCON_ANOTHER,    
   SETUP_CALL_WITH_REDIAL_DISCON_ANOTHER   
}sat_setup_call_condition_enum;

typedef enum
{
   SAT_CALL_MEDIA_VOICE,
   SAT_CALL_MEDIA_VIDEO
} sat_call_media_type_enum;

typedef enum
{
   SAT_OPERATION_CHANGED_BY_SIM,
//   SAT_NUM_CHANGED_BY_SIM,
   SAT_NUM_CHANGED_CALL_TO_CALL,
   SAT_NUM_CHANGED_CALL_TO_SS,   
   SAT_NUM_CHANGED_CALL_TO_USSD,   
   SAT_NUM_CHANGED_SS_TO_CALL,   
   SAT_NUM_CHANGED_SS_TO_SS,
   SAT_NUM_CHANGED_SS_TO_USSD,   
   SAT_NUM_CHANGED_USSD_TO_CALL,   
   SAT_NUM_CHANGED_USSD_TO_SS,   
   SAT_NUM_CHANGED_USSD_TO_USSD,   
   SAT_NUM_CHANGED_SMS,   
//   SAT_ALPHA_ID_IND,
   SAT_CALL_NOT_ALLOWED,
   SAT_SS_NOT_ALLOWED,
   SAT_USSD_NOT_ALLOWED,
   SAT_SMS_NOT_ALLOWED,
   SIM_MEM_PROBLEM,
   SIM_SECRET_CODE_REJ,
   SIM_TECH_PROBLEM,
   SAT_ALLOWED_NO_CHANGE   
}sat_mmi_info_type_enum;

typedef enum
{
   SAT_TONE_DIAL=0x01,
   SAT_TONE_CALLED_SUBSCRIBER_BUSY=0x02,
   SAT_TONE_CONGESTION=0x03,
   SAT_TONE_RADIO_PATH_ACK=0x04,
   SAT_TONE_RADIO_NO_PATH=0x05,
   SAT_TONE_ERROR=0x06,
   SAT_TONE_CALL_WAITING=0x07,
   SAT_TONE_RING=0x08,
   SAT_TONE_GENERAL_BEEP=0x10,
   SAT_TONE_POS_ACK=0x11,
   SAT_TONE_NEG_ACK=0x12
}sat_tone_id_enum;

typedef enum
{

    SIM_RESET_SMART_DETECTION,
    SIM_RESET_USIM_PREFER,
    SIM_RESET_SIM_PREFER
} sim_reset_method_enum;

typedef enum
{
    SAT_NW_REJ_LOCATION_INFO,
    SAT_NW_REJ_ROUTE_AREA_ID,
    SAT_NW_REJ_TRACK_AREA_ID
} sat_nw_rej_info_enum;

/* Update/Attach Type, clause 8.92 in TS 31.111 */
typedef enum
{
    SAT_NW_REJ_TYPE_NORMAL_LU,                      /* 0x00: "Normal Location Update" for LOCATION UPDATING REQUEST */
    SAT_NW_REJ_TYPE_PERIODIC_LU,                    /* 0x01: "Periodic Updating" for LOCATION UPDATING REQUEST */
    SAT_NW_REJ_TYPE_IMSI_ATTACH,                    /* 0x02: "IMSI Attach" for LOCATION UPDATING REQUEST */
    SAT_NW_REJ_TYPE_GPRS_ATTACH,                    /* 0x03: "GPRS Attach" for GPRS ATTACH REQUEST */
    SAT_NW_REJ_TYPE_COMBINED_ATTACH,                /* 0x04: "Combined GPRS/IMSI Attach" for GPRS ATTACH REQUEST */

    SAT_NW_REJ_TYPE_RAU,                            /* 0x05: "RA Updating" for ROUTING AREA UPDATE REQUEST */
    SAT_NW_REJ_TYPE_COMBINED_RA_LAU,                /* 0x06: "Combined RA/LA Updating" for ROUTING AREA UPDATE REQUEST */
    SAT_NW_REJ_TYPE_COMBINED_RA_LAU_WITH_IMSI,      /* 0x07: "Combined RA/LA Updating with IMSI Attach" for ROUTING AREA UPDATE REQUEST */
    SAT_NW_REJ_TYPE_PERIODIC_RAU,                   /* 0x08: "Periodic Updating" for ROUTING AREA UPDATE REQUEST */

    SAT_NW_REJ_TYPE_EPS_ATTACH,                     /* 0x09: "EPS Attach" for EMM ATTACH REQUEST */
    SAT_NW_REJ_TYPE_COMBINED_EPS_IMSI_ATTACH,       /* 0x0A: "Combined EPS/IMSI Attach" for EMM ATTACH REQUEST */
    SAT_NW_REJ_TYPE_TAU,                            /* 0x0B: "TA updating" for EMM TRACKING AREA UPDATE REQUEST */
    SAT_NW_REJ_TYPE_COMBINED_TA_LAU,                /* 0x0C: "Combined TA/LA updating" for EMM TRACKING AREA UPDATE REQUEST */
    SAT_NW_REJ_TYPE_COMBINED_TA_LAU_WITH_IMSI,      /* 0x0D: "Combined TA/LA updating with IMSI attach" for EMM TRACKING AREA UPDATE REQUEST */
    SAT_NW_REJ_TYPE_PERIODIC_TAU                    /* 0x0E: "Periodic updating" for EMM TRACKING AREA UPDATE REQUEST */
} sat_nw_rej_type_enum;

/* UTRAN/E-UTRAN Measurement Qualifier, clause 8.73 in TS 31.111 */
typedef enum
{
    SAT_NMR_UTRAN_INTRA_FRQ         = 0x01,         /* 0x01: UTRAN Intra-frequency measurements */
    SAT_NMR_UTRAN_INTER_FRQ         = 0x02,         /* 0x02: UTRAN Inter-frequency measurements */
    SAT_NMR_UTRAN_INTRAT_GSM        = 0x03,         /* 0x03: UTRAN Inter-RAT (GERAN) measurements */
    SAT_NMR_UTRAN_INTRAT_EUTRAN     = 0x04,         /* 0x04: UTRAN Intra-RAT (E-UTRAN) measurements */
    SAT_NMR_EUTRAN_INTRA_FRQ        = 0x05,         /* 0x05: E-UTRAN Intra-frequency measurements */
    SAT_NMR_EUTRAN_INTER_FRQ        = 0x06,         /* 0x06: E-UTRAN Inter-frequency measurements */
    SAT_NMR_EUTRAN_INTRAT_GSM       = 0x07,         /* 0x07: E-UTRAN Inter-RAT (GERAN) measurements */
    SAT_NMR_EUTRAN_INTRAT_UTRAN     = 0x08          /* 0x08: E-UTRAN Inter-RAT (UTRAN) measurements */
} sat_nmr_qual_enum;


typedef enum
{
    SAT_PROFILE_DL_MT_DEFAULT,
    SAT_PROFILE_DL_MT_TE,
    SAT_PROFILE_DL_HALT,
    SAT_PROFILE_DL_DISABLE = 0xFF
}sat_profile_download_enum;

typedef enum
{
    SAT_PROFILE_ACT_QUERY,
    SAT_PROFILE_ACT_ENABLE_TE_FACILITY,
    SAT_PROFILE_ACT_MT_DEFAULT,
    SAT_PROFILE_ACT_MT_TE,

    // Proprietary state to remember the profile download setting
    SAT_PROFILE_ACT_DL_ME_DEFAULT = 0xD0,
    SAT_PROFILE_ACT_WAIT_ENABLE_TE,
    SAT_PROFILE_ACT_HALT,
    SAT_PROFILE_ACT_DISABLE = 0xFF
}sat_profile_activate_enum;

typedef enum
{
    SAT_NORMAL_SEND,        /* send location info to SIM when field value updated */
    SAT_FORCE_NOT_SEND,     /* from xMM not to send location info to SIM, RAC should not send to GMSS at all */
    SAT_FORCE_SEND,         /* from xMM force send location info to SIM */
} sat_loc_send_type_enum;

typedef enum
{
    SIM_IMMEDIATE_AUTH_AVAILABLE,    /* no authenticate ongoing */
    SIM_IMMEDIATE_AUTH_SET,          /* authenticate_req is sent from MOD_EVAL through msg_send_to_head() */
    SIM_IMMEDIATE_AUTH_PROCESSING    /* authenticate is under processing, can not handle another one */
} sim_auth_flag_state_enum;

/*mtk01612:  [MAUI_02023545] BT_SIM_Profile for MAUI and DUMA*/
//#define APDU_REQ_MAX_LEN    261 /* 256 bytes for data + 5 bytes header information: CLA,INS,P1,P2,P3 */
//#define APDU_RSP_MAX_LEN    258 /* 256 bytes for data + 2 bytes status word SW1 and SW2 */
//#define ATR_MAX_LEN                40
#define MAX_SAT_SIZE_OF_CCP (15+0) /* for L4A autogen to use macro directly */

#define MAX_SUPPORT_RECORD_SIZE 255 /*at present, each record cannot be greater than 254 or 255 bytes in linear fixed/cyclic file */
#define MAX_SUPPORT_RECORD_NUM  255 /*at present, no more than 254 or 255 records in linear fixed/cyclic file */
/* MAUI_02953154 */

#define usim_file_index_enum sim_file_index_enum

/* MAUI_03041489 : for moveing sim_profile to custom folder */
#ifdef __SAT_ADDITIONAL_LOCK__
#define SAT_ADDITIONAL_TER_PROFILE 9
#endif

#if defined(__REL7__) || defined(__SATCL__) || defined(__SATCM__) || defined(__SATCR__) || defined(__SATCZ__) || defined(__SATCAA__)
#define MAX_SIM_PROFILE_LEN      35
#else
#define MAX_SIM_PROFILE_LEN      18
#endif

/*If you changed MAX_SST_LEN value, must patch [MAUI_03169422] to avoid TST exception for mini log feature*/
#define MAX_SST_LEN              17  //R4 max is 15 + 2 for cphs

#ifdef __ECC_RECORD_NUM_16__
#define MAX_ECC_NUM_USIM         16
#else
#define MAX_ECC_NUM_USIM         5
#endif

/*If you changed USIM_SUPPORT_UST_LEN value, must patch [MAUI_03169422] to avoid TST exception for mini log feature*/
#define USIM_SUPPORT_UST_LEN   13 //__R7_EHPLMN__ // mtk80420: 23.122 R7 feature, extend service num to 74  //mtk01616_110502 for R8 __CSG_SUPPORT__ extend service to 86 // for __ECALL_SUPPORT__ extended to 89

#define SUPPORT_SIM_TOTAL      (MAX_SIM_NUM)

#define SIM_CACHE_ADM_HEAP_SIZE      10240

#define MAX_LONG_CASE4_RSP_LEN   512

#ifdef __EUICC_SUPPORT__
#define LEN_OF_EID      16
#endif

#endif 
