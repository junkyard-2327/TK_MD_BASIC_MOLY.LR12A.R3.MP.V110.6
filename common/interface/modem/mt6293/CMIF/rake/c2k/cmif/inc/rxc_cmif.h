#ifndef __RXC_CMIF_H__
#define __RXC_CMIF_H__

#include "reg_access.h"
#include "c2k_base_addr_cmif.h"

#define CMIF_RXC_REG_BASE                                             (CMIF_RAKE_RXC_OFFSET)
#define CMIF_RXC_TIME_STAMP_T3                                        (CMIF_RXC_REG_BASE + 0x0000)
#define CMIF_RXC_CRC_PASS                                             (CMIF_RXC_REG_BASE + 0x0004)
#define CMIF_RXC_TIME_STAMP_SLOT(i)                                   (CMIF_RXC_REG_BASE + 0x0008 + ((i) * 0x4))
#define CMIF_RXC_INTERLACE_STATUS                                     (CMIF_RXC_REG_BASE + 0x0018)
#define CMIF_RXC_REACK                                                (CMIF_RXC_REG_BASE + 0x001C)
#define CMIF_RXC_SUP_MACINDEX(i)                                      (CMIF_RXC_REG_BASE + 0x0020 + ((i) * 0x4))
#define CMIF_RXC_MACINDEX_BRP(i)                                      (CMIF_RXC_REG_BASE + 0x0030 + ((i) * 0x4))
#define CMIF_RXC_MIN_CONT_SPAN                                        (CMIF_RXC_REG_BASE + 0x0040)

#define M_CMIF_RXC_TIME_STAMP_T3_RD()                                 REG_READ(CMIF_RXC_TIME_STAMP_T3)
#define M_CMIF_RXC_CRC_PASS_RD()                                      REG_READ(CMIF_RXC_CRC_PASS)
#define M_CMIF_RXC_TIME_STAMP_SLOT_RD(i)                              REG_READ(CMIF_RXC_TIME_STAMP_SLOT(i))
#define M_CMIF_RXC_INTERLACE_STATUS_RD()                              REG_READ(CMIF_RXC_INTERLACE_STATUS)
#define M_CMIF_RXC_REACK_RD()                                         REG_READ(CMIF_RXC_REACK)
#define M_CMIF_RXC_SUP_MACINDEX_RD(i)                                 REG_READ(CMIF_RXC_SUP_MACINDEX(i))
#define M_CMIF_RXC_MACINDEX_BRP_RD(i)                                 REG_READ(CMIF_RXC_MACINDEX_BRP(i))
#define M_CMIF_RXC_MIN_CONT_SPAN_RD()                                 REG_READ(CMIF_RXC_MIN_CONT_SPAN)

#define M_CMIF_RXC_TIME_STAMP_T3_WR(reg)                              REG_WRITE(CMIF_RXC_TIME_STAMP_T3, reg)
#define M_CMIF_RXC_CRC_PASS_WR(reg)                                   REG_WRITE(CMIF_RXC_CRC_PASS, reg)
#define M_CMIF_RXC_TIME_STAMP_SLOT_WR(i, reg)                         REG_WRITE(CMIF_RXC_TIME_STAMP_SLOT(i), reg)
#define M_CMIF_RXC_INTERLACE_STATUS_WR(reg)                           REG_WRITE(CMIF_RXC_INTERLACE_STATUS, reg)
#define M_CMIF_RXC_REACK_WR(reg)                                      REG_WRITE(CMIF_RXC_REACK, reg)
#define M_CMIF_RXC_SUP_MACINDEX_WR(i, reg)                            REG_WRITE(CMIF_RXC_SUP_MACINDEX(i), reg)
#define M_CMIF_RXC_MACINDEX_BRP_WR(i, reg)                            REG_WRITE(CMIF_RXC_MACINDEX_BRP(i), reg)
#define M_CMIF_RXC_MIN_CONT_SPAN_WR(reg)                              REG_WRITE(CMIF_RXC_MIN_CONT_SPAN, reg)

#define CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_LSB                  (0)
#define CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_WIDTH                (12)
#define CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_MASK                 ((UINT32) (((1<<CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_WIDTH)-1) << CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_LSB) )
#define CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_FLD_WR(reg, val)         (reg |= (val) << CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_LSB)
#define CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_FLD_RD()                 ((M_CMIF_RXC_TIME_STAMP_T3_RD() & CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_MASK) >> CMIF_RXC_TIME_STAMP_T3_TIME_STAMP_T3_BIT_LSB)

#define CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_LSB                          (3)
#define CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_WIDTH                        (1)
#define CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_MASK                         ((UINT32) (((1<<CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_WIDTH)-1) << CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_LSB) )
#define CMIF_RXC_CRC_PASS_CRC_PASS_3_FLD_WR(reg, val)                 (reg |= (val) << CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_LSB)
#define CMIF_RXC_CRC_PASS_CRC_PASS_3_FLD_RD()                         ((M_CMIF_RXC_CRC_PASS_RD() & CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_MASK) >> CMIF_RXC_CRC_PASS_CRC_PASS_3_BIT_LSB)

#define CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_LSB                          (2)
#define CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_WIDTH                        (1)
#define CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_MASK                         ((UINT32) (((1<<CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_WIDTH)-1) << CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_LSB) )
#define CMIF_RXC_CRC_PASS_CRC_PASS_2_FLD_WR(reg, val)                 (reg |= (val) << CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_LSB)
#define CMIF_RXC_CRC_PASS_CRC_PASS_2_FLD_RD()                         ((M_CMIF_RXC_CRC_PASS_RD() & CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_MASK) >> CMIF_RXC_CRC_PASS_CRC_PASS_2_BIT_LSB)

#define CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_LSB                          (1)
#define CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_WIDTH                        (1)
#define CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_MASK                         ((UINT32) (((1<<CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_WIDTH)-1) << CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_LSB) )
#define CMIF_RXC_CRC_PASS_CRC_PASS_1_FLD_WR(reg, val)                 (reg |= (val) << CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_LSB)
#define CMIF_RXC_CRC_PASS_CRC_PASS_1_FLD_RD()                         ((M_CMIF_RXC_CRC_PASS_RD() & CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_MASK) >> CMIF_RXC_CRC_PASS_CRC_PASS_1_BIT_LSB)

#define CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_LSB                          (0)
#define CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_WIDTH                        (1)
#define CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_MASK                         ((UINT32) (((1<<CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_WIDTH)-1) << CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_LSB) )
#define CMIF_RXC_CRC_PASS_CRC_PASS_0_FLD_WR(reg, val)                 (reg |= (val) << CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_LSB)
#define CMIF_RXC_CRC_PASS_CRC_PASS_0_FLD_RD()                         ((M_CMIF_RXC_CRC_PASS_RD() & CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_MASK) >> CMIF_RXC_CRC_PASS_CRC_PASS_0_BIT_LSB)

#define CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_LSB              (0)
#define CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_WIDTH            (6)
#define CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_MASK             ((UINT32) (((1<<CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_WIDTH)-1) << CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_LSB) )
#define CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_FLD_WR(reg, val)     (reg |= (val) << CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_LSB)
#define CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_FLD_RD(i)            ((M_CMIF_RXC_TIME_STAMP_SLOT_RD(i) & CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_MASK) >> CMIF_RXC_TIME_STAMP_SLOT_TIME_STAMP_SLOT_BIT_LSB)

#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_LSB             (3)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_WIDTH           (1)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_MASK            ((UINT32) (((1<<CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_WIDTH)-1) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_LSB) )
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_FLD_WR(reg, val)    (reg |= (val) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_LSB)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_FLD_RD()            ((M_CMIF_RXC_INTERLACE_STATUS_RD() & CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_MASK) >> CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_3_BIT_LSB)

#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_LSB             (2)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_WIDTH           (1)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_MASK            ((UINT32) (((1<<CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_WIDTH)-1) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_LSB) )
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_FLD_WR(reg, val)    (reg |= (val) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_LSB)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_FLD_RD()            ((M_CMIF_RXC_INTERLACE_STATUS_RD() & CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_MASK) >> CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_2_BIT_LSB)

#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_LSB             (1)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_WIDTH           (1)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_MASK            ((UINT32) (((1<<CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_WIDTH)-1) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_LSB) )
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_FLD_WR(reg, val)    (reg |= (val) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_LSB)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_FLD_RD()            ((M_CMIF_RXC_INTERLACE_STATUS_RD() & CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_MASK) >> CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_1_BIT_LSB)

#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_LSB             (0)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_WIDTH           (1)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_MASK            ((UINT32) (((1<<CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_WIDTH)-1) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_LSB) )
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_FLD_WR(reg, val)    (reg |= (val) << CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_LSB)
#define CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_FLD_RD()            ((M_CMIF_RXC_INTERLACE_STATUS_RD() & CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_MASK) >> CMIF_RXC_INTERLACE_STATUS_INTERLACE_STS_0_BIT_LSB)

#define CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_LSB                      (3)
#define CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_WIDTH                    (1)
#define CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_MASK                     ((UINT32) (((1<<CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_WIDTH)-1) << CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_LSB) )
#define CMIF_RXC_REACK_REACK_INTERLACE_3_FLD_WR(reg, val)             (reg |= (val) << CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_LSB)
#define CMIF_RXC_REACK_REACK_INTERLACE_3_FLD_RD()                     ((M_CMIF_RXC_REACK_RD() & CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_MASK) >> CMIF_RXC_REACK_REACK_INTERLACE_3_BIT_LSB)

#define CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_LSB                      (2)
#define CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_WIDTH                    (1)
#define CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_MASK                     ((UINT32) (((1<<CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_WIDTH)-1) << CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_LSB) )
#define CMIF_RXC_REACK_REACK_INTERLACE_2_FLD_WR(reg, val)             (reg |= (val) << CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_LSB)
#define CMIF_RXC_REACK_REACK_INTERLACE_2_FLD_RD()                     ((M_CMIF_RXC_REACK_RD() & CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_MASK) >> CMIF_RXC_REACK_REACK_INTERLACE_2_BIT_LSB)

#define CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_LSB                      (1)
#define CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_WIDTH                    (1)
#define CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_MASK                     ((UINT32) (((1<<CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_WIDTH)-1) << CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_LSB) )
#define CMIF_RXC_REACK_REACK_INTERLACE_1_FLD_WR(reg, val)             (reg |= (val) << CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_LSB)
#define CMIF_RXC_REACK_REACK_INTERLACE_1_FLD_RD()                     ((M_CMIF_RXC_REACK_RD() & CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_MASK) >> CMIF_RXC_REACK_REACK_INTERLACE_1_BIT_LSB)

#define CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_LSB                      (0)
#define CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_WIDTH                    (1)
#define CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_MASK                     ((UINT32) (((1<<CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_WIDTH)-1) << CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_LSB) )
#define CMIF_RXC_REACK_REACK_INTERLACE_0_FLD_WR(reg, val)             (reg |= (val) << CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_LSB)
#define CMIF_RXC_REACK_REACK_INTERLACE_0_FLD_RD()                     ((M_CMIF_RXC_REACK_RD() & CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_MASK) >> CMIF_RXC_REACK_REACK_INTERLACE_0_BIT_LSB)

#define CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_LSB                    (0)
#define CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_WIDTH                  (8)
#define CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_MASK                   ((UINT32) (((1<<CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_WIDTH)-1) << CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_LSB) )
#define CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_FLD_WR(reg, val)           (reg |= (val) << CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_LSB)
#define CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_FLD_RD(i)                  ((M_CMIF_RXC_SUP_MACINDEX_RD(i) & CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_MASK) >> CMIF_RXC_SUP_MACINDEX_SUP_MACINDEX_BIT_LSB)

#define CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_LSB                    (0)
#define CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_WIDTH                  (8)
#define CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_MASK                   ((UINT32) (((1<<CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_WIDTH)-1) << CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_LSB) )
#define CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_FLD_WR(reg, val)           (reg |= (val) << CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_LSB)
#define CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_FLD_RD(i)                  ((M_CMIF_RXC_MACINDEX_BRP_RD(i) & CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_MASK) >> CMIF_RXC_MACINDEX_BRP_MACINDEX_BRP_BIT_LSB)

#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_LSB               (8)
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_WIDTH             (1)
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_MASK              ((UINT32) (((1<<CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_WIDTH)-1) << CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_LSB) )
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_FLD_WR(reg, val)      (reg |= (val) << CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_LSB)
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_FLD_RD()              ((M_CMIF_RXC_MIN_CONT_SPAN_RD() & CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_MASK) >> CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_EN_BIT_LSB)

#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_LSB                  (0)
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_WIDTH                (5)
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_MASK                 ((UINT32) (((1<<CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_WIDTH)-1) << CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_LSB) )
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_FLD_WR(reg, val)         (reg |= (val) << CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_LSB)
#define CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_FLD_RD()                 ((M_CMIF_RXC_MIN_CONT_SPAN_RD() & CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_MASK) >> CMIF_RXC_MIN_CONT_SPAN_MIN_CONT_SPAN_BIT_LSB)

#endif /* __RXC_CMIF_H__ */
