#ifndef __C2K_CH_CONFIG_CMIF_H__
#define __C2K_CH_CONFIG_CMIF_H__

#include "reg_access.h"
#include "c2k_base_addr_cmif.h"

#define CMIF_C2K_CH_CONFIG_REG_BASE                                   (CMIF_C2K_RAKE_CH_CONFIG_OFFSET)
#define CMIF_CHANNEL_EN_1XRTT                                         (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0000)
#define CMIF_CHANNEL_EN_EVDO                                          (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0004)
#define CMIF_USR_MACINDEX                                             (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0008)
#define CMIF_MACINDEX(i)                                              (CMIF_C2K_CH_CONFIG_REG_BASE + 0x000c + ((i) * 0x4))
#define CMIF_PILOT_1X_CFG(i)                                          (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0024 + ((i) * 0x4))
#define CMIF_PILOT_TRAFFIC_CFG(i)                                     (CMIF_C2K_CH_CONFIG_REG_BASE + 0x003C + ((i) * 0x4))
#define CMIF_PILOT_MAC_CFG(i)                                         (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0054 + ((i) * 0x4))
#define CMIF_C2K_PHCH0_CFG0(i)                                        (CMIF_C2K_CH_CONFIG_REG_BASE + 0x006C + ((i) * 0x4))
#define CMIF_C2K_PHCH0_CFG1(i)                                        (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0084 + ((i) * 0x4))
#define CMIF_C2K_PHCH1_CFG0(i)                                        (CMIF_C2K_CH_CONFIG_REG_BASE + 0x009C + ((i) * 0x4))
#define CMIF_C2K_PHCH1_CFG1(i)                                        (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00B4 + ((i) * 0x4))
#define CMIF_C2K_PHCH2_CFG0                                           (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00CC)
#define CMIF_C2K_PHCH2_CFG1                                           (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00D0)
#define CMIF_C2K_PHCH0_OFFSET                                         (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00D4)
#define CMIF_C2K_PHCH1_OFFSET                                         (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00D8)
#define CMIF_C2K_PHCH2_OFFSET                                         (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00DC)
#define CMIF_PMB_CFG_CH(i)                                            (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00E0 + ((i) * 0x4))
#define CMIF_MAC_CFG_CH(i)                                            (CMIF_C2K_CH_CONFIG_REG_BASE + 0x00F0 + ((i) * 0x4))
#define CMIF_RA_CFG_CH(i)                                             (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0108 + ((i) * 0x4))
#define CMIF_PN_OFFSET_1XRTT(i)                                       (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0120 + ((i) * 0x4))
#define CMIF_PN_OFFSET_EVDO(i)                                        (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0138 + ((i) * 0x4))
#define CMIF_SECTOR_ID                                                (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0150)
#define CMIF_TARGET_SECTOR_ID                                         (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0154)
#define CMIF_QOF_INDEX_PHCH0(i)                                       (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0158 + ((i) * 0x4))
#define CMIF_QOF_INDEX_PHCH1(i)                                       (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0170 + ((i) * 0x4))
#define CMIF_FN_QOF_SEL_FW                                            (CMIF_C2K_CH_CONFIG_REG_BASE + 0x0188)
#define CMIF_PACK_POS                                                 (CMIF_C2K_CH_CONFIG_REG_BASE + 0x018C)

#define M_CMIF_CHANNEL_EN_1XRTT_RD()                                  REG_READ(CMIF_CHANNEL_EN_1XRTT)
#define M_CMIF_CHANNEL_EN_EVDO_RD()                                   REG_READ(CMIF_CHANNEL_EN_EVDO)
#define M_CMIF_USR_MACINDEX_RD()                                      REG_READ(CMIF_USR_MACINDEX)
#define M_CMIF_MACINDEX_RD(i)                                         REG_READ(CMIF_MACINDEX(i))
#define M_CMIF_PILOT_1X_CFG_RD(i)                                     REG_READ(CMIF_PILOT_1X_CFG(i))
#define M_CMIF_PILOT_TRAFFIC_CFG_RD(i)                                REG_READ(CMIF_PILOT_TRAFFIC_CFG(i))
#define M_CMIF_PILOT_MAC_CFG_RD(i)                                    REG_READ(CMIF_PILOT_MAC_CFG(i))
#define M_CMIF_C2K_PHCH0_CFG0_RD(i)                                   REG_READ(CMIF_C2K_PHCH0_CFG0(i))
#define M_CMIF_C2K_PHCH0_CFG1_RD(i)                                   REG_READ(CMIF_C2K_PHCH0_CFG1(i))
#define M_CMIF_C2K_PHCH1_CFG0_RD(i)                                   REG_READ(CMIF_C2K_PHCH1_CFG0(i))
#define M_CMIF_C2K_PHCH1_CFG1_RD(i)                                   REG_READ(CMIF_C2K_PHCH1_CFG1(i))
#define M_CMIF_C2K_PHCH2_CFG0_RD()                                    REG_READ(CMIF_C2K_PHCH2_CFG0)
#define M_CMIF_C2K_PHCH2_CFG1_RD()                                    REG_READ(CMIF_C2K_PHCH2_CFG1)
#define M_CMIF_C2K_PHCH0_OFFSET_RD()                                  REG_READ(CMIF_C2K_PHCH0_OFFSET)
#define M_CMIF_C2K_PHCH1_OFFSET_RD()                                  REG_READ(CMIF_C2K_PHCH1_OFFSET)
#define M_CMIF_C2K_PHCH2_OFFSET_RD()                                  REG_READ(CMIF_C2K_PHCH2_OFFSET)
#define M_CMIF_PMB_CFG_CH_RD(i)                                       REG_READ(CMIF_PMB_CFG_CH(i))
#define M_CMIF_MAC_CFG_CH_RD(i)                                       REG_READ(CMIF_MAC_CFG_CH(i))
#define M_CMIF_RA_CFG_CH_RD(i)                                        REG_READ(CMIF_RA_CFG_CH(i))
#define M_CMIF_PN_OFFSET_1XRTT_RD(i)                                  REG_READ(CMIF_PN_OFFSET_1XRTT(i))
#define M_CMIF_PN_OFFSET_EVDO_RD(i)                                   REG_READ(CMIF_PN_OFFSET_EVDO(i))
#define M_CMIF_SECTOR_ID_RD()                                         REG_READ(CMIF_SECTOR_ID)
#define M_CMIF_TARGET_SECTOR_ID_RD()                                  REG_READ(CMIF_TARGET_SECTOR_ID)
#define M_CMIF_QOF_INDEX_PHCH0_RD(i)                                  REG_READ(CMIF_QOF_INDEX_PHCH0(i))
#define M_CMIF_QOF_INDEX_PHCH1_RD(i)                                  REG_READ(CMIF_QOF_INDEX_PHCH1(i))
#define M_CMIF_FN_QOF_SEL_FW_RD()                                     REG_READ(CMIF_FN_QOF_SEL_FW)
#define M_CMIF_PACK_POS_RD()                                          REG_READ(CMIF_PACK_POS)

#define M_CMIF_CHANNEL_EN_1XRTT_WR(reg)                               REG_WRITE(CMIF_CHANNEL_EN_1XRTT, reg)
#define M_CMIF_CHANNEL_EN_EVDO_WR(reg)                                REG_WRITE(CMIF_CHANNEL_EN_EVDO, reg)
#define M_CMIF_USR_MACINDEX_WR(reg)                                   REG_WRITE(CMIF_USR_MACINDEX, reg)
#define M_CMIF_MACINDEX_WR(i, reg)                                    REG_WRITE(CMIF_MACINDEX(i), reg)
#define M_CMIF_PILOT_1X_CFG_WR(i, reg)                                REG_WRITE(CMIF_PILOT_1X_CFG(i), reg)
#define M_CMIF_PILOT_TRAFFIC_CFG_WR(i, reg)                           REG_WRITE(CMIF_PILOT_TRAFFIC_CFG(i), reg)
#define M_CMIF_PILOT_MAC_CFG_WR(i, reg)                               REG_WRITE(CMIF_PILOT_MAC_CFG(i), reg)
#define M_CMIF_C2K_PHCH0_CFG0_WR(i, reg)                              REG_WRITE(CMIF_C2K_PHCH0_CFG0(i), reg)
#define M_CMIF_C2K_PHCH0_CFG1_WR(i, reg)                              REG_WRITE(CMIF_C2K_PHCH0_CFG1(i), reg)
#define M_CMIF_C2K_PHCH1_CFG0_WR(i, reg)                              REG_WRITE(CMIF_C2K_PHCH1_CFG0(i), reg)
#define M_CMIF_C2K_PHCH1_CFG1_WR(i, reg)                              REG_WRITE(CMIF_C2K_PHCH1_CFG1(i), reg)
#define M_CMIF_C2K_PHCH2_CFG0_WR(reg)                                 REG_WRITE(CMIF_C2K_PHCH2_CFG0, reg)
#define M_CMIF_C2K_PHCH2_CFG1_WR(reg)                                 REG_WRITE(CMIF_C2K_PHCH2_CFG1, reg)
#define M_CMIF_C2K_PHCH0_OFFSET_WR(reg)                               REG_WRITE(CMIF_C2K_PHCH0_OFFSET, reg)
#define M_CMIF_C2K_PHCH1_OFFSET_WR(reg)                               REG_WRITE(CMIF_C2K_PHCH1_OFFSET, reg)
#define M_CMIF_C2K_PHCH2_OFFSET_WR(reg)                               REG_WRITE(CMIF_C2K_PHCH2_OFFSET, reg)
#define M_CMIF_PMB_CFG_CH_WR(i, reg)                                  REG_WRITE(CMIF_PMB_CFG_CH(i), reg)
#define M_CMIF_MAC_CFG_CH_WR(i, reg)                                  REG_WRITE(CMIF_MAC_CFG_CH(i), reg)
#define M_CMIF_RA_CFG_CH_WR(i, reg)                                   REG_WRITE(CMIF_RA_CFG_CH(i), reg)
#define M_CMIF_PN_OFFSET_1XRTT_WR(i, reg)                             REG_WRITE(CMIF_PN_OFFSET_1XRTT(i), reg)
#define M_CMIF_PN_OFFSET_EVDO_WR(i, reg)                              REG_WRITE(CMIF_PN_OFFSET_EVDO(i), reg)
#define M_CMIF_SECTOR_ID_WR(reg)                                      REG_WRITE(CMIF_SECTOR_ID, reg)
#define M_CMIF_TARGET_SECTOR_ID_WR(reg)                               REG_WRITE(CMIF_TARGET_SECTOR_ID, reg)
#define M_CMIF_QOF_INDEX_PHCH0_WR(i, reg)                             REG_WRITE(CMIF_QOF_INDEX_PHCH0(i), reg)
#define M_CMIF_QOF_INDEX_PHCH1_WR(i, reg)                             REG_WRITE(CMIF_QOF_INDEX_PHCH1(i), reg)
#define M_CMIF_FN_QOF_SEL_FW_WR(reg)                                  REG_WRITE(CMIF_FN_QOF_SEL_FW, reg)
#define M_CMIF_PACK_POS_WR(reg)                                       REG_WRITE(CMIF_PACK_POS, reg)

#define CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_LSB                          (3)
#define CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_WIDTH                        (1)
#define CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_MASK                         ((UINT32) (((1<<CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_1XRTT_FPC_EN_FLD_WR(reg, val)                 (reg |= (val) << CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_1XRTT_FPC_EN_FLD_RD()                         ((M_CMIF_CHANNEL_EN_1XRTT_RD() & CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_MASK) >> CMIF_CHANNEL_EN_1XRTT_FPC_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_LSB                        (2)
#define CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_WIDTH                      (1)
#define CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_MASK                       ((UINT32) (((1<<CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_FLD_WR(reg, val)               (reg |= (val) << CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_FLD_RD()                       ((M_CMIF_CHANNEL_EN_1XRTT_RD() & CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_MASK) >> CMIF_CHANNEL_EN_1XRTT_PHCH2_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_LSB                        (1)
#define CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_WIDTH                      (1)
#define CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_MASK                       ((UINT32) (((1<<CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_FLD_WR(reg, val)               (reg |= (val) << CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_FLD_RD()                       ((M_CMIF_CHANNEL_EN_1XRTT_RD() & CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_MASK) >> CMIF_CHANNEL_EN_1XRTT_PHCH1_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_LSB                        (0)
#define CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_WIDTH                      (1)
#define CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_MASK                       ((UINT32) (((1<<CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_FLD_WR(reg, val)               (reg |= (val) << CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_FLD_RD()                       ((M_CMIF_CHANNEL_EN_1XRTT_RD() & CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_MASK) >> CMIF_CHANNEL_EN_1XRTT_PHCH0_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_LSB                            (5)
#define CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_WIDTH                          (1)
#define CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_MASK                           ((UINT32) (((1<<CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_EVDO_RA_EN_FLD_WR(reg, val)                   (reg |= (val) << CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_EVDO_RA_EN_FLD_RD()                           ((M_CMIF_CHANNEL_EN_EVDO_RD() & CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_MASK) >> CMIF_CHANNEL_EN_EVDO_RA_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_LSB                           (4)
#define CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_WIDTH                         (1)
#define CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_MASK                          ((UINT32) (((1<<CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_EVDO_MAC_EN_FLD_WR(reg, val)                  (reg |= (val) << CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_EVDO_MAC_EN_FLD_RD()                          ((M_CMIF_CHANNEL_EN_EVDO_RD() & CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_MASK) >> CMIF_CHANNEL_EN_EVDO_MAC_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_LSB                       (3)
#define CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_WIDTH                     (1)
#define CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_MASK                      ((UINT32) (((1<<CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_FLD_WR(reg, val)              (reg |= (val) << CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_FLD_RD()                      ((M_CMIF_CHANNEL_EN_EVDO_RD() & CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_MASK) >> CMIF_CHANNEL_EN_EVDO_PMB_FTC_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_LSB                          (2)
#define CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_WIDTH                        (1)
#define CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_MASK                         ((UINT32) (((1<<CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_EVDO_PMB2_EN_FLD_WR(reg, val)                 (reg |= (val) << CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_EVDO_PMB2_EN_FLD_RD()                         ((M_CMIF_CHANNEL_EN_EVDO_RD() & CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_MASK) >> CMIF_CHANNEL_EN_EVDO_PMB2_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_LSB                          (1)
#define CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_WIDTH                        (1)
#define CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_MASK                         ((UINT32) (((1<<CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_EVDO_PMB1_EN_FLD_WR(reg, val)                 (reg |= (val) << CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_EVDO_PMB1_EN_FLD_RD()                         ((M_CMIF_CHANNEL_EN_EVDO_RD() & CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_MASK) >> CMIF_CHANNEL_EN_EVDO_PMB1_EN_BIT_LSB)

#define CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_LSB                          (0)
#define CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_WIDTH                        (1)
#define CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_MASK                         ((UINT32) (((1<<CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_WIDTH)-1) << CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_LSB) )
#define CMIF_CHANNEL_EN_EVDO_PMB0_EN_FLD_WR(reg, val)                 (reg |= (val) << CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_LSB)
#define CMIF_CHANNEL_EN_EVDO_PMB0_EN_FLD_RD()                         ((M_CMIF_CHANNEL_EN_EVDO_RD() & CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_MASK) >> CMIF_CHANNEL_EN_EVDO_PMB0_EN_BIT_LSB)

#define CMIF_USR_MACINDEX_USR_MACINDEX_BIT_LSB                        (0)
#define CMIF_USR_MACINDEX_USR_MACINDEX_BIT_WIDTH                      (7)
#define CMIF_USR_MACINDEX_USR_MACINDEX_BIT_MASK                       ((UINT32) (((1<<CMIF_USR_MACINDEX_USR_MACINDEX_BIT_WIDTH)-1) << CMIF_USR_MACINDEX_USR_MACINDEX_BIT_LSB) )
#define CMIF_USR_MACINDEX_USR_MACINDEX_FLD_WR(reg, val)               (reg |= (val) << CMIF_USR_MACINDEX_USR_MACINDEX_BIT_LSB)
#define CMIF_USR_MACINDEX_USR_MACINDEX_FLD_RD()                       ((M_CMIF_USR_MACINDEX_RD() & CMIF_USR_MACINDEX_USR_MACINDEX_BIT_MASK) >> CMIF_USR_MACINDEX_USR_MACINDEX_BIT_LSB)

#define CMIF_MACINDEX_MACINDEX_BIT_LSB                                (0)
#define CMIF_MACINDEX_MACINDEX_BIT_WIDTH                              (7)
#define CMIF_MACINDEX_MACINDEX_BIT_MASK                               ((UINT32) (((1<<CMIF_MACINDEX_MACINDEX_BIT_WIDTH)-1) << CMIF_MACINDEX_MACINDEX_BIT_LSB) )
#define CMIF_MACINDEX_MACINDEX_FLD_WR(reg, val)                       (reg |= (val) << CMIF_MACINDEX_MACINDEX_BIT_LSB)
#define CMIF_MACINDEX_MACINDEX_FLD_RD(i)                              ((M_CMIF_MACINDEX_RD(i) & CMIF_MACINDEX_MACINDEX_BIT_MASK) >> CMIF_MACINDEX_MACINDEX_BIT_LSB)

#define CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_LSB                          (7)
#define CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_WIDTH                        (8)
#define CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_MASK                         ((UINT32) (((1<<CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_WIDTH)-1) << CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_LSB) )
#define CMIF_PILOT_1X_CFG_WALSH_CODE_FLD_WR(reg, val)                 (reg |= (val) << CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_LSB)
#define CMIF_PILOT_1X_CFG_WALSH_CODE_FLD_RD(i)                        ((M_CMIF_PILOT_1X_CFG_RD(i) & CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_MASK) >> CMIF_PILOT_1X_CFG_WALSH_CODE_BIT_LSB)

#define CMIF_PILOT_1X_CFG_SF_BIT_LSB                                  (4)
#define CMIF_PILOT_1X_CFG_SF_BIT_WIDTH                                (3)
#define CMIF_PILOT_1X_CFG_SF_BIT_MASK                                 ((UINT32) (((1<<CMIF_PILOT_1X_CFG_SF_BIT_WIDTH)-1) << CMIF_PILOT_1X_CFG_SF_BIT_LSB) )
#define CMIF_PILOT_1X_CFG_SF_FLD_WR(reg, val)                         (reg |= (val) << CMIF_PILOT_1X_CFG_SF_BIT_LSB)
#define CMIF_PILOT_1X_CFG_SF_FLD_RD(i)                                ((M_CMIF_PILOT_1X_CFG_RD(i) & CMIF_PILOT_1X_CFG_SF_BIT_MASK) >> CMIF_PILOT_1X_CFG_SF_BIT_LSB)

#define CMIF_PILOT_1X_CFG_CH_TYPE_BIT_LSB                             (0)
#define CMIF_PILOT_1X_CFG_CH_TYPE_BIT_WIDTH                           (4)
#define CMIF_PILOT_1X_CFG_CH_TYPE_BIT_MASK                            ((UINT32) (((1<<CMIF_PILOT_1X_CFG_CH_TYPE_BIT_WIDTH)-1) << CMIF_PILOT_1X_CFG_CH_TYPE_BIT_LSB) )
#define CMIF_PILOT_1X_CFG_CH_TYPE_FLD_WR(reg, val)                    (reg |= (val) << CMIF_PILOT_1X_CFG_CH_TYPE_BIT_LSB)
#define CMIF_PILOT_1X_CFG_CH_TYPE_FLD_RD(i)                           ((M_CMIF_PILOT_1X_CFG_RD(i) & CMIF_PILOT_1X_CFG_CH_TYPE_BIT_MASK) >> CMIF_PILOT_1X_CFG_CH_TYPE_BIT_LSB)

#define CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_LSB                     (7)
#define CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_WIDTH                   (8)
#define CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_MASK                    ((UINT32) (((1<<CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_WIDTH)-1) << CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_LSB) )
#define CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_FLD_WR(reg, val)            (reg |= (val) << CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_LSB)
#define CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_FLD_RD(i)                   ((M_CMIF_PILOT_TRAFFIC_CFG_RD(i) & CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_MASK) >> CMIF_PILOT_TRAFFIC_CFG_WALSH_CODE_BIT_LSB)

#define CMIF_PILOT_TRAFFIC_CFG_SF_BIT_LSB                             (4)
#define CMIF_PILOT_TRAFFIC_CFG_SF_BIT_WIDTH                           (3)
#define CMIF_PILOT_TRAFFIC_CFG_SF_BIT_MASK                            ((UINT32) (((1<<CMIF_PILOT_TRAFFIC_CFG_SF_BIT_WIDTH)-1) << CMIF_PILOT_TRAFFIC_CFG_SF_BIT_LSB) )
#define CMIF_PILOT_TRAFFIC_CFG_SF_FLD_WR(reg, val)                    (reg |= (val) << CMIF_PILOT_TRAFFIC_CFG_SF_BIT_LSB)
#define CMIF_PILOT_TRAFFIC_CFG_SF_FLD_RD(i)                           ((M_CMIF_PILOT_TRAFFIC_CFG_RD(i) & CMIF_PILOT_TRAFFIC_CFG_SF_BIT_MASK) >> CMIF_PILOT_TRAFFIC_CFG_SF_BIT_LSB)

#define CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_LSB                        (0)
#define CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_WIDTH                      (4)
#define CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_MASK                       ((UINT32) (((1<<CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_WIDTH)-1) << CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_LSB) )
#define CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_FLD_WR(reg, val)               (reg |= (val) << CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_LSB)
#define CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_FLD_RD(i)                      ((M_CMIF_PILOT_TRAFFIC_CFG_RD(i) & CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_MASK) >> CMIF_PILOT_TRAFFIC_CFG_CH_TYPE_BIT_LSB)

#define CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_LSB                         (7)
#define CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_WIDTH                       (8)
#define CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_MASK                        ((UINT32) (((1<<CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_WIDTH)-1) << CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_LSB) )
#define CMIF_PILOT_MAC_CFG_WALSH_CODE_FLD_WR(reg, val)                (reg |= (val) << CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_LSB)
#define CMIF_PILOT_MAC_CFG_WALSH_CODE_FLD_RD(i)                       ((M_CMIF_PILOT_MAC_CFG_RD(i) & CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_MASK) >> CMIF_PILOT_MAC_CFG_WALSH_CODE_BIT_LSB)

#define CMIF_PILOT_MAC_CFG_SF_BIT_LSB                                 (4)
#define CMIF_PILOT_MAC_CFG_SF_BIT_WIDTH                               (3)
#define CMIF_PILOT_MAC_CFG_SF_BIT_MASK                                ((UINT32) (((1<<CMIF_PILOT_MAC_CFG_SF_BIT_WIDTH)-1) << CMIF_PILOT_MAC_CFG_SF_BIT_LSB) )
#define CMIF_PILOT_MAC_CFG_SF_FLD_WR(reg, val)                        (reg |= (val) << CMIF_PILOT_MAC_CFG_SF_BIT_LSB)
#define CMIF_PILOT_MAC_CFG_SF_FLD_RD(i)                               ((M_CMIF_PILOT_MAC_CFG_RD(i) & CMIF_PILOT_MAC_CFG_SF_BIT_MASK) >> CMIF_PILOT_MAC_CFG_SF_BIT_LSB)

#define CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_LSB                            (0)
#define CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_WIDTH                          (4)
#define CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_MASK                           ((UINT32) (((1<<CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_WIDTH)-1) << CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_LSB) )
#define CMIF_PILOT_MAC_CFG_CH_TYPE_FLD_WR(reg, val)                   (reg |= (val) << CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_LSB)
#define CMIF_PILOT_MAC_CFG_CH_TYPE_FLD_RD(i)                          ((M_CMIF_PILOT_MAC_CFG_RD(i) & CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_MASK) >> CMIF_PILOT_MAC_CFG_CH_TYPE_BIT_LSB)

#define CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_LSB                        (7)
#define CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_WIDTH                      (8)
#define CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_MASK                       ((UINT32) (((1<<CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_WIDTH)-1) << CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_LSB) )
#define CMIF_C2K_PHCH0_CFG0_WALSH_CODE_FLD_WR(reg, val)               (reg |= (val) << CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_LSB)
#define CMIF_C2K_PHCH0_CFG0_WALSH_CODE_FLD_RD(i)                      ((M_CMIF_C2K_PHCH0_CFG0_RD(i) & CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_MASK) >> CMIF_C2K_PHCH0_CFG0_WALSH_CODE_BIT_LSB)

#define CMIF_C2K_PHCH0_CFG0_SF_BIT_LSB                                (4)
#define CMIF_C2K_PHCH0_CFG0_SF_BIT_WIDTH                              (3)
#define CMIF_C2K_PHCH0_CFG0_SF_BIT_MASK                               ((UINT32) (((1<<CMIF_C2K_PHCH0_CFG0_SF_BIT_WIDTH)-1) << CMIF_C2K_PHCH0_CFG0_SF_BIT_LSB) )
#define CMIF_C2K_PHCH0_CFG0_SF_FLD_WR(reg, val)                       (reg |= (val) << CMIF_C2K_PHCH0_CFG0_SF_BIT_LSB)
#define CMIF_C2K_PHCH0_CFG0_SF_FLD_RD(i)                              ((M_CMIF_C2K_PHCH0_CFG0_RD(i) & CMIF_C2K_PHCH0_CFG0_SF_BIT_MASK) >> CMIF_C2K_PHCH0_CFG0_SF_BIT_LSB)

#define CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_LSB                           (0)
#define CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_WIDTH                         (4)
#define CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_MASK                          ((UINT32) (((1<<CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_WIDTH)-1) << CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_LSB) )
#define CMIF_C2K_PHCH0_CFG0_CH_TYPE_FLD_WR(reg, val)                  (reg |= (val) << CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_LSB)
#define CMIF_C2K_PHCH0_CFG0_CH_TYPE_FLD_RD(i)                         ((M_CMIF_C2K_PHCH0_CFG0_RD(i) & CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_MASK) >> CMIF_C2K_PHCH0_CFG0_CH_TYPE_BIT_LSB)

#define CMIF_C2K_PHCH0_CFG1_TAU_BIT_LSB                               (0)
#define CMIF_C2K_PHCH0_CFG1_TAU_BIT_WIDTH                             (5)
#define CMIF_C2K_PHCH0_CFG1_TAU_BIT_MASK                              ((UINT32) (((1<<CMIF_C2K_PHCH0_CFG1_TAU_BIT_WIDTH)-1) << CMIF_C2K_PHCH0_CFG1_TAU_BIT_LSB) )
#define CMIF_C2K_PHCH0_CFG1_TAU_FLD_WR(reg, val)                      (reg |= (val) << CMIF_C2K_PHCH0_CFG1_TAU_BIT_LSB)
#define CMIF_C2K_PHCH0_CFG1_TAU_FLD_RD(i)                             ((M_CMIF_C2K_PHCH0_CFG1_RD(i) & CMIF_C2K_PHCH0_CFG1_TAU_BIT_MASK) >> CMIF_C2K_PHCH0_CFG1_TAU_BIT_LSB)

#define CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_LSB                        (7)
#define CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_WIDTH                      (8)
#define CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_MASK                       ((UINT32) (((1<<CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_WIDTH)-1) << CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_LSB) )
#define CMIF_C2K_PHCH1_CFG0_WALSH_CODE_FLD_WR(reg, val)               (reg |= (val) << CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_LSB)
#define CMIF_C2K_PHCH1_CFG0_WALSH_CODE_FLD_RD(i)                      ((M_CMIF_C2K_PHCH1_CFG0_RD(i) & CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_MASK) >> CMIF_C2K_PHCH1_CFG0_WALSH_CODE_BIT_LSB)

#define CMIF_C2K_PHCH1_CFG0_SF_BIT_LSB                                (4)
#define CMIF_C2K_PHCH1_CFG0_SF_BIT_WIDTH                              (3)
#define CMIF_C2K_PHCH1_CFG0_SF_BIT_MASK                               ((UINT32) (((1<<CMIF_C2K_PHCH1_CFG0_SF_BIT_WIDTH)-1) << CMIF_C2K_PHCH1_CFG0_SF_BIT_LSB) )
#define CMIF_C2K_PHCH1_CFG0_SF_FLD_WR(reg, val)                       (reg |= (val) << CMIF_C2K_PHCH1_CFG0_SF_BIT_LSB)
#define CMIF_C2K_PHCH1_CFG0_SF_FLD_RD(i)                              ((M_CMIF_C2K_PHCH1_CFG0_RD(i) & CMIF_C2K_PHCH1_CFG0_SF_BIT_MASK) >> CMIF_C2K_PHCH1_CFG0_SF_BIT_LSB)

#define CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_LSB                           (0)
#define CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_WIDTH                         (4)
#define CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_MASK                          ((UINT32) (((1<<CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_WIDTH)-1) << CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_LSB) )
#define CMIF_C2K_PHCH1_CFG0_CH_TYPE_FLD_WR(reg, val)                  (reg |= (val) << CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_LSB)
#define CMIF_C2K_PHCH1_CFG0_CH_TYPE_FLD_RD(i)                         ((M_CMIF_C2K_PHCH1_CFG0_RD(i) & CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_MASK) >> CMIF_C2K_PHCH1_CFG0_CH_TYPE_BIT_LSB)

#define CMIF_C2K_PHCH1_CFG1_TAU_BIT_LSB                               (0)
#define CMIF_C2K_PHCH1_CFG1_TAU_BIT_WIDTH                             (5)
#define CMIF_C2K_PHCH1_CFG1_TAU_BIT_MASK                              ((UINT32) (((1<<CMIF_C2K_PHCH1_CFG1_TAU_BIT_WIDTH)-1) << CMIF_C2K_PHCH1_CFG1_TAU_BIT_LSB) )
#define CMIF_C2K_PHCH1_CFG1_TAU_FLD_WR(reg, val)                      (reg |= (val) << CMIF_C2K_PHCH1_CFG1_TAU_BIT_LSB)
#define CMIF_C2K_PHCH1_CFG1_TAU_FLD_RD(i)                             ((M_CMIF_C2K_PHCH1_CFG1_RD(i) & CMIF_C2K_PHCH1_CFG1_TAU_BIT_MASK) >> CMIF_C2K_PHCH1_CFG1_TAU_BIT_LSB)

#define CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_LSB                        (7)
#define CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_WIDTH                      (8)
#define CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_MASK                       ((UINT32) (((1<<CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_WIDTH)-1) << CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_LSB) )
#define CMIF_C2K_PHCH2_CFG0_WALSH_CODE_FLD_WR(reg, val)               (reg |= (val) << CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_LSB)
#define CMIF_C2K_PHCH2_CFG0_WALSH_CODE_FLD_RD()                       ((M_CMIF_C2K_PHCH2_CFG0_RD() & CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_MASK) >> CMIF_C2K_PHCH2_CFG0_WALSH_CODE_BIT_LSB)

#define CMIF_C2K_PHCH2_CFG0_SF_BIT_LSB                                (4)
#define CMIF_C2K_PHCH2_CFG0_SF_BIT_WIDTH                              (3)
#define CMIF_C2K_PHCH2_CFG0_SF_BIT_MASK                               ((UINT32) (((1<<CMIF_C2K_PHCH2_CFG0_SF_BIT_WIDTH)-1) << CMIF_C2K_PHCH2_CFG0_SF_BIT_LSB) )
#define CMIF_C2K_PHCH2_CFG0_SF_FLD_WR(reg, val)                       (reg |= (val) << CMIF_C2K_PHCH2_CFG0_SF_BIT_LSB)
#define CMIF_C2K_PHCH2_CFG0_SF_FLD_RD()                               ((M_CMIF_C2K_PHCH2_CFG0_RD() & CMIF_C2K_PHCH2_CFG0_SF_BIT_MASK) >> CMIF_C2K_PHCH2_CFG0_SF_BIT_LSB)

#define CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_LSB                           (0)
#define CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_WIDTH                         (4)
#define CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_MASK                          ((UINT32) (((1<<CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_WIDTH)-1) << CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_LSB) )
#define CMIF_C2K_PHCH2_CFG0_CH_TYPE_FLD_WR(reg, val)                  (reg |= (val) << CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_LSB)
#define CMIF_C2K_PHCH2_CFG0_CH_TYPE_FLD_RD()                          ((M_CMIF_C2K_PHCH2_CFG0_RD() & CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_MASK) >> CMIF_C2K_PHCH2_CFG0_CH_TYPE_BIT_LSB)

#define CMIF_C2K_PHCH2_CFG1_TAU_BIT_LSB                               (0)
#define CMIF_C2K_PHCH2_CFG1_TAU_BIT_WIDTH                             (5)
#define CMIF_C2K_PHCH2_CFG1_TAU_BIT_MASK                              ((UINT32) (((1<<CMIF_C2K_PHCH2_CFG1_TAU_BIT_WIDTH)-1) << CMIF_C2K_PHCH2_CFG1_TAU_BIT_LSB) )
#define CMIF_C2K_PHCH2_CFG1_TAU_FLD_WR(reg, val)                      (reg |= (val) << CMIF_C2K_PHCH2_CFG1_TAU_BIT_LSB)
#define CMIF_C2K_PHCH2_CFG1_TAU_FLD_RD()                              ((M_CMIF_C2K_PHCH2_CFG1_RD() & CMIF_C2K_PHCH2_CFG1_TAU_BIT_MASK) >> CMIF_C2K_PHCH2_CFG1_TAU_BIT_LSB)

#define CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_LSB                          (0)
#define CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_WIDTH                        (16)
#define CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_MASK                         ((UINT32) (((1<<CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_WIDTH)-1) << CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_LSB) )
#define CMIF_C2K_PHCH0_OFFSET_OFFSET_FLD_WR(reg, val)                 (reg |= (val) << CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_LSB)
#define CMIF_C2K_PHCH0_OFFSET_OFFSET_FLD_RD()                         ((M_CMIF_C2K_PHCH0_OFFSET_RD() & CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_MASK) >> CMIF_C2K_PHCH0_OFFSET_OFFSET_BIT_LSB)

#define CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_LSB                          (0)
#define CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_WIDTH                        (16)
#define CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_MASK                         ((UINT32) (((1<<CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_WIDTH)-1) << CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_LSB) )
#define CMIF_C2K_PHCH1_OFFSET_OFFSET_FLD_WR(reg, val)                 (reg |= (val) << CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_LSB)
#define CMIF_C2K_PHCH1_OFFSET_OFFSET_FLD_RD()                         ((M_CMIF_C2K_PHCH1_OFFSET_RD() & CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_MASK) >> CMIF_C2K_PHCH1_OFFSET_OFFSET_BIT_LSB)

#define CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_LSB                          (0)
#define CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_WIDTH                        (16)
#define CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_MASK                         ((UINT32) (((1<<CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_WIDTH)-1) << CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_LSB) )
#define CMIF_C2K_PHCH2_OFFSET_OFFSET_FLD_WR(reg, val)                 (reg |= (val) << CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_LSB)
#define CMIF_C2K_PHCH2_OFFSET_OFFSET_FLD_RD()                         ((M_CMIF_C2K_PHCH2_OFFSET_RD() & CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_MASK) >> CMIF_C2K_PHCH2_OFFSET_OFFSET_BIT_LSB)

#define CMIF_PMB_CFG_CH_WALSH_CODE_BIT_LSB                            (7)
#define CMIF_PMB_CFG_CH_WALSH_CODE_BIT_WIDTH                          (8)
#define CMIF_PMB_CFG_CH_WALSH_CODE_BIT_MASK                           ((UINT32) (((1<<CMIF_PMB_CFG_CH_WALSH_CODE_BIT_WIDTH)-1) << CMIF_PMB_CFG_CH_WALSH_CODE_BIT_LSB) )
#define CMIF_PMB_CFG_CH_WALSH_CODE_FLD_WR(reg, val)                   (reg |= (val) << CMIF_PMB_CFG_CH_WALSH_CODE_BIT_LSB)
#define CMIF_PMB_CFG_CH_WALSH_CODE_FLD_RD(i)                          ((M_CMIF_PMB_CFG_CH_RD(i) & CMIF_PMB_CFG_CH_WALSH_CODE_BIT_MASK) >> CMIF_PMB_CFG_CH_WALSH_CODE_BIT_LSB)

#define CMIF_PMB_CFG_CH_SF_BIT_LSB                                    (4)
#define CMIF_PMB_CFG_CH_SF_BIT_WIDTH                                  (3)
#define CMIF_PMB_CFG_CH_SF_BIT_MASK                                   ((UINT32) (((1<<CMIF_PMB_CFG_CH_SF_BIT_WIDTH)-1) << CMIF_PMB_CFG_CH_SF_BIT_LSB) )
#define CMIF_PMB_CFG_CH_SF_FLD_WR(reg, val)                           (reg |= (val) << CMIF_PMB_CFG_CH_SF_BIT_LSB)
#define CMIF_PMB_CFG_CH_SF_FLD_RD(i)                                  ((M_CMIF_PMB_CFG_CH_RD(i) & CMIF_PMB_CFG_CH_SF_BIT_MASK) >> CMIF_PMB_CFG_CH_SF_BIT_LSB)

#define CMIF_PMB_CFG_CH_CH_TYPE_BIT_LSB                               (0)
#define CMIF_PMB_CFG_CH_CH_TYPE_BIT_WIDTH                             (4)
#define CMIF_PMB_CFG_CH_CH_TYPE_BIT_MASK                              ((UINT32) (((1<<CMIF_PMB_CFG_CH_CH_TYPE_BIT_WIDTH)-1) << CMIF_PMB_CFG_CH_CH_TYPE_BIT_LSB) )
#define CMIF_PMB_CFG_CH_CH_TYPE_FLD_WR(reg, val)                      (reg |= (val) << CMIF_PMB_CFG_CH_CH_TYPE_BIT_LSB)
#define CMIF_PMB_CFG_CH_CH_TYPE_FLD_RD(i)                             ((M_CMIF_PMB_CFG_CH_RD(i) & CMIF_PMB_CFG_CH_CH_TYPE_BIT_MASK) >> CMIF_PMB_CFG_CH_CH_TYPE_BIT_LSB)

#define CMIF_MAC_CFG_CH_WALSH_CODE_BIT_LSB                            (7)
#define CMIF_MAC_CFG_CH_WALSH_CODE_BIT_WIDTH                          (8)
#define CMIF_MAC_CFG_CH_WALSH_CODE_BIT_MASK                           ((UINT32) (((1<<CMIF_MAC_CFG_CH_WALSH_CODE_BIT_WIDTH)-1) << CMIF_MAC_CFG_CH_WALSH_CODE_BIT_LSB) )
#define CMIF_MAC_CFG_CH_WALSH_CODE_FLD_WR(reg, val)                   (reg |= (val) << CMIF_MAC_CFG_CH_WALSH_CODE_BIT_LSB)
#define CMIF_MAC_CFG_CH_WALSH_CODE_FLD_RD(i)                          ((M_CMIF_MAC_CFG_CH_RD(i) & CMIF_MAC_CFG_CH_WALSH_CODE_BIT_MASK) >> CMIF_MAC_CFG_CH_WALSH_CODE_BIT_LSB)

#define CMIF_MAC_CFG_CH_SF_BIT_LSB                                    (4)
#define CMIF_MAC_CFG_CH_SF_BIT_WIDTH                                  (3)
#define CMIF_MAC_CFG_CH_SF_BIT_MASK                                   ((UINT32) (((1<<CMIF_MAC_CFG_CH_SF_BIT_WIDTH)-1) << CMIF_MAC_CFG_CH_SF_BIT_LSB) )
#define CMIF_MAC_CFG_CH_SF_FLD_WR(reg, val)                           (reg |= (val) << CMIF_MAC_CFG_CH_SF_BIT_LSB)
#define CMIF_MAC_CFG_CH_SF_FLD_RD(i)                                  ((M_CMIF_MAC_CFG_CH_RD(i) & CMIF_MAC_CFG_CH_SF_BIT_MASK) >> CMIF_MAC_CFG_CH_SF_BIT_LSB)

#define CMIF_MAC_CFG_CH_CH_TYPE_BIT_LSB                               (0)
#define CMIF_MAC_CFG_CH_CH_TYPE_BIT_WIDTH                             (4)
#define CMIF_MAC_CFG_CH_CH_TYPE_BIT_MASK                              ((UINT32) (((1<<CMIF_MAC_CFG_CH_CH_TYPE_BIT_WIDTH)-1) << CMIF_MAC_CFG_CH_CH_TYPE_BIT_LSB) )
#define CMIF_MAC_CFG_CH_CH_TYPE_FLD_WR(reg, val)                      (reg |= (val) << CMIF_MAC_CFG_CH_CH_TYPE_BIT_LSB)
#define CMIF_MAC_CFG_CH_CH_TYPE_FLD_RD(i)                             ((M_CMIF_MAC_CFG_CH_RD(i) & CMIF_MAC_CFG_CH_CH_TYPE_BIT_MASK) >> CMIF_MAC_CFG_CH_CH_TYPE_BIT_LSB)

#define CMIF_RA_CFG_CH_WALSH_CODE_BIT_LSB                             (7)
#define CMIF_RA_CFG_CH_WALSH_CODE_BIT_WIDTH                           (8)
#define CMIF_RA_CFG_CH_WALSH_CODE_BIT_MASK                            ((UINT32) (((1<<CMIF_RA_CFG_CH_WALSH_CODE_BIT_WIDTH)-1) << CMIF_RA_CFG_CH_WALSH_CODE_BIT_LSB) )
#define CMIF_RA_CFG_CH_WALSH_CODE_FLD_WR(reg, val)                    (reg |= (val) << CMIF_RA_CFG_CH_WALSH_CODE_BIT_LSB)
#define CMIF_RA_CFG_CH_WALSH_CODE_FLD_RD(i)                           ((M_CMIF_RA_CFG_CH_RD(i) & CMIF_RA_CFG_CH_WALSH_CODE_BIT_MASK) >> CMIF_RA_CFG_CH_WALSH_CODE_BIT_LSB)

#define CMIF_RA_CFG_CH_SF_BIT_LSB                                     (4)
#define CMIF_RA_CFG_CH_SF_BIT_WIDTH                                   (3)
#define CMIF_RA_CFG_CH_SF_BIT_MASK                                    ((UINT32) (((1<<CMIF_RA_CFG_CH_SF_BIT_WIDTH)-1) << CMIF_RA_CFG_CH_SF_BIT_LSB) )
#define CMIF_RA_CFG_CH_SF_FLD_WR(reg, val)                            (reg |= (val) << CMIF_RA_CFG_CH_SF_BIT_LSB)
#define CMIF_RA_CFG_CH_SF_FLD_RD(i)                                   ((M_CMIF_RA_CFG_CH_RD(i) & CMIF_RA_CFG_CH_SF_BIT_MASK) >> CMIF_RA_CFG_CH_SF_BIT_LSB)

#define CMIF_RA_CFG_CH_CH_TYPE_BIT_LSB                                (0)
#define CMIF_RA_CFG_CH_CH_TYPE_BIT_WIDTH                              (4)
#define CMIF_RA_CFG_CH_CH_TYPE_BIT_MASK                               ((UINT32) (((1<<CMIF_RA_CFG_CH_CH_TYPE_BIT_WIDTH)-1) << CMIF_RA_CFG_CH_CH_TYPE_BIT_LSB) )
#define CMIF_RA_CFG_CH_CH_TYPE_FLD_WR(reg, val)                       (reg |= (val) << CMIF_RA_CFG_CH_CH_TYPE_BIT_LSB)
#define CMIF_RA_CFG_CH_CH_TYPE_FLD_RD(i)                              ((M_CMIF_RA_CFG_CH_RD(i) & CMIF_RA_CFG_CH_CH_TYPE_BIT_MASK) >> CMIF_RA_CFG_CH_CH_TYPE_BIT_LSB)

#define CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_LSB                        (0)
#define CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_WIDTH                      (10)
#define CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_MASK                       ((UINT32) (((1<<CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_WIDTH)-1) << CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_LSB) )
#define CMIF_PN_OFFSET_1XRTT_PN_OFFSET_FLD_WR(reg, val)               (reg |= (val) << CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_LSB)
#define CMIF_PN_OFFSET_1XRTT_PN_OFFSET_FLD_RD(i)                      ((M_CMIF_PN_OFFSET_1XRTT_RD(i) & CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_MASK) >> CMIF_PN_OFFSET_1XRTT_PN_OFFSET_BIT_LSB)

#define CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_LSB                         (0)
#define CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_WIDTH                       (10)
#define CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_MASK                        ((UINT32) (((1<<CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_WIDTH)-1) << CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_LSB) )
#define CMIF_PN_OFFSET_EVDO_PN_OFFSET_FLD_WR(reg, val)                (reg |= (val) << CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_LSB)
#define CMIF_PN_OFFSET_EVDO_PN_OFFSET_FLD_RD(i)                       ((M_CMIF_PN_OFFSET_EVDO_RD(i) & CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_MASK) >> CMIF_PN_OFFSET_EVDO_PN_OFFSET_BIT_LSB)

#define CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_LSB                     (0)
#define CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_WIDTH                   (3)
#define CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_MASK                    ((UINT32) (((1<<CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_WIDTH)-1) << CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_LSB) )
#define CMIF_SECTOR_ID_SERVING_CELL_SECID_FLD_WR(reg, val)            (reg |= (val) << CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_LSB)
#define CMIF_SECTOR_ID_SERVING_CELL_SECID_FLD_RD()                    ((M_CMIF_SECTOR_ID_RD() & CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_MASK) >> CMIF_SECTOR_ID_SERVING_CELL_SECID_BIT_LSB)

#define CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_LSB                  (3)
#define CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_WIDTH                (1)
#define CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_MASK                 ((UINT32) (((1<<CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_WIDTH)-1) << CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_LSB) )
#define CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_FLD_WR(reg, val)         (reg |= (val) << CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_LSB)
#define CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_FLD_RD()                 ((M_CMIF_TARGET_SECTOR_ID_RD() & CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_MASK) >> CMIF_TARGET_SECTOR_ID_CELL_SWITCH_EN_BIT_LSB)

#define CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_LSB               (0)
#define CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_WIDTH             (3)
#define CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_MASK              ((UINT32) (((1<<CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_WIDTH)-1) << CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_LSB) )
#define CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_FLD_WR(reg, val)      (reg |= (val) << CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_LSB)
#define CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_FLD_RD()              ((M_CMIF_TARGET_SECTOR_ID_RD() & CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_MASK) >> CMIF_TARGET_SECTOR_ID_TARGET_CELL_SECID_BIT_LSB)

#define CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_LSB                        (0)
#define CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_WIDTH                      (2)
#define CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_MASK                       ((UINT32) (((1<<CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_WIDTH)-1) << CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_LSB) )
#define CMIF_QOF_INDEX_PHCH0_QOF_INDEX_FLD_WR(reg, val)               (reg |= (val) << CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_LSB)
#define CMIF_QOF_INDEX_PHCH0_QOF_INDEX_FLD_RD(i)                      ((M_CMIF_QOF_INDEX_PHCH0_RD(i) & CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_MASK) >> CMIF_QOF_INDEX_PHCH0_QOF_INDEX_BIT_LSB)

#define CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_LSB                        (0)
#define CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_WIDTH                      (2)
#define CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_MASK                       ((UINT32) (((1<<CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_WIDTH)-1) << CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_LSB) )
#define CMIF_QOF_INDEX_PHCH1_QOF_INDEX_FLD_WR(reg, val)               (reg |= (val) << CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_LSB)
#define CMIF_QOF_INDEX_PHCH1_QOF_INDEX_FLD_RD(i)                      ((M_CMIF_QOF_INDEX_PHCH1_RD(i) & CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_MASK) >> CMIF_QOF_INDEX_PHCH1_QOF_INDEX_BIT_LSB)

#define CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_LSB                   (0)
#define CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_WIDTH                 (1)
#define CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_MASK                  ((UINT32) (((1<<CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_WIDTH)-1) << CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_LSB) )
#define CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_FLD_WR(reg, val)          (reg |= (val) << CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_LSB)
#define CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_FLD_RD()                  ((M_CMIF_FN_QOF_SEL_FW_RD() & CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_MASK) >> CMIF_FN_QOF_SEL_FW_FN7_QOF_EN_PHCH1_BIT_LSB)

#define CMIF_PACK_POS_PACK_POS_BIT_LSB                                (1)
#define CMIF_PACK_POS_PACK_POS_BIT_WIDTH                              (20)
#define CMIF_PACK_POS_PACK_POS_BIT_MASK                               ((UINT32) (((1<<CMIF_PACK_POS_PACK_POS_BIT_WIDTH)-1) << CMIF_PACK_POS_PACK_POS_BIT_LSB) )
#define CMIF_PACK_POS_PACK_POS_FLD_WR(reg, val)                       (reg |= (val) << CMIF_PACK_POS_PACK_POS_BIT_LSB)
#define CMIF_PACK_POS_PACK_POS_FLD_RD()                               ((M_CMIF_PACK_POS_RD() & CMIF_PACK_POS_PACK_POS_BIT_MASK) >> CMIF_PACK_POS_PACK_POS_BIT_LSB)

#define CMIF_PACK_POS_QLIC_EN_BIT_LSB                                 (0)
#define CMIF_PACK_POS_QLIC_EN_BIT_WIDTH                               (1)
#define CMIF_PACK_POS_QLIC_EN_BIT_MASK                                ((UINT32) (((1<<CMIF_PACK_POS_QLIC_EN_BIT_WIDTH)-1) << CMIF_PACK_POS_QLIC_EN_BIT_LSB) )
#define CMIF_PACK_POS_QLIC_EN_FLD_WR(reg, val)                        (reg |= (val) << CMIF_PACK_POS_QLIC_EN_BIT_LSB)
#define CMIF_PACK_POS_QLIC_EN_FLD_RD()                                ((M_CMIF_PACK_POS_RD() & CMIF_PACK_POS_QLIC_EN_BIT_MASK) >> CMIF_PACK_POS_QLIC_EN_BIT_LSB)

#endif /* __C2K_CH_CONFIG_CMIF_H__ */
